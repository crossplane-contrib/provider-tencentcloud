---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusters.cynosdb.tencentcloud.crossplane.io
spec:
  group: cynosdb.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloud
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Provide a resource
          to create a CynosDB cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoPause:
                    description: |-
                      Specify whether the cluster can auto-pause while db_mode is SERVERLESS. Values: yes (default), no.
                      Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
                    type: string
                  autoPauseDelay:
                    description: |-
                      Specify auto-pause delay in second while db_mode is SERVERLESS. Value range: [600, 691200]. Default: 600.
                      Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
                    type: number
                  autoRenewFlag:
                    description: |-
                      Auto renew flag. Valid values are 0(MANUAL_RENEW), 1(AUTO_RENEW). Default value is 0. Only works for PREPAID cluster.
                      Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID cluster.
                    type: number
                  availableZone:
                    description: |-
                      The available zone of the CynosDB Cluster.
                      The available zone of the CynosDB Cluster.
                    type: string
                  chargeType:
                    description: |-
                      The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR.
                      The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
                    type: string
                  clusterName:
                    description: |-
                      Name of CynosDB cluster.
                      Name of CynosDB cluster.
                    type: string
                  cynosVersion:
                    description: |-
                      Kernel version, you can enter it when modifying.
                      Kernel version, you can enter it when modifying.
                    type: string
                  dbMode:
                    description: |-
                      Specify DB mode, only available when db_type is MYSQL. Values: NORMAL (Default), SERVERLESS.
                      Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
                    type: string
                  dbType:
                    description: |-
                      Type of CynosDB, and available values include MYSQL.
                      Type of CynosDB, and available values include `MYSQL`.
                    type: string
                  dbVersion:
                    description: |-
                      Version of CynosDB, which is related to db_type. For MYSQL, available value is 5.7, 8.0.
                      Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`, `8.0`.
                    type: string
                  forceDelete:
                    description: |-
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its All RELATED INSTANCES will be deleted instead of staying recycle bin. Note: works for both PREPAID and POSTPAID_BY_HOUR cluster.
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
                    type: boolean
                  instanceCpuCore:
                    description: |-
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  instanceInitInfos:
                    description: |-
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                    items:
                      properties:
                        cpu:
                          description: |-
                            CPU of instance.
                            CPU of instance.
                          type: number
                        deviceType:
                          description: |-
                            Instance machine type. Values: common, exclusive.
                            Instance machine type. Values: `common`, `exclusive`.
                          type: string
                        instanceCount:
                          description: |-
                            Instance count. Range: [1, 15].
                            Instance count. Range: [1, 15].
                          type: number
                        instanceType:
                          description: |-
                            Instance type. Value: rw, ro.
                            Instance type. Value: `rw`, `ro`.
                          type: string
                        maxRoCount:
                          description: |-
                            Maximum number of Serverless instances. Range [1,15].
                            Maximum number of Serverless instances. Range [1,15].
                          type: number
                        maxRoCpu:
                          description: |-
                            Maximum Serverless Instance Specifications.
                            Maximum Serverless Instance Specifications.
                          type: number
                        memory:
                          description: |-
                            Memory of instance.
                            Memory of instance.
                          type: number
                        minRoCount:
                          description: |-
                            Minimum number of Serverless instances. Range [1,15].
                            Minimum number of Serverless instances. Range [1,15].
                          type: number
                        minRoCpu:
                          description: |-
                            Minimum Serverless Instance Specifications.
                            Minimum Serverless Instance Specifications.
                          type: number
                      type: object
                    type: array
                  instanceMaintainDuration:
                    description: |-
                      Duration time for maintenance, unit in second. 3600 by default.
                      Duration time for maintenance, unit in second. `3600` by default.
                    type: number
                  instanceMaintainStartTime:
                    description: |-
                      Offset time from 00:00, unit in second. For example, 03:00am should be 10800. 10800 by default.
                      Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
                    type: number
                  instanceMaintainWeekdays:
                    description: |-
                      Weekdays for maintenance. ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"] by default.
                      Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceMemorySize:
                    description: |-
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  maxCpu:
                    description: |-
                      Maximum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  minCpu:
                    description: |-
                      Minimum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  oldIpReserveHours:
                    description: |-
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                    type: number
                  paramItems:
                    description: |-
                      Specify parameter list of database. It is valid when param_template_id is set in create cluster. Use data.tencentcloud_mysql_default_params to query available parameter details.
                      Specify parameter list of database. It is valid when `param_template_id` is set in create cluster. Use `data.tencentcloud_mysql_default_params` to query available parameter details.
                    items:
                      properties:
                        currentValue:
                          description: |-
                            Param expected value to set.
                            Param expected value to set.
                          type: string
                        name:
                          description: |-
                            Name of param, e.g. character_set_server.
                            Name of param, e.g. `character_set_server`.
                          type: string
                        oldValue:
                          description: |-
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                          type: string
                      type: object
                    type: array
                  paramTemplateId:
                    description: |-
                      The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  passwordSecretRef:
                    description: |-
                      Password of root account.
                      Password of `root` account.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  port:
                    description: |-
                      Port of CynosDB cluster.
                      Port of CynosDB cluster.
                    type: number
                  prarmTemplateId:
                    description: |-
                      It will be deprecated. Use param_template_id instead. The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  prepaidPeriod:
                    description: |-
                      The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
                      The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
                    type: number
                  projectId:
                    description: |-
                      ID of the project. 0 by default.
                      ID of the project. `0` by default.
                    type: number
                  roGroupSg:
                    description: |-
                      IDs of security group for ro_group.
                      IDs of security group for `ro_group`.
                    items:
                      type: string
                    type: array
                  rwGroupSg:
                    description: |-
                      IDs of security group for rw_group.
                      IDs of security group for `rw_group`.
                    items:
                      type: string
                    type: array
                  serverlessStatusFlag:
                    description: |-
                      Specify whether to pause or resume serverless cluster. values: resume, pause.
                      Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
                    type: string
                  slaveZone:
                    description: |-
                      Multi zone Addresses of the CynosDB Cluster.
                      Multi zone Addresses of the CynosDB Cluster.
                    type: string
                  storageLimit:
                    description: |-
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is MYSQL and charge_type is PREPAID, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is order and pay. when charge_type is POSTPAID_BY_HOUR, this argument is unnecessary.
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this argument is unnecessary.
                    type: number
                  storagePayMode:
                    description: |-
                      Cluster storage billing mode, pay-as-you-go: 0-yearly/monthly: 1-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                      Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                    type: number
                  subnetId:
                    description: |-
                      ID of the subnet within this VPC.
                      ID of the subnet within this VPC.
                    type: string
                  subnetIdRef:
                    description: Reference to a Subnet in vpc to populate subnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: Selector for a Subnet in vpc to populate subnetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      The tags of the CynosDB cluster.
                      The tags of the CynosDB cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  vpcId:
                    description: |-
                      ID of the VPC.
                      ID of the VPC.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in vpc to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in vpc to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoPause:
                    description: |-
                      Specify whether the cluster can auto-pause while db_mode is SERVERLESS. Values: yes (default), no.
                      Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
                    type: string
                  autoPauseDelay:
                    description: |-
                      Specify auto-pause delay in second while db_mode is SERVERLESS. Value range: [600, 691200]. Default: 600.
                      Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
                    type: number
                  autoRenewFlag:
                    description: |-
                      Auto renew flag. Valid values are 0(MANUAL_RENEW), 1(AUTO_RENEW). Default value is 0. Only works for PREPAID cluster.
                      Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID cluster.
                    type: number
                  availableZone:
                    description: |-
                      The available zone of the CynosDB Cluster.
                      The available zone of the CynosDB Cluster.
                    type: string
                  chargeType:
                    description: |-
                      The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR.
                      The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
                    type: string
                  clusterName:
                    description: |-
                      Name of CynosDB cluster.
                      Name of CynosDB cluster.
                    type: string
                  cynosVersion:
                    description: |-
                      Kernel version, you can enter it when modifying.
                      Kernel version, you can enter it when modifying.
                    type: string
                  dbMode:
                    description: |-
                      Specify DB mode, only available when db_type is MYSQL. Values: NORMAL (Default), SERVERLESS.
                      Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
                    type: string
                  dbType:
                    description: |-
                      Type of CynosDB, and available values include MYSQL.
                      Type of CynosDB, and available values include `MYSQL`.
                    type: string
                  dbVersion:
                    description: |-
                      Version of CynosDB, which is related to db_type. For MYSQL, available value is 5.7, 8.0.
                      Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`, `8.0`.
                    type: string
                  forceDelete:
                    description: |-
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its All RELATED INSTANCES will be deleted instead of staying recycle bin. Note: works for both PREPAID and POSTPAID_BY_HOUR cluster.
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
                    type: boolean
                  instanceCpuCore:
                    description: |-
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  instanceInitInfos:
                    description: |-
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                    items:
                      properties:
                        cpu:
                          description: |-
                            CPU of instance.
                            CPU of instance.
                          type: number
                        deviceType:
                          description: |-
                            Instance machine type. Values: common, exclusive.
                            Instance machine type. Values: `common`, `exclusive`.
                          type: string
                        instanceCount:
                          description: |-
                            Instance count. Range: [1, 15].
                            Instance count. Range: [1, 15].
                          type: number
                        instanceType:
                          description: |-
                            Instance type. Value: rw, ro.
                            Instance type. Value: `rw`, `ro`.
                          type: string
                        maxRoCount:
                          description: |-
                            Maximum number of Serverless instances. Range [1,15].
                            Maximum number of Serverless instances. Range [1,15].
                          type: number
                        maxRoCpu:
                          description: |-
                            Maximum Serverless Instance Specifications.
                            Maximum Serverless Instance Specifications.
                          type: number
                        memory:
                          description: |-
                            Memory of instance.
                            Memory of instance.
                          type: number
                        minRoCount:
                          description: |-
                            Minimum number of Serverless instances. Range [1,15].
                            Minimum number of Serverless instances. Range [1,15].
                          type: number
                        minRoCpu:
                          description: |-
                            Minimum Serverless Instance Specifications.
                            Minimum Serverless Instance Specifications.
                          type: number
                      type: object
                    type: array
                  instanceMaintainDuration:
                    description: |-
                      Duration time for maintenance, unit in second. 3600 by default.
                      Duration time for maintenance, unit in second. `3600` by default.
                    type: number
                  instanceMaintainStartTime:
                    description: |-
                      Offset time from 00:00, unit in second. For example, 03:00am should be 10800. 10800 by default.
                      Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
                    type: number
                  instanceMaintainWeekdays:
                    description: |-
                      Weekdays for maintenance. ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"] by default.
                      Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceMemorySize:
                    description: |-
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  maxCpu:
                    description: |-
                      Maximum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  minCpu:
                    description: |-
                      Minimum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  oldIpReserveHours:
                    description: |-
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                    type: number
                  paramItems:
                    description: |-
                      Specify parameter list of database. It is valid when param_template_id is set in create cluster. Use data.tencentcloud_mysql_default_params to query available parameter details.
                      Specify parameter list of database. It is valid when `param_template_id` is set in create cluster. Use `data.tencentcloud_mysql_default_params` to query available parameter details.
                    items:
                      properties:
                        currentValue:
                          description: |-
                            Param expected value to set.
                            Param expected value to set.
                          type: string
                        name:
                          description: |-
                            Name of param, e.g. character_set_server.
                            Name of param, e.g. `character_set_server`.
                          type: string
                        oldValue:
                          description: |-
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                          type: string
                      type: object
                    type: array
                  paramTemplateId:
                    description: |-
                      The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  port:
                    description: |-
                      Port of CynosDB cluster.
                      Port of CynosDB cluster.
                    type: number
                  prarmTemplateId:
                    description: |-
                      It will be deprecated. Use param_template_id instead. The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  prepaidPeriod:
                    description: |-
                      The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
                      The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
                    type: number
                  projectId:
                    description: |-
                      ID of the project. 0 by default.
                      ID of the project. `0` by default.
                    type: number
                  roGroupSg:
                    description: |-
                      IDs of security group for ro_group.
                      IDs of security group for `ro_group`.
                    items:
                      type: string
                    type: array
                  rwGroupSg:
                    description: |-
                      IDs of security group for rw_group.
                      IDs of security group for `rw_group`.
                    items:
                      type: string
                    type: array
                  serverlessStatusFlag:
                    description: |-
                      Specify whether to pause or resume serverless cluster. values: resume, pause.
                      Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
                    type: string
                  slaveZone:
                    description: |-
                      Multi zone Addresses of the CynosDB Cluster.
                      Multi zone Addresses of the CynosDB Cluster.
                    type: string
                  storageLimit:
                    description: |-
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is MYSQL and charge_type is PREPAID, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is order and pay. when charge_type is POSTPAID_BY_HOUR, this argument is unnecessary.
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this argument is unnecessary.
                    type: number
                  storagePayMode:
                    description: |-
                      Cluster storage billing mode, pay-as-you-go: 0-yearly/monthly: 1-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                      Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                    type: number
                  subnetId:
                    description: |-
                      ID of the subnet within this VPC.
                      ID of the subnet within this VPC.
                    type: string
                  subnetIdRef:
                    description: Reference to a Subnet in vpc to populate subnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: Selector for a Subnet in vpc to populate subnetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      The tags of the CynosDB cluster.
                      The tags of the CynosDB cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  vpcId:
                    description: |-
                      ID of the VPC.
                      ID of the VPC.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in vpc to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in vpc to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.availableZone is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.availableZone)
                || (has(self.initProvider) && has(self.initProvider.availableZone))'
            - message: spec.forProvider.clusterName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterName)
                || (has(self.initProvider) && has(self.initProvider.clusterName))'
            - message: spec.forProvider.dbType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.dbType)
                || (has(self.initProvider) && has(self.initProvider.dbType))'
            - message: spec.forProvider.dbVersion is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.dbVersion)
                || (has(self.initProvider) && has(self.initProvider.dbVersion))'
            - message: spec.forProvider.passwordSecretRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  autoPause:
                    description: |-
                      Specify whether the cluster can auto-pause while db_mode is SERVERLESS. Values: yes (default), no.
                      Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
                    type: string
                  autoPauseDelay:
                    description: |-
                      Specify auto-pause delay in second while db_mode is SERVERLESS. Value range: [600, 691200]. Default: 600.
                      Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
                    type: number
                  autoRenewFlag:
                    description: |-
                      Auto renew flag. Valid values are 0(MANUAL_RENEW), 1(AUTO_RENEW). Default value is 0. Only works for PREPAID cluster.
                      Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID cluster.
                    type: number
                  availableZone:
                    description: |-
                      The available zone of the CynosDB Cluster.
                      The available zone of the CynosDB Cluster.
                    type: string
                  chargeType:
                    description: |-
                      The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR.
                      The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
                    type: string
                  charset:
                    description: |-
                      Charset used by CynosDB cluster.
                      Charset used by CynosDB cluster.
                    type: string
                  clusterName:
                    description: |-
                      Name of CynosDB cluster.
                      Name of CynosDB cluster.
                    type: string
                  clusterStatus:
                    description: |-
                      Status of the Cynosdb cluster.
                      Status of the Cynosdb cluster.
                    type: string
                  createTime:
                    description: |-
                      Creation time of the CynosDB cluster.
                      Creation time of the CynosDB cluster.
                    type: string
                  cynosVersion:
                    description: |-
                      Kernel version, you can enter it when modifying.
                      Kernel version, you can enter it when modifying.
                    type: string
                  dbMode:
                    description: |-
                      Specify DB mode, only available when db_type is MYSQL. Values: NORMAL (Default), SERVERLESS.
                      Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
                    type: string
                  dbType:
                    description: |-
                      Type of CynosDB, and available values include MYSQL.
                      Type of CynosDB, and available values include `MYSQL`.
                    type: string
                  dbVersion:
                    description: |-
                      Version of CynosDB, which is related to db_type. For MYSQL, available value is 5.7, 8.0.
                      Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`, `8.0`.
                    type: string
                  forceDelete:
                    description: |-
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its All RELATED INSTANCES will be deleted instead of staying recycle bin. Note: works for both PREPAID and POSTPAID_BY_HOUR cluster.
                      Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR` cluster.
                    type: boolean
                  id:
                    description: ID of the resource.
                    type: string
                  instanceCpuCore:
                    description: |-
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  instanceId:
                    description: |-
                      ID of instance.
                      ID of instance.
                    type: string
                  instanceInitInfos:
                    description: |-
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                      Instance initialization configuration information, mainly used to select instances of different specifications when purchasing a cluster.
                    items:
                      properties:
                        cpu:
                          description: |-
                            CPU of instance.
                            CPU of instance.
                          type: number
                        deviceType:
                          description: |-
                            Instance machine type. Values: common, exclusive.
                            Instance machine type. Values: `common`, `exclusive`.
                          type: string
                        instanceCount:
                          description: |-
                            Instance count. Range: [1, 15].
                            Instance count. Range: [1, 15].
                          type: number
                        instanceType:
                          description: |-
                            Instance type. Value: rw, ro.
                            Instance type. Value: `rw`, `ro`.
                          type: string
                        maxRoCount:
                          description: |-
                            Maximum number of Serverless instances. Range [1,15].
                            Maximum number of Serverless instances. Range [1,15].
                          type: number
                        maxRoCpu:
                          description: |-
                            Maximum Serverless Instance Specifications.
                            Maximum Serverless Instance Specifications.
                          type: number
                        memory:
                          description: |-
                            Memory of instance.
                            Memory of instance.
                          type: number
                        minRoCount:
                          description: |-
                            Minimum number of Serverless instances. Range [1,15].
                            Minimum number of Serverless instances. Range [1,15].
                          type: number
                        minRoCpu:
                          description: |-
                            Minimum Serverless Instance Specifications.
                            Minimum Serverless Instance Specifications.
                          type: number
                      type: object
                    type: array
                  instanceMaintainDuration:
                    description: |-
                      Duration time for maintenance, unit in second. 3600 by default.
                      Duration time for maintenance, unit in second. `3600` by default.
                    type: number
                  instanceMaintainStartTime:
                    description: |-
                      Offset time from 00:00, unit in second. For example, 03:00am should be 10800. 10800 by default.
                      Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
                    type: number
                  instanceMaintainWeekdays:
                    description: |-
                      Weekdays for maintenance. ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"] by default.
                      Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceMemorySize:
                    description: |-
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                      Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
                    type: number
                  instanceName:
                    description: |-
                      Name of instance.
                      Name of instance.
                    type: string
                  instanceStatus:
                    description: |-
                      Status of the instance.
                      Status of the instance.
                    type: string
                  instanceStorageSize:
                    description: |-
                      Storage size of the instance, unit in GB.
                      Storage size of the instance, unit in GB.
                    type: number
                  maxCpu:
                    description: |-
                      Maximum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  minCpu:
                    description: |-
                      Minimum CPU core count, required while db_mode is SERVERLESS, request DescribeServerlessInstanceSpecs for more reference.
                      Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more reference.
                    type: number
                  oldIpReserveHours:
                    description: |-
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                      Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be filled in when modifying the vpc.
                    type: number
                  paramItems:
                    description: |-
                      Specify parameter list of database. It is valid when param_template_id is set in create cluster. Use data.tencentcloud_mysql_default_params to query available parameter details.
                      Specify parameter list of database. It is valid when `param_template_id` is set in create cluster. Use `data.tencentcloud_mysql_default_params` to query available parameter details.
                    items:
                      properties:
                        currentValue:
                          description: |-
                            Param expected value to set.
                            Param expected value to set.
                          type: string
                        name:
                          description: |-
                            Name of param, e.g. character_set_server.
                            Name of param, e.g. `character_set_server`.
                          type: string
                        oldValue:
                          description: |-
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                            Param old value, indicates the value which already set, this value is required when modifying current_value.
                          type: string
                      type: object
                    type: array
                  paramTemplateId:
                    description: |-
                      The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  port:
                    description: |-
                      Port of CynosDB cluster.
                      Port of CynosDB cluster.
                    type: number
                  prarmTemplateId:
                    description: |-
                      It will be deprecated. Use param_template_id instead. The ID of the parameter template.
                      The ID of the parameter template.
                    type: number
                  prepaidPeriod:
                    description: |-
                      The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
                      The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
                    type: number
                  projectId:
                    description: |-
                      ID of the project. 0 by default.
                      ID of the project. `0` by default.
                    type: number
                  roGroupAddr:
                    description: |-
                      Readonly addresses. Each element contains the following attributes:
                      Readonly addresses. Each element contains the following attributes:
                    items:
                      properties:
                        ip:
                          description: IP address for readonly connection.
                          type: string
                        port:
                          description: Port of CynosDB cluster.
                          type: number
                      type: object
                    type: array
                  roGroupId:
                    description: |-
                      ID of read-only instance group.
                      ID of read-only instance group.
                    type: string
                  roGroupInstances:
                    description: |-
                      List of instances in the read-only instance group.
                      List of instances in the read-only instance group.
                    items:
                      properties:
                        instanceId:
                          description: ID of instance.
                          type: string
                        instanceName:
                          description: Name of instance.
                          type: string
                      type: object
                    type: array
                  roGroupSg:
                    description: |-
                      IDs of security group for ro_group.
                      IDs of security group for `ro_group`.
                    items:
                      type: string
                    type: array
                  rwGroupAddr:
                    description: |-
                      Read-write addresses. Each element contains the following attributes:
                      Read-write addresses. Each element contains the following attributes:
                    items:
                      properties:
                        ip:
                          description: IP address for readonly connection.
                          type: string
                        port:
                          description: Port of CynosDB cluster.
                          type: number
                      type: object
                    type: array
                  rwGroupId:
                    description: |-
                      ID of read-write instance group.
                      ID of read-write instance group.
                    type: string
                  rwGroupInstances:
                    description: |-
                      List of instances in the read-write instance group.
                      List of instances in the read-write instance group.
                    items:
                      properties:
                        instanceId:
                          description: ID of instance.
                          type: string
                        instanceName:
                          description: Name of instance.
                          type: string
                      type: object
                    type: array
                  rwGroupSg:
                    description: |-
                      IDs of security group for rw_group.
                      IDs of security group for `rw_group`.
                    items:
                      type: string
                    type: array
                  serverlessStatus:
                    description: |-
                      Serverless cluster status. NOTE: This is a readonly attribute, to modify, please set serverless_status_flag.
                      Serverless cluster status. NOTE: This is a readonly attribute, to modify, please set `serverless_status_flag`.
                    type: string
                  serverlessStatusFlag:
                    description: |-
                      Specify whether to pause or resume serverless cluster. values: resume, pause.
                      Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
                    type: string
                  slaveZone:
                    description: |-
                      Multi zone Addresses of the CynosDB Cluster.
                      Multi zone Addresses of the CynosDB Cluster.
                    type: string
                  storageLimit:
                    description: |-
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is MYSQL and charge_type is PREPAID, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is order and pay. when charge_type is POSTPAID_BY_HOUR, this argument is unnecessary.
                      Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this argument is unnecessary.
                    type: number
                  storagePayMode:
                    description: |-
                      Cluster storage billing mode, pay-as-you-go: 0-yearly/monthly: 1-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                      Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
                    type: number
                  storageUsed:
                    description: |-
                      Used storage of CynosDB cluster, unit in MB.
                      Used storage of CynosDB cluster, unit in MB.
                    type: number
                  subnetId:
                    description: |-
                      ID of the subnet within this VPC.
                      ID of the subnet within this VPC.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      The tags of the CynosDB cluster.
                      The tags of the CynosDB cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  vpcId:
                    description: |-
                      ID of the VPC.
                      ID of the VPC.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
