//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonResourceSpecInitParameters) DeepCopyInto(out *CommonResourceSpecInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MultiDisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonResourceSpecInitParameters.
func (in *CommonResourceSpecInitParameters) DeepCopy() *CommonResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommonResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonResourceSpecObservation) DeepCopyInto(out *CommonResourceSpecObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MultiDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonResourceSpecObservation.
func (in *CommonResourceSpecObservation) DeepCopy() *CommonResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(CommonResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonResourceSpecParameters) DeepCopyInto(out *CommonResourceSpecParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MultiDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonResourceSpecParameters.
func (in *CommonResourceSpecParameters) DeepCopy() *CommonResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(CommonResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecInitParameters) DeepCopyInto(out *CoreResourceSpecInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]CoreResourceSpecMultiDisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecInitParameters.
func (in *CoreResourceSpecInitParameters) DeepCopy() *CoreResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecMultiDisksInitParameters) DeepCopyInto(out *CoreResourceSpecMultiDisksInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecMultiDisksInitParameters.
func (in *CoreResourceSpecMultiDisksInitParameters) DeepCopy() *CoreResourceSpecMultiDisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecMultiDisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecMultiDisksObservation) DeepCopyInto(out *CoreResourceSpecMultiDisksObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecMultiDisksObservation.
func (in *CoreResourceSpecMultiDisksObservation) DeepCopy() *CoreResourceSpecMultiDisksObservation {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecMultiDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecMultiDisksParameters) DeepCopyInto(out *CoreResourceSpecMultiDisksParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecMultiDisksParameters.
func (in *CoreResourceSpecMultiDisksParameters) DeepCopy() *CoreResourceSpecMultiDisksParameters {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecMultiDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecObservation) DeepCopyInto(out *CoreResourceSpecObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]CoreResourceSpecMultiDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecObservation.
func (in *CoreResourceSpecObservation) DeepCopy() *CoreResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreResourceSpecParameters) DeepCopyInto(out *CoreResourceSpecParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]CoreResourceSpecMultiDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreResourceSpecParameters.
func (in *CoreResourceSpecParameters) DeepCopy() *CoreResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(CoreResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrCluster) DeepCopyInto(out *EmrCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrCluster.
func (in *EmrCluster) DeepCopy() *EmrCluster {
	if in == nil {
		return nil
	}
	out := new(EmrCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EmrCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterInitParameters) DeepCopyInto(out *EmrClusterInitParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(float64)
		**out = **in
	}
	if in.DisplayStrategy != nil {
		in, out := &in.DisplayStrategy, &out.DisplayStrategy
		*out = new(string)
		**out = **in
	}
	if in.ExtendFsField != nil {
		in, out := &in.ExtendFsField, &out.ExtendFsField
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.NeedMasterWan != nil {
		in, out := &in.NeedMasterWan, &out.NeedMasterWan
		*out = new(string)
		**out = **in
	}
	if in.PayMode != nil {
		in, out := &in.PayMode, &out.PayMode
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementInfo != nil {
		in, out := &in.PlacementInfo, &out.PlacementInfo
		*out = make([]PlacementInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreExecutedFileSettings != nil {
		in, out := &in.PreExecutedFileSettings, &out.PreExecutedFileSettings
		*out = make([]PreExecutedFileSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = make([]ResourceSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SceneName != nil {
		in, out := &in.SceneName, &out.SceneName
		*out = new(string)
		**out = **in
	}
	if in.SgID != nil {
		in, out := &in.SgID, &out.SgID
		*out = new(string)
		**out = **in
	}
	if in.Softwares != nil {
		in, out := &in.Softwares, &out.Softwares
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportHa != nil {
		in, out := &in.SupportHa, &out.SupportHa
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminateNodeInfo != nil {
		in, out := &in.TerminateNodeInfo, &out.TerminateNodeInfo
		*out = make([]TerminateNodeInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSpan != nil {
		in, out := &in.TimeSpan, &out.TimeSpan
		*out = new(float64)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
	if in.VPCSettings != nil {
		in, out := &in.VPCSettings, &out.VPCSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterInitParameters.
func (in *EmrClusterInitParameters) DeepCopy() *EmrClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmrClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterList) DeepCopyInto(out *EmrClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EmrCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterList.
func (in *EmrClusterList) DeepCopy() *EmrClusterList {
	if in == nil {
		return nil
	}
	out := new(EmrClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EmrClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterObservation) DeepCopyInto(out *EmrClusterObservation) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(float64)
		**out = **in
	}
	if in.DisplayStrategy != nil {
		in, out := &in.DisplayStrategy, &out.DisplayStrategy
		*out = new(string)
		**out = **in
	}
	if in.ExtendFsField != nil {
		in, out := &in.ExtendFsField, &out.ExtendFsField
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.NeedMasterWan != nil {
		in, out := &in.NeedMasterWan, &out.NeedMasterWan
		*out = new(string)
		**out = **in
	}
	if in.PayMode != nil {
		in, out := &in.PayMode, &out.PayMode
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementInfo != nil {
		in, out := &in.PlacementInfo, &out.PlacementInfo
		*out = make([]PlacementInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreExecutedFileSettings != nil {
		in, out := &in.PreExecutedFileSettings, &out.PreExecutedFileSettings
		*out = make([]PreExecutedFileSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = make([]ResourceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SceneName != nil {
		in, out := &in.SceneName, &out.SceneName
		*out = new(string)
		**out = **in
	}
	if in.SgID != nil {
		in, out := &in.SgID, &out.SgID
		*out = new(string)
		**out = **in
	}
	if in.Softwares != nil {
		in, out := &in.Softwares, &out.Softwares
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportHa != nil {
		in, out := &in.SupportHa, &out.SupportHa
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminateNodeInfo != nil {
		in, out := &in.TerminateNodeInfo, &out.TerminateNodeInfo
		*out = make([]TerminateNodeInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSpan != nil {
		in, out := &in.TimeSpan, &out.TimeSpan
		*out = new(float64)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
	if in.VPCSettings != nil {
		in, out := &in.VPCSettings, &out.VPCSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterObservation.
func (in *EmrClusterObservation) DeepCopy() *EmrClusterObservation {
	if in == nil {
		return nil
	}
	out := new(EmrClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterParameters) DeepCopyInto(out *EmrClusterParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(float64)
		**out = **in
	}
	if in.DisplayStrategy != nil {
		in, out := &in.DisplayStrategy, &out.DisplayStrategy
		*out = new(string)
		**out = **in
	}
	if in.ExtendFsField != nil {
		in, out := &in.ExtendFsField, &out.ExtendFsField
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.LoginSettingsSecretRef != nil {
		in, out := &in.LoginSettingsSecretRef, &out.LoginSettingsSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.NeedMasterWan != nil {
		in, out := &in.NeedMasterWan, &out.NeedMasterWan
		*out = new(string)
		**out = **in
	}
	if in.PayMode != nil {
		in, out := &in.PayMode, &out.PayMode
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementInfo != nil {
		in, out := &in.PlacementInfo, &out.PlacementInfo
		*out = make([]PlacementInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreExecutedFileSettings != nil {
		in, out := &in.PreExecutedFileSettings, &out.PreExecutedFileSettings
		*out = make([]PreExecutedFileSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = make([]ResourceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SceneName != nil {
		in, out := &in.SceneName, &out.SceneName
		*out = new(string)
		**out = **in
	}
	if in.SgID != nil {
		in, out := &in.SgID, &out.SgID
		*out = new(string)
		**out = **in
	}
	if in.Softwares != nil {
		in, out := &in.Softwares, &out.Softwares
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportHa != nil {
		in, out := &in.SupportHa, &out.SupportHa
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminateNodeInfo != nil {
		in, out := &in.TerminateNodeInfo, &out.TerminateNodeInfo
		*out = make([]TerminateNodeInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSpan != nil {
		in, out := &in.TimeSpan, &out.TimeSpan
		*out = new(float64)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
	if in.VPCSettings != nil {
		in, out := &in.VPCSettings, &out.VPCSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterParameters.
func (in *EmrClusterParameters) DeepCopy() *EmrClusterParameters {
	if in == nil {
		return nil
	}
	out := new(EmrClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterSpec) DeepCopyInto(out *EmrClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterSpec.
func (in *EmrClusterSpec) DeepCopy() *EmrClusterSpec {
	if in == nil {
		return nil
	}
	out := new(EmrClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmrClusterStatus) DeepCopyInto(out *EmrClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmrClusterStatus.
func (in *EmrClusterStatus) DeepCopy() *EmrClusterStatus {
	if in == nil {
		return nil
	}
	out := new(EmrClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecInitParameters) DeepCopyInto(out *MasterResourceSpecInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MasterResourceSpecMultiDisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecInitParameters.
func (in *MasterResourceSpecInitParameters) DeepCopy() *MasterResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecMultiDisksInitParameters) DeepCopyInto(out *MasterResourceSpecMultiDisksInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecMultiDisksInitParameters.
func (in *MasterResourceSpecMultiDisksInitParameters) DeepCopy() *MasterResourceSpecMultiDisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecMultiDisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecMultiDisksObservation) DeepCopyInto(out *MasterResourceSpecMultiDisksObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecMultiDisksObservation.
func (in *MasterResourceSpecMultiDisksObservation) DeepCopy() *MasterResourceSpecMultiDisksObservation {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecMultiDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecMultiDisksParameters) DeepCopyInto(out *MasterResourceSpecMultiDisksParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecMultiDisksParameters.
func (in *MasterResourceSpecMultiDisksParameters) DeepCopy() *MasterResourceSpecMultiDisksParameters {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecMultiDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecObservation) DeepCopyInto(out *MasterResourceSpecObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MasterResourceSpecMultiDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecObservation.
func (in *MasterResourceSpecObservation) DeepCopy() *MasterResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterResourceSpecParameters) DeepCopyInto(out *MasterResourceSpecParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]MasterResourceSpecMultiDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterResourceSpecParameters.
func (in *MasterResourceSpecParameters) DeepCopy() *MasterResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(MasterResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiDisksInitParameters) DeepCopyInto(out *MultiDisksInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiDisksInitParameters.
func (in *MultiDisksInitParameters) DeepCopy() *MultiDisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultiDisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiDisksObservation) DeepCopyInto(out *MultiDisksObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiDisksObservation.
func (in *MultiDisksObservation) DeepCopy() *MultiDisksObservation {
	if in == nil {
		return nil
	}
	out := new(MultiDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiDisksParameters) DeepCopyInto(out *MultiDisksParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiDisksParameters.
func (in *MultiDisksParameters) DeepCopy() *MultiDisksParameters {
	if in == nil {
		return nil
	}
	out := new(MultiDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInfoInitParameters) DeepCopyInto(out *PlacementInfoInitParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInfoInitParameters.
func (in *PlacementInfoInitParameters) DeepCopy() *PlacementInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInfoObservation) DeepCopyInto(out *PlacementInfoObservation) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInfoObservation.
func (in *PlacementInfoObservation) DeepCopy() *PlacementInfoObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInfoParameters) DeepCopyInto(out *PlacementInfoParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInfoParameters.
func (in *PlacementInfoParameters) DeepCopy() *PlacementInfoParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreExecutedFileSettingsInitParameters) DeepCopyInto(out *PreExecutedFileSettingsInitParameters) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CosFileName != nil {
		in, out := &in.CosFileName, &out.CosFileName
		*out = new(string)
		**out = **in
	}
	if in.CosFileURI != nil {
		in, out := &in.CosFileURI, &out.CosFileURI
		*out = new(string)
		**out = **in
	}
	if in.CosSecretID != nil {
		in, out := &in.CosSecretID, &out.CosSecretID
		*out = new(string)
		**out = **in
	}
	if in.CosSecretKey != nil {
		in, out := &in.CosSecretKey, &out.CosSecretKey
		*out = new(string)
		**out = **in
	}
	if in.Remark != nil {
		in, out := &in.Remark, &out.Remark
		*out = new(string)
		**out = **in
	}
	if in.RunOrder != nil {
		in, out := &in.RunOrder, &out.RunOrder
		*out = new(float64)
		**out = **in
	}
	if in.WhenRun != nil {
		in, out := &in.WhenRun, &out.WhenRun
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreExecutedFileSettingsInitParameters.
func (in *PreExecutedFileSettingsInitParameters) DeepCopy() *PreExecutedFileSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreExecutedFileSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreExecutedFileSettingsObservation) DeepCopyInto(out *PreExecutedFileSettingsObservation) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CosFileName != nil {
		in, out := &in.CosFileName, &out.CosFileName
		*out = new(string)
		**out = **in
	}
	if in.CosFileURI != nil {
		in, out := &in.CosFileURI, &out.CosFileURI
		*out = new(string)
		**out = **in
	}
	if in.CosSecretID != nil {
		in, out := &in.CosSecretID, &out.CosSecretID
		*out = new(string)
		**out = **in
	}
	if in.CosSecretKey != nil {
		in, out := &in.CosSecretKey, &out.CosSecretKey
		*out = new(string)
		**out = **in
	}
	if in.Remark != nil {
		in, out := &in.Remark, &out.Remark
		*out = new(string)
		**out = **in
	}
	if in.RunOrder != nil {
		in, out := &in.RunOrder, &out.RunOrder
		*out = new(float64)
		**out = **in
	}
	if in.WhenRun != nil {
		in, out := &in.WhenRun, &out.WhenRun
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreExecutedFileSettingsObservation.
func (in *PreExecutedFileSettingsObservation) DeepCopy() *PreExecutedFileSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(PreExecutedFileSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreExecutedFileSettingsParameters) DeepCopyInto(out *PreExecutedFileSettingsParameters) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CosFileName != nil {
		in, out := &in.CosFileName, &out.CosFileName
		*out = new(string)
		**out = **in
	}
	if in.CosFileURI != nil {
		in, out := &in.CosFileURI, &out.CosFileURI
		*out = new(string)
		**out = **in
	}
	if in.CosSecretID != nil {
		in, out := &in.CosSecretID, &out.CosSecretID
		*out = new(string)
		**out = **in
	}
	if in.CosSecretKey != nil {
		in, out := &in.CosSecretKey, &out.CosSecretKey
		*out = new(string)
		**out = **in
	}
	if in.Remark != nil {
		in, out := &in.Remark, &out.Remark
		*out = new(string)
		**out = **in
	}
	if in.RunOrder != nil {
		in, out := &in.RunOrder, &out.RunOrder
		*out = new(float64)
		**out = **in
	}
	if in.WhenRun != nil {
		in, out := &in.WhenRun, &out.WhenRun
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreExecutedFileSettingsParameters.
func (in *PreExecutedFileSettingsParameters) DeepCopy() *PreExecutedFileSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(PreExecutedFileSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecInitParameters) DeepCopyInto(out *ResourceSpecInitParameters) {
	*out = *in
	if in.CommonCount != nil {
		in, out := &in.CommonCount, &out.CommonCount
		*out = new(float64)
		**out = **in
	}
	if in.CommonResourceSpec != nil {
		in, out := &in.CommonResourceSpec, &out.CommonResourceSpec
		*out = make([]CommonResourceSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CoreResourceSpec != nil {
		in, out := &in.CoreResourceSpec, &out.CoreResourceSpec
		*out = make([]CoreResourceSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterCount != nil {
		in, out := &in.MasterCount, &out.MasterCount
		*out = new(float64)
		**out = **in
	}
	if in.MasterResourceSpec != nil {
		in, out := &in.MasterResourceSpec, &out.MasterResourceSpec
		*out = make([]MasterResourceSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(float64)
		**out = **in
	}
	if in.TaskResourceSpec != nil {
		in, out := &in.TaskResourceSpec, &out.TaskResourceSpec
		*out = make([]TaskResourceSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecInitParameters.
func (in *ResourceSpecInitParameters) DeepCopy() *ResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecObservation) DeepCopyInto(out *ResourceSpecObservation) {
	*out = *in
	if in.CommonCount != nil {
		in, out := &in.CommonCount, &out.CommonCount
		*out = new(float64)
		**out = **in
	}
	if in.CommonResourceSpec != nil {
		in, out := &in.CommonResourceSpec, &out.CommonResourceSpec
		*out = make([]CommonResourceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CoreResourceSpec != nil {
		in, out := &in.CoreResourceSpec, &out.CoreResourceSpec
		*out = make([]CoreResourceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterCount != nil {
		in, out := &in.MasterCount, &out.MasterCount
		*out = new(float64)
		**out = **in
	}
	if in.MasterResourceSpec != nil {
		in, out := &in.MasterResourceSpec, &out.MasterResourceSpec
		*out = make([]MasterResourceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(float64)
		**out = **in
	}
	if in.TaskResourceSpec != nil {
		in, out := &in.TaskResourceSpec, &out.TaskResourceSpec
		*out = make([]TaskResourceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecObservation.
func (in *ResourceSpecObservation) DeepCopy() *ResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecParameters) DeepCopyInto(out *ResourceSpecParameters) {
	*out = *in
	if in.CommonCount != nil {
		in, out := &in.CommonCount, &out.CommonCount
		*out = new(float64)
		**out = **in
	}
	if in.CommonResourceSpec != nil {
		in, out := &in.CommonResourceSpec, &out.CommonResourceSpec
		*out = make([]CommonResourceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CoreResourceSpec != nil {
		in, out := &in.CoreResourceSpec, &out.CoreResourceSpec
		*out = make([]CoreResourceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterCount != nil {
		in, out := &in.MasterCount, &out.MasterCount
		*out = new(float64)
		**out = **in
	}
	if in.MasterResourceSpec != nil {
		in, out := &in.MasterResourceSpec, &out.MasterResourceSpec
		*out = make([]MasterResourceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(float64)
		**out = **in
	}
	if in.TaskResourceSpec != nil {
		in, out := &in.TaskResourceSpec, &out.TaskResourceSpec
		*out = make([]TaskResourceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecParameters.
func (in *ResourceSpecParameters) DeepCopy() *ResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecInitParameters) DeepCopyInto(out *TaskResourceSpecInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]TaskResourceSpecMultiDisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecInitParameters.
func (in *TaskResourceSpecInitParameters) DeepCopy() *TaskResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecMultiDisksInitParameters) DeepCopyInto(out *TaskResourceSpecMultiDisksInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecMultiDisksInitParameters.
func (in *TaskResourceSpecMultiDisksInitParameters) DeepCopy() *TaskResourceSpecMultiDisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecMultiDisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecMultiDisksObservation) DeepCopyInto(out *TaskResourceSpecMultiDisksObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecMultiDisksObservation.
func (in *TaskResourceSpecMultiDisksObservation) DeepCopy() *TaskResourceSpecMultiDisksObservation {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecMultiDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecMultiDisksParameters) DeepCopyInto(out *TaskResourceSpecMultiDisksParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecMultiDisksParameters.
func (in *TaskResourceSpecMultiDisksParameters) DeepCopy() *TaskResourceSpecMultiDisksParameters {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecMultiDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecObservation) DeepCopyInto(out *TaskResourceSpecObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]TaskResourceSpecMultiDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecObservation.
func (in *TaskResourceSpecObservation) DeepCopy() *TaskResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskResourceSpecParameters) DeepCopyInto(out *TaskResourceSpecParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MemSize != nil {
		in, out := &in.MemSize, &out.MemSize
		*out = new(float64)
		**out = **in
	}
	if in.MultiDisks != nil {
		in, out := &in.MultiDisks, &out.MultiDisks
		*out = make([]TaskResourceSpecMultiDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootSize != nil {
		in, out := &in.RootSize, &out.RootSize
		*out = new(float64)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskResourceSpecParameters.
func (in *TaskResourceSpecParameters) DeepCopy() *TaskResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TaskResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminateNodeInfoInitParameters) DeepCopyInto(out *TerminateNodeInfoInitParameters) {
	*out = *in
	if in.CvmInstanceIds != nil {
		in, out := &in.CvmInstanceIds, &out.CvmInstanceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodeFlag != nil {
		in, out := &in.NodeFlag, &out.NodeFlag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminateNodeInfoInitParameters.
func (in *TerminateNodeInfoInitParameters) DeepCopy() *TerminateNodeInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TerminateNodeInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminateNodeInfoObservation) DeepCopyInto(out *TerminateNodeInfoObservation) {
	*out = *in
	if in.CvmInstanceIds != nil {
		in, out := &in.CvmInstanceIds, &out.CvmInstanceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodeFlag != nil {
		in, out := &in.NodeFlag, &out.NodeFlag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminateNodeInfoObservation.
func (in *TerminateNodeInfoObservation) DeepCopy() *TerminateNodeInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TerminateNodeInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminateNodeInfoParameters) DeepCopyInto(out *TerminateNodeInfoParameters) {
	*out = *in
	if in.CvmInstanceIds != nil {
		in, out := &in.CvmInstanceIds, &out.CvmInstanceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodeFlag != nil {
		in, out := &in.NodeFlag, &out.NodeFlag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminateNodeInfoParameters.
func (in *TerminateNodeInfoParameters) DeepCopy() *TerminateNodeInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TerminateNodeInfoParameters)
	in.DeepCopyInto(out)
	return out
}
