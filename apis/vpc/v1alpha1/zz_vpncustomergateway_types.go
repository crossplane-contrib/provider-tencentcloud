/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPNCustomerGatewayInitParameters struct {

	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	BGPAsn *float64 `json:"bgpAsn,omitempty" tf:"bgp_asn,omitempty"`

	// Name of the customer gateway. The length of character is limited to 1-60.
	// Name of the customer gateway. The length of character is limited to 1-60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Public IP of the customer gateway.
	// Public IP of the customer gateway.
	PublicIPAddress *string `json:"publicIpAddress,omitempty" tf:"public_ip_address,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type VPNCustomerGatewayObservation struct {

	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	BGPAsn *float64 `json:"bgpAsn,omitempty" tf:"bgp_asn,omitempty"`

	// Create time of the customer gateway.
	// Create time of the customer gateway.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the customer gateway. The length of character is limited to 1-60.
	// Name of the customer gateway. The length of character is limited to 1-60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Public IP of the customer gateway.
	// Public IP of the customer gateway.
	PublicIPAddress *string `json:"publicIpAddress,omitempty" tf:"public_ip_address,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type VPNCustomerGatewayParameters struct {

	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	// BGP ASN. Value range: 1 - 4294967295. Using BGP requires configuring ASN. 139341, 45090, and 58835 are not available.
	// +kubebuilder:validation:Optional
	BGPAsn *float64 `json:"bgpAsn,omitempty" tf:"bgp_asn,omitempty"`

	// Name of the customer gateway. The length of character is limited to 1-60.
	// Name of the customer gateway. The length of character is limited to 1-60.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Public IP of the customer gateway.
	// Public IP of the customer gateway.
	// +kubebuilder:validation:Optional
	PublicIPAddress *string `json:"publicIpAddress,omitempty" tf:"public_ip_address,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// VPNCustomerGatewaySpec defines the desired state of VPNCustomerGateway
type VPNCustomerGatewaySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPNCustomerGatewayParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPNCustomerGatewayInitParameters `json:"initProvider,omitempty"`
}

// VPNCustomerGatewayStatus defines the observed state of VPNCustomerGateway.
type VPNCustomerGatewayStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPNCustomerGatewayObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPNCustomerGateway is the Schema for the VPNCustomerGateways API. Provides a resource to create a VPN customer gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type VPNCustomerGateway struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.publicIpAddress) || (has(self.initProvider) && has(self.initProvider.publicIpAddress))",message="spec.forProvider.publicIpAddress is a required parameter"
	Spec   VPNCustomerGatewaySpec   `json:"spec"`
	Status VPNCustomerGatewayStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPNCustomerGatewayList contains a list of VPNCustomerGateways
type VPNCustomerGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPNCustomerGateway `json:"items"`
}

// Repository type metadata.
var (
	VPNCustomerGateway_Kind             = "VPNCustomerGateway"
	VPNCustomerGateway_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPNCustomerGateway_Kind}.String()
	VPNCustomerGateway_KindAPIVersion   = VPNCustomerGateway_Kind + "." + CRDGroupVersion.String()
	VPNCustomerGateway_GroupVersionKind = CRDGroupVersion.WithKind(VPNCustomerGateway_Kind)
)

func init() {
	SchemeBuilder.Register(&VPNCustomerGateway{}, &VPNCustomerGatewayList{})
}
