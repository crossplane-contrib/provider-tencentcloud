/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadonlyInstanceInitParameters struct {

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Pay type of the SQL Server instance. Available values PREPAID, POSTPAID_BY_HOUR.
	// Pay type of the SQL Server instance. Available values `PREPAID`, `POSTPAID_BY_HOUR`.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Indicate that the master instance upgrade or not. true for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with DUAL(ha_type), 2017(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	// Indicate that the master instance upgrade or not. `true` for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with `DUAL`(ha_type), `2017`(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Indicates the master instance ID of recovery instances.
	// Indicates the master instance ID of recovery instances.
	// +crossplane:generate:reference:type=Instance
	MasterInstanceID *string `json:"masterInstanceId,omitempty" tf:"master_instance_id,omitempty"`

	// Reference to a Instance to populate masterInstanceId.
	// +kubebuilder:validation:Optional
	MasterInstanceIDRef *v1.Reference `json:"masterInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate masterInstanceId.
	// +kubebuilder:validation:Optional
	MasterInstanceIDSelector *v1.Selector `json:"masterInstanceIdSelector,omitempty" tf:"-"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server instance.
	// Name of the SQL Server instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period in month. The value does not exceed 48.
	// Purchase instance period in month. The value does not exceed 48.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// ID of the readonly group that this instance belongs to. When readonly_group_type set value 3, it must be set with valid value.
	// ID of the readonly group that this instance belongs to. When `readonly_group_type` set value `3`, it must be set with valid value.
	ReadonlyGroupID *string `json:"readonlyGroupId,omitempty" tf:"readonly_group_id,omitempty"`

	// Required when readonly_group_type=2, the name of the newly created read-only group.
	// Required when `readonly_group_type`=2, the name of the newly created read-only group.
	ReadonlyGroupName *string `json:"readonlyGroupName,omitempty" tf:"readonly_group_name,omitempty"`

	// Type of readonly group. Valid values: 1, 3. 1 for one auto-assigned readonly instance per one readonly group, 2 for creating new readonly group, 3 for all exist readonly instances stay in the exist readonly group. For now, only 1 and 3 are supported.
	// Type of readonly group. Valid values: `1`, `3`. `1` for one auto-assigned readonly instance per one readonly group, `2` for creating new readonly group, `3` for all exist readonly instances stay in the exist readonly group. For now, only `1` and `3` are supported.
	ReadonlyGroupType *float64 `json:"readonlyGroupType,omitempty" tf:"readonly_group_type,omitempty"`

	// Required when readonly_group_type=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	// Required when `readonly_group_type`=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	ReadonlyGroupsIsOfflineDelay *float64 `json:"readonlyGroupsIsOfflineDelay,omitempty" tf:"readonly_groups_is_offline_delay,omitempty"`

	// Required when readonly_group_type=2 and readonly_groups_is_offline_delay=1, the threshold for delayed elimination of newly created read-only groups.
	// Required when `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, the threshold for delayed elimination of newly created read-only groups.
	ReadonlyGroupsMaxDelayTime *float64 `json:"readonlyGroupsMaxDelayTime,omitempty" tf:"readonly_groups_max_delay_time,omitempty"`

	// When readonly_group_type=2 and readonly_groups_is_offline_delay=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	// When `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	ReadonlyGroupsMinInGroup *float64 `json:"readonlyGroupsMinInGroup,omitempty" tf:"readonly_groups_min_in_group,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the SQL Server.
	// The tags of the SQL Server.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// System time zone, default: China Standard Time.
	// System time zone, default: `China Standard Time`.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// ID of VPC.
	// ID of VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// It has been deprecated from version 1.81.2. The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	// The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`
}

type ReadonlyInstanceObservation struct {

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Pay type of the SQL Server instance. Available values PREPAID, POSTPAID_BY_HOUR.
	// Pay type of the SQL Server instance. Available values `PREPAID`, `POSTPAID_BY_HOUR`.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Create time of the SQL Server instance.
	// Create time of the SQL Server instance.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Internet address domain name.
	// Internet address domain name.
	DNSPodDomain *string `json:"dnsPodDomain,omitempty" tf:"dns_pod_domain,omitempty"`

	// Version of the SQL Server database engine.
	// Version of the SQL Server database engine.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Indicate that the master instance upgrade or not. true for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with DUAL(ha_type), 2017(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	// Indicate that the master instance upgrade or not. `true` for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with `DUAL`(ha_type), `2017`(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Instance type.
	// Instance type.
	HaType *string `json:"haType,omitempty" tf:"ha_type,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the master instance ID of recovery instances.
	// Indicates the master instance ID of recovery instances.
	MasterInstanceID *string `json:"masterInstanceId,omitempty" tf:"master_instance_id,omitempty"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server instance.
	// Name of the SQL Server instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period in month. The value does not exceed 48.
	// Purchase instance period in month. The value does not exceed 48.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// ID of the readonly group that this instance belongs to. When readonly_group_type set value 3, it must be set with valid value.
	// ID of the readonly group that this instance belongs to. When `readonly_group_type` set value `3`, it must be set with valid value.
	ReadonlyGroupID *string `json:"readonlyGroupId,omitempty" tf:"readonly_group_id,omitempty"`

	// Required when readonly_group_type=2, the name of the newly created read-only group.
	// Required when `readonly_group_type`=2, the name of the newly created read-only group.
	ReadonlyGroupName *string `json:"readonlyGroupName,omitempty" tf:"readonly_group_name,omitempty"`

	// Type of readonly group. Valid values: 1, 3. 1 for one auto-assigned readonly instance per one readonly group, 2 for creating new readonly group, 3 for all exist readonly instances stay in the exist readonly group. For now, only 1 and 3 are supported.
	// Type of readonly group. Valid values: `1`, `3`. `1` for one auto-assigned readonly instance per one readonly group, `2` for creating new readonly group, `3` for all exist readonly instances stay in the exist readonly group. For now, only `1` and `3` are supported.
	ReadonlyGroupType *float64 `json:"readonlyGroupType,omitempty" tf:"readonly_group_type,omitempty"`

	// Required when readonly_group_type=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	// Required when `readonly_group_type`=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	ReadonlyGroupsIsOfflineDelay *float64 `json:"readonlyGroupsIsOfflineDelay,omitempty" tf:"readonly_groups_is_offline_delay,omitempty"`

	// Required when readonly_group_type=2 and readonly_groups_is_offline_delay=1, the threshold for delayed elimination of newly created read-only groups.
	// Required when `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, the threshold for delayed elimination of newly created read-only groups.
	ReadonlyGroupsMaxDelayTime *float64 `json:"readonlyGroupsMaxDelayTime,omitempty" tf:"readonly_groups_max_delay_time,omitempty"`

	// When readonly_group_type=2 and readonly_groups_is_offline_delay=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	// When `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	ReadonlyGroupsMinInGroup *float64 `json:"readonlyGroupsMinInGroup,omitempty" tf:"readonly_groups_min_in_group,omitempty"`

	// Readonly flag. RO (read-only instance), MASTER (primary instance with read-only instances). If it is left empty, it refers to an instance which is not read-only and has no RO group.
	// Readonly flag. `RO` (read-only instance), `MASTER` (primary instance with read-only instances). If it is left empty, it refers to an instance which is not read-only and has no RO group.
	RoFlag *string `json:"roFlag,omitempty" tf:"ro_flag,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Status of the SQL Server instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	// Status of the SQL Server instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the SQL Server.
	// The tags of the SQL Server.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// External port number.
	// External port number.
	TgwWanVport *float64 `json:"tgwWanVport,omitempty" tf:"tgw_wan_vport,omitempty"`

	// System time zone, default: China Standard Time.
	// System time zone, default: `China Standard Time`.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// ID of VPC.
	// ID of VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// IP for private access.
	// IP for private access.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// Port for private access.
	// Port for private access.
	Vport *float64 `json:"vport,omitempty" tf:"vport,omitempty"`

	// It has been deprecated from version 1.81.2. The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	// The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`
}

type ReadonlyInstanceParameters struct {

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// +kubebuilder:validation:Optional
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Pay type of the SQL Server instance. Available values PREPAID, POSTPAID_BY_HOUR.
	// Pay type of the SQL Server instance. Available values `PREPAID`, `POSTPAID_BY_HOUR`.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Indicate that the master instance upgrade or not. true for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with DUAL(ha_type), 2017(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	// Indicate that the master instance upgrade or not. `true` for upgrading the master SQL Server instance to cluster type by force. Default is false. Note: this is not supported with `DUAL`(ha_type), `2017`(engine_version) master SQL Server instance, for it will cause ha_type of the master SQL Server instance change.
	// +kubebuilder:validation:Optional
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Indicates the master instance ID of recovery instances.
	// Indicates the master instance ID of recovery instances.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	MasterInstanceID *string `json:"masterInstanceId,omitempty" tf:"master_instance_id,omitempty"`

	// Reference to a Instance to populate masterInstanceId.
	// +kubebuilder:validation:Optional
	MasterInstanceIDRef *v1.Reference `json:"masterInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate masterInstanceId.
	// +kubebuilder:validation:Optional
	MasterInstanceIDSelector *v1.Selector `json:"masterInstanceIdSelector,omitempty" tf:"-"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	// +kubebuilder:validation:Optional
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server instance.
	// Name of the SQL Server instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period in month. The value does not exceed 48.
	// Purchase instance period in month. The value does not exceed 48.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// ID of the readonly group that this instance belongs to. When readonly_group_type set value 3, it must be set with valid value.
	// ID of the readonly group that this instance belongs to. When `readonly_group_type` set value `3`, it must be set with valid value.
	// +kubebuilder:validation:Optional
	ReadonlyGroupID *string `json:"readonlyGroupId,omitempty" tf:"readonly_group_id,omitempty"`

	// Required when readonly_group_type=2, the name of the newly created read-only group.
	// Required when `readonly_group_type`=2, the name of the newly created read-only group.
	// +kubebuilder:validation:Optional
	ReadonlyGroupName *string `json:"readonlyGroupName,omitempty" tf:"readonly_group_name,omitempty"`

	// Type of readonly group. Valid values: 1, 3. 1 for one auto-assigned readonly instance per one readonly group, 2 for creating new readonly group, 3 for all exist readonly instances stay in the exist readonly group. For now, only 1 and 3 are supported.
	// Type of readonly group. Valid values: `1`, `3`. `1` for one auto-assigned readonly instance per one readonly group, `2` for creating new readonly group, `3` for all exist readonly instances stay in the exist readonly group. For now, only `1` and `3` are supported.
	// +kubebuilder:validation:Optional
	ReadonlyGroupType *float64 `json:"readonlyGroupType,omitempty" tf:"readonly_group_type,omitempty"`

	// Required when readonly_group_type=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	// Required when `readonly_group_type`=2, whether the newly created read-only group has delay elimination enabled, 1-enabled, 0-disabled. When the delay between the read-only copy and the primary instance exceeds the threshold, it is automatically removed.
	// +kubebuilder:validation:Optional
	ReadonlyGroupsIsOfflineDelay *float64 `json:"readonlyGroupsIsOfflineDelay,omitempty" tf:"readonly_groups_is_offline_delay,omitempty"`

	// Required when readonly_group_type=2 and readonly_groups_is_offline_delay=1, the threshold for delayed elimination of newly created read-only groups.
	// Required when `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, the threshold for delayed elimination of newly created read-only groups.
	// +kubebuilder:validation:Optional
	ReadonlyGroupsMaxDelayTime *float64 `json:"readonlyGroupsMaxDelayTime,omitempty" tf:"readonly_groups_max_delay_time,omitempty"`

	// When readonly_group_type=2 and readonly_groups_is_offline_delay=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	// When `readonly_group_type`=2 and `readonly_groups_is_offline_delay`=1, it is required. After the newly created read-only group is delayed and removed, at least the number of read-only copies should be retained.
	// +kubebuilder:validation:Optional
	ReadonlyGroupsMinInGroup *float64 `json:"readonlyGroupsMinInGroup,omitempty" tf:"readonly_groups_min_in_group,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	// +kubebuilder:validation:Optional
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the SQL Server.
	// The tags of the SQL Server.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// System time zone, default: China Standard Time.
	// System time zone, default: `China Standard Time`.
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// ID of VPC.
	// ID of VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +kubebuilder:validation:Optional
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// It has been deprecated from version 1.81.2. The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	// The way to execute the allocation. Supported values include: 0 - execute immediately, 1 - execute in maintenance window.
	// +kubebuilder:validation:Optional
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`
}

// ReadonlyInstanceSpec defines the desired state of ReadonlyInstance
type ReadonlyInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadonlyInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReadonlyInstanceInitParameters `json:"initProvider,omitempty"`
}

// ReadonlyInstanceStatus defines the observed state of ReadonlyInstance.
type ReadonlyInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadonlyInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ReadonlyInstance is the Schema for the ReadonlyInstances API. Provides a SQL Server instance resource to create read-only database instances.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ReadonlyInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memory) || (has(self.initProvider) && has(self.initProvider.memory))",message="spec.forProvider.memory is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.readonlyGroupType) || (has(self.initProvider) && has(self.initProvider.readonlyGroupType))",message="spec.forProvider.readonlyGroupType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storage) || (has(self.initProvider) && has(self.initProvider.storage))",message="spec.forProvider.storage is a required parameter"
	Spec   ReadonlyInstanceSpec   `json:"spec"`
	Status ReadonlyInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyInstanceList contains a list of ReadonlyInstances
type ReadonlyInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadonlyInstance `json:"items"`
}

// Repository type metadata.
var (
	ReadonlyInstance_Kind             = "ReadonlyInstance"
	ReadonlyInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadonlyInstance_Kind}.String()
	ReadonlyInstance_KindAPIVersion   = ReadonlyInstance_Kind + "." + CRDGroupVersion.String()
	ReadonlyInstance_GroupVersionKind = CRDGroupVersion.WithKind(ReadonlyInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadonlyInstance{}, &ReadonlyInstanceList{})
}
