/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BasicInstanceInitParameters struct {

	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	AutoRenew *float64 `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// The CPU number of the SQL Server basic instance.
	// The CPU number of the SQL Server basic instance.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Pay type of the SQL Server basic instance. For now, only POSTPAID_BY_HOUR is valid.
	// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	Collation *string `json:"collation,omitempty" tf:"collation,omitempty"`

	// Version of the SQL Server basic database engine. Allowed values are 2008R2(SQL Server 2008 Enterprise), 2012SP3(SQL Server 2012 Enterprise), 2016SP1 (SQL Server 2016 Enterprise), 201602(SQL Server 2016 Standard) and 2017(SQL Server 2017 Enterprise). Default is 2008R2.
	// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The host type of the purchased instance, CLOUD_PREMIUM for virtual machine high-performance cloud disk, CLOUD_SSD for virtual machine SSD cloud disk, CLOUD_HSSD for virtual machine enhanced cloud disk, CLOUD_BSSD for virtual machine general purpose SSD cloud disk.
	// The host type of the purchased instance, `CLOUD_PREMIUM` for virtual machine high-performance cloud disk, `CLOUD_SSD` for virtual machine SSD cloud disk, `CLOUD_HSSD` for virtual machine enhanced cloud disk, `CLOUD_BSSD` for virtual machine general purpose SSD cloud disk.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Start time of the maintenance in one day, format like HH:mm.
	// Start time of the maintenance in one day, format like `HH:mm`.
	MaintenanceStartTime *string `json:"maintenanceStartTime,omitempty" tf:"maintenance_start_time,omitempty"`

	// The timespan of maintenance in one day, unit is hour.
	// The timespan of maintenance in one day, unit is hour.
	MaintenanceTimeSpan *float64 `json:"maintenanceTimeSpan,omitempty" tf:"maintenance_time_span,omitempty"`

	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// +listType=set
	MaintenanceWeekSet []*float64 `json:"maintenanceWeekSet,omitempty" tf:"maintenance_week_set,omitempty"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server basic instance.
	// Name of the SQL Server basic instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID, default value is 0.
	// Project ID, default value is 0.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the SQL Server basic instance.
	// The tags of the SQL Server basic instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of VPC.
	// ID of VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`
}

type BasicInstanceObservation struct {

	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	AutoRenew *float64 `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// The CPU number of the SQL Server basic instance.
	// The CPU number of the SQL Server basic instance.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Pay type of the SQL Server basic instance. For now, only POSTPAID_BY_HOUR is valid.
	// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	Collation *string `json:"collation,omitempty" tf:"collation,omitempty"`

	// Create time of the SQL Server basic instance.
	// Create time of the SQL Server basic instance.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Internet address domain name.
	// Internet address domain name.
	DNSPodDomain *string `json:"dnsPodDomain,omitempty" tf:"dns_pod_domain,omitempty"`

	// Version of the SQL Server basic database engine. Allowed values are 2008R2(SQL Server 2008 Enterprise), 2012SP3(SQL Server 2012 Enterprise), 2016SP1 (SQL Server 2016 Enterprise), 201602(SQL Server 2016 Standard) and 2017(SQL Server 2017 Enterprise). Default is 2008R2.
	// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The host type of the purchased instance, CLOUD_PREMIUM for virtual machine high-performance cloud disk, CLOUD_SSD for virtual machine SSD cloud disk, CLOUD_HSSD for virtual machine enhanced cloud disk, CLOUD_BSSD for virtual machine general purpose SSD cloud disk.
	// The host type of the purchased instance, `CLOUD_PREMIUM` for virtual machine high-performance cloud disk, `CLOUD_SSD` for virtual machine SSD cloud disk, `CLOUD_HSSD` for virtual machine enhanced cloud disk, `CLOUD_BSSD` for virtual machine general purpose SSD cloud disk.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Start time of the maintenance in one day, format like HH:mm.
	// Start time of the maintenance in one day, format like `HH:mm`.
	MaintenanceStartTime *string `json:"maintenanceStartTime,omitempty" tf:"maintenance_start_time,omitempty"`

	// The timespan of maintenance in one day, unit is hour.
	// The timespan of maintenance in one day, unit is hour.
	MaintenanceTimeSpan *float64 `json:"maintenanceTimeSpan,omitempty" tf:"maintenance_time_span,omitempty"`

	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// +listType=set
	MaintenanceWeekSet []*float64 `json:"maintenanceWeekSet,omitempty" tf:"maintenance_week_set,omitempty"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server basic instance.
	// Name of the SQL Server basic instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID, default value is 0.
	// Project ID, default value is 0.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Status of the SQL Server basic instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	// Status of the SQL Server basic instance. 1 for applying, 2 for running, 3 for running with limit, 4 for isolated, 5 for recycling, 6 for recycled, 7 for running with task, 8 for off-line, 9 for expanding, 10 for migrating, 11 for readonly, 12 for rebooting.
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the SQL Server basic instance.
	// The tags of the SQL Server basic instance.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// External port number.
	// External port number.
	TgwWanVport *float64 `json:"tgwWanVport,omitempty" tf:"tgw_wan_vport,omitempty"`

	// ID of VPC.
	// ID of VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// IP for private access.
	// IP for private access.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// Port for private access.
	// Port for private access.
	Vport *float64 `json:"vport,omitempty" tf:"vport,omitempty"`
}

type BasicInstanceParameters struct {

	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	// Automatic renewal sign. 0 for normal renewal, 1 for automatic renewal, the default is 1 automatic renewal. Only valid when purchasing a prepaid instance.
	// +kubebuilder:validation:Optional
	AutoRenew *float64 `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// Whether to use the voucher automatically; 1 for yes, 0 for no, the default is 0.
	// +kubebuilder:validation:Optional
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Availability zone.
	// Availability zone.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// The CPU number of the SQL Server basic instance.
	// The CPU number of the SQL Server basic instance.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Pay type of the SQL Server basic instance. For now, only POSTPAID_BY_HOUR is valid.
	// Pay type of the SQL Server basic instance. For now, only `POSTPAID_BY_HOUR` is valid.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	// System character set sorting rule, default: Chinese_PRC_CI_AS.
	// +kubebuilder:validation:Optional
	Collation *string `json:"collation,omitempty" tf:"collation,omitempty"`

	// Version of the SQL Server basic database engine. Allowed values are 2008R2(SQL Server 2008 Enterprise), 2012SP3(SQL Server 2012 Enterprise), 2016SP1 (SQL Server 2016 Enterprise), 201602(SQL Server 2016 Standard) and 2017(SQL Server 2017 Enterprise). Default is 2008R2.
	// Version of the SQL Server basic database engine. Allowed values are `2008R2`(SQL Server 2008 Enterprise), `2012SP3`(SQL Server 2012 Enterprise), `2016SP1` (SQL Server 2016 Enterprise), `201602`(SQL Server 2016 Standard) and `2017`(SQL Server 2017 Enterprise). Default is `2008R2`.
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The host type of the purchased instance, CLOUD_PREMIUM for virtual machine high-performance cloud disk, CLOUD_SSD for virtual machine SSD cloud disk, CLOUD_HSSD for virtual machine enhanced cloud disk, CLOUD_BSSD for virtual machine general purpose SSD cloud disk.
	// The host type of the purchased instance, `CLOUD_PREMIUM` for virtual machine high-performance cloud disk, `CLOUD_SSD` for virtual machine SSD cloud disk, `CLOUD_HSSD` for virtual machine enhanced cloud disk, `CLOUD_BSSD` for virtual machine general purpose SSD cloud disk.
	// +kubebuilder:validation:Optional
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Start time of the maintenance in one day, format like HH:mm.
	// Start time of the maintenance in one day, format like `HH:mm`.
	// +kubebuilder:validation:Optional
	MaintenanceStartTime *string `json:"maintenanceStartTime,omitempty" tf:"maintenance_start_time,omitempty"`

	// The timespan of maintenance in one day, unit is hour.
	// The timespan of maintenance in one day, unit is hour.
	// +kubebuilder:validation:Optional
	MaintenanceTimeSpan *float64 `json:"maintenanceTimeSpan,omitempty" tf:"maintenance_time_span,omitempty"`

	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// A list of integer indicates weekly maintenance. For example, [1,7] presents do weekly maintenance on every Monday and Sunday.
	// +kubebuilder:validation:Optional
	// +listType=set
	MaintenanceWeekSet []*float64 `json:"maintenanceWeekSet,omitempty" tf:"maintenance_week_set,omitempty"`

	// Memory size (in GB). Allowed value must be larger than memory that data source tencentcloud_sqlserver_specinfos provides.
	// Memory size (in GB). Allowed value must be larger than `memory` that data source `tencentcloud_sqlserver_specinfos` provides.
	// +kubebuilder:validation:Optional
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Name of the SQL Server basic instance.
	// Name of the SQL Server basic instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	// Purchase instance period, the default value is 1, which means one month. The value does not exceed 48.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID, default value is 0.
	// Project ID, default value is 0.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Security group bound to the instance.
	// Security group bound to the instance.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of storage_min and storage_max which data source tencentcloud_sqlserver_specinfos provides.
	// Disk size (in GB). Allowed value must be a multiple of 10. The storage must be set with the limit of `storage_min` and `storage_max` which data source `tencentcloud_sqlserver_specinfos` provides.
	// +kubebuilder:validation:Optional
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// ID of subnet.
	// ID of subnet.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the SQL Server basic instance.
	// The tags of the SQL Server basic instance.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of VPC.
	// ID of VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// An array of voucher IDs, currently only one can be used for a single order.
	// An array of voucher IDs, currently only one can be used for a single order.
	// +kubebuilder:validation:Optional
	// +listType=set
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`
}

// BasicInstanceSpec defines the desired state of BasicInstance
type BasicInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BasicInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BasicInstanceInitParameters `json:"initProvider,omitempty"`
}

// BasicInstanceStatus defines the observed state of BasicInstance.
type BasicInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BasicInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BasicInstance is the Schema for the BasicInstances API. Provides a SQL Server instance resource to create basic database instances.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type BasicInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cpu) || (has(self.initProvider) && has(self.initProvider.cpu))",message="spec.forProvider.cpu is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.machineType) || (has(self.initProvider) && has(self.initProvider.machineType))",message="spec.forProvider.machineType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memory) || (has(self.initProvider) && has(self.initProvider.memory))",message="spec.forProvider.memory is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storage) || (has(self.initProvider) && has(self.initProvider.storage))",message="spec.forProvider.storage is a required parameter"
	Spec   BasicInstanceSpec   `json:"spec"`
	Status BasicInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BasicInstanceList contains a list of BasicInstances
type BasicInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BasicInstance `json:"items"`
}

// Repository type metadata.
var (
	BasicInstance_Kind             = "BasicInstance"
	BasicInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BasicInstance_Kind}.String()
	BasicInstance_KindAPIVersion   = BasicInstance_Kind + "." + CRDGroupVersion.String()
	BasicInstance_GroupVersionKind = CRDGroupVersion.WithKind(BasicInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&BasicInstance{}, &BasicInstanceList{})
}
