/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ScaleWorkerDataDiskInitParameters struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type ScaleWorkerDataDiskObservation struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type ScaleWorkerDataDiskParameters struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	// +kubebuilder:validation:Optional
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	// +kubebuilder:validation:Optional
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	// +kubebuilder:validation:Optional
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	// +kubebuilder:validation:Optional
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type ScaleWorkerGpuArgsInitParameters struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type ScaleWorkerGpuArgsObservation struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type ScaleWorkerGpuArgsParameters struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	// +kubebuilder:validation:Optional
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type ScaleWorkerInitParameters struct {

	// ID of the cluster.
	// ID of the cluster.
	// +crossplane:generate:reference:type=Cluster
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// Used to save results of CVMs creation error messages.
	// Used to save results of CVMs creation error messages.
	CreateResultOutputFile *string `json:"createResultOutputFile,omitempty" tf:"create_result_output_file,omitempty"`

	// Configurations of tke data disk.
	// Configurations of tke data disk.
	DataDisk []ScaleWorkerDataDiskInitParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node.
	// Custom parameter information related to the node.
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	GpuArgs []ScaleWorkerGpuArgsInitParameters `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// Labels of kubernetes scale worker created nodes.
	// Labels of kubernetes scale worker created nodes.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target. Default is not mounting.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Node taint.
	// Node taint.
	Taints []ScaleWorkerTaintsInitParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	UserScript *string `json:"userScript,omitempty" tf:"user_script,omitempty"`

	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	WorkerConfig []ScaleWorkerWorkerConfigInitParameters `json:"workerConfig,omitempty" tf:"worker_config,omitempty"`
}

type ScaleWorkerObservation struct {

	// ID of the cluster.
	// ID of the cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Used to save results of CVMs creation error messages.
	// Used to save results of CVMs creation error messages.
	CreateResultOutputFile *string `json:"createResultOutputFile,omitempty" tf:"create_result_output_file,omitempty"`

	// Configurations of tke data disk.
	// Configurations of tke data disk.
	DataDisk []ScaleWorkerDataDiskObservation `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node.
	// Custom parameter information related to the node.
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	GpuArgs []ScaleWorkerGpuArgsObservation `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Labels of kubernetes scale worker created nodes.
	// Labels of kubernetes scale worker created nodes.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target. Default is not mounting.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Node taint.
	// Node taint.
	Taints []ScaleWorkerTaintsObservation `json:"taints,omitempty" tf:"taints,omitempty"`

	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	UserScript *string `json:"userScript,omitempty" tf:"user_script,omitempty"`

	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	WorkerConfig []ScaleWorkerWorkerConfigObservation `json:"workerConfig,omitempty" tf:"worker_config,omitempty"`

	// An information list of kubernetes cluster 'WORKER'. Each element contains the following attributes:
	// An information list of kubernetes cluster 'WORKER'. Each element contains the following attributes:
	WorkerInstancesList []ScaleWorkerWorkerInstancesListObservation `json:"workerInstancesList,omitempty" tf:"worker_instances_list,omitempty"`
}

type ScaleWorkerParameters struct {

	// ID of the cluster.
	// ID of the cluster.
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// Used to save results of CVMs creation error messages.
	// Used to save results of CVMs creation error messages.
	// +kubebuilder:validation:Optional
	CreateResultOutputFile *string `json:"createResultOutputFile,omitempty" tf:"create_result_output_file,omitempty"`

	// Configurations of tke data disk.
	// Configurations of tke data disk.
	// +kubebuilder:validation:Optional
	DataDisk []ScaleWorkerDataDiskParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// +kubebuilder:validation:Optional
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	// +kubebuilder:validation:Optional
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node.
	// Custom parameter information related to the node.
	// +kubebuilder:validation:Optional
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	// +kubebuilder:validation:Optional
	GpuArgs []ScaleWorkerGpuArgsParameters `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// Labels of kubernetes scale worker created nodes.
	// Labels of kubernetes scale worker created nodes.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target. Default is not mounting.
	// +kubebuilder:validation:Optional
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// +kubebuilder:validation:Optional
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Node taint.
	// Node taint.
	// +kubebuilder:validation:Optional
	Taints []ScaleWorkerTaintsParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	// Set whether the added node participates in scheduling. The default value is 0, which means participating in scheduling; non-0 means not participating in scheduling. After the node initialization is completed, you can execute kubectl uncordon nodename to join the node in scheduling.
	// +kubebuilder:validation:Optional
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	// Base64 encoded user script, this script will be executed after the k8s component is run. The user needs to ensure that the script is reentrant and retry logic. The script and its generated log files can be viewed in the /data/ccs_userscript/ path of the node, if required. The node needs to be initialized before it can be added to the schedule. It can be used with the unschedulable parameter. After the final initialization of userScript is completed, add the kubectl uncordon nodename --kubeconfig=/root/.kube/config command to add the node to the schedule.
	// +kubebuilder:validation:Optional
	UserScript *string `json:"userScript,omitempty" tf:"user_script,omitempty"`

	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	// Deploy the machine configuration information of the 'WORK' service, and create <=20 units for common users.
	// +kubebuilder:validation:Optional
	WorkerConfig []ScaleWorkerWorkerConfigParameters `json:"workerConfig,omitempty" tf:"worker_config,omitempty"`
}

type ScaleWorkerTaintsInitParameters struct {

	// Effect of the taint.
	// Effect of the taint.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Tag key.
	// Key of the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Tag value.
	// Value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScaleWorkerTaintsObservation struct {

	// Effect of the taint.
	// Effect of the taint.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Tag key.
	// Key of the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Tag value.
	// Value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScaleWorkerTaintsParameters struct {

	// Effect of the taint.
	// Effect of the taint.
	// +kubebuilder:validation:Optional
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Tag key.
	// Key of the taint.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Tag value.
	// Value of the taint.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScaleWorkerWorkerConfigDataDiskInitParameters struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Indicates whether to encrypt data disk, default false.
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// ID of the custom CMK in the format of UUID or kms-abcd1234. This parameter is used to encrypt cloud disks.
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type ScaleWorkerWorkerConfigDataDiskObservation struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Indicates whether to encrypt data disk, default false.
	// Indicates whether to encrypt data disk, default `false`.
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// ID of the custom CMK in the format of UUID or kms-abcd1234. This parameter is used to encrypt cloud disks.
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type ScaleWorkerWorkerConfigDataDiskParameters struct {

	// This argument was deprecated, use data_disk instead. Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	// +kubebuilder:validation:Optional
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// This argument was deprecated, use data_disk instead. The name of the device or partition to mount.
	// The name of the device or partition to mount.
	// +kubebuilder:validation:Optional
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk, available values: CLOUD_PREMIUM and CLOUD_SSD and CLOUD_HSSD and CLOUD_TSSD.
	// Types of disk, available values: `CLOUD_PREMIUM` and `CLOUD_SSD` and `CLOUD_HSSD` and `CLOUD_TSSD`.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Indicates whether to encrypt data disk, default false.
	// Indicates whether to encrypt data disk, default `false`.
	// +kubebuilder:validation:Optional
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// This argument was deprecated, use data_disk instead. File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	// +kubebuilder:validation:Optional
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// ID of the custom CMK in the format of UUID or kms-abcd1234. This parameter is used to encrypt cloud disks.
	// ID of the custom CMK in the format of UUID or `kms-abcd1234`. This parameter is used to encrypt cloud disks.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Mount target. Default is not mounting.
	// Mount target.
	// +kubebuilder:validation:Optional
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	// +kubebuilder:validation:Optional
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type ScaleWorkerWorkerConfigInitParameters struct {

	// Indicates which availability zone will be used.
	// Indicates which availability zone will be used.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Number of cvm.
	// Number of cvm.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Configurations of tke data disk.
	// Configurations of cvm data disk.
	DataDisk []ScaleWorkerWorkerConfigDataDiskInitParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desired_pod_num` or none.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Id of cvm hpc cluster.
	// Id of cvm hpc cluster.
	HpcClusterID *string `json:"hpcClusterId,omitempty" tf:"hpc_cluster_id,omitempty"`

	// The valid image id, format of img-xxx.
	// The valid image id, format of img-xxx.
	ImgID *string `json:"imgId,omitempty" tf:"img_id,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. The default is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR, PREPAID instance will not terminated after cluster deleted, and may not allow to delete before expired.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Name of the CVMs.
	// Name of the CVMs.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Available values include TRAFFIC_POSTPAID_BY_HOUR.
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys, should be set if password not set.
	// ID list of keys, should be set if `password` not set.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Private network ID.
	// Private network ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// System disk type. For more information on limits of system disk types, see Storage Overview. Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, CLOUD_SSD: SSD, CLOUD_PREMIUM: Premium Cloud Storage. NOTE: CLOUD_BASIC, LOCAL_BASIC and LOCAL_SSD are deprecated.
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// Tag pairs.
	// Tag pairs.
	Tags []TagsInitParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type ScaleWorkerWorkerConfigObservation struct {

	// Indicates which availability zone will be used.
	// Indicates which availability zone will be used.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Number of cvm.
	// Number of cvm.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Configurations of tke data disk.
	// Configurations of cvm data disk.
	DataDisk []ScaleWorkerWorkerConfigDataDiskObservation `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desired_pod_num` or none.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Id of cvm hpc cluster.
	// Id of cvm hpc cluster.
	HpcClusterID *string `json:"hpcClusterId,omitempty" tf:"hpc_cluster_id,omitempty"`

	// The valid image id, format of img-xxx.
	// The valid image id, format of img-xxx.
	ImgID *string `json:"imgId,omitempty" tf:"img_id,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. The default is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR, PREPAID instance will not terminated after cluster deleted, and may not allow to delete before expired.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Name of the CVMs.
	// Name of the CVMs.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Available values include TRAFFIC_POSTPAID_BY_HOUR.
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is 0.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys, should be set if password not set.
	// ID list of keys, should be set if `password` not set.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Private network ID.
	// Private network ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// System disk type. For more information on limits of system disk types, see Storage Overview. Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, CLOUD_SSD: SSD, CLOUD_PREMIUM: Premium Cloud Storage. NOTE: CLOUD_BASIC, LOCAL_BASIC and LOCAL_SSD are deprecated.
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// Tag pairs.
	// Tag pairs.
	Tags []TagsObservation `json:"tags,omitempty" tf:"tags,omitempty"`

	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type ScaleWorkerWorkerConfigParameters struct {

	// Indicates which availability zone will be used.
	// Indicates which availability zone will be used.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// +kubebuilder:validation:Optional
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	// +kubebuilder:validation:Optional
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Number of cvm.
	// Number of cvm.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Configurations of tke data disk.
	// Configurations of cvm data disk.
	// +kubebuilder:validation:Optional
	DataDisk []ScaleWorkerWorkerConfigDataDiskParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in current node. Valid when the cluster enable customized pod cidr.
	// Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it override `[globe_]desired_pod_num` for current node. Either all the fields `desired_pod_num` or none.
	// +kubebuilder:validation:Optional
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	// Disaster recover groups to which a CVM instance belongs. Only support maximum 1.
	// +kubebuilder:validation:Optional
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	// +kubebuilder:validation:Optional
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	// +kubebuilder:validation:Optional
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	// The host name of the attached instance. Dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows example: The length of the name character is [2, 15], letters (capitalization is not restricted), numbers and dashes (-) are allowed, dots (.) are not supported, and not all numbers are allowed. Examples of other types (Linux, etc.): The character length is [2, 60], and multiple dots are allowed. There is a segment between the dots. Each segment allows letters (with no limitation on capitalization), numbers and dashes (-).
	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Id of cvm hpc cluster.
	// Id of cvm hpc cluster.
	// +kubebuilder:validation:Optional
	HpcClusterID *string `json:"hpcClusterId,omitempty" tf:"hpc_cluster_id,omitempty"`

	// The valid image id, format of img-xxx.
	// The valid image id, format of img-xxx.
	// +kubebuilder:validation:Optional
	ImgID *string `json:"imgId,omitempty" tf:"img_id,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. The default is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR, PREPAID instance will not terminated after cluster deleted, and may not allow to delete before expired.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. The default is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`, `PREPAID` instance will not terminated after cluster deleted, and may not allow to delete before expired.
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (time unit is month) of the prepaid instance. NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Name of the CVMs.
	// Name of the CVMs.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Available values include TRAFFIC_POSTPAID_BY_HOUR.
	// Charge types for network traffic. Available values include `TRAFFIC_POSTPAID_BY_HOUR`.
	// +kubebuilder:validation:Optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is 0.
	// +kubebuilder:validation:Optional
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys, should be set if password not set.
	// ID list of keys, should be set if `password` not set.
	// +kubebuilder:validation:Optional
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Password to access, should be set if key_ids not set.
	// Password to access, should be set if `key_ids` not set.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	// +kubebuilder:validation:Optional
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	// +kubebuilder:validation:Optional
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Private network ID.
	// Private network ID.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId" tf:"subnet_id,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	// +kubebuilder:validation:Optional
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// System disk type. For more information on limits of system disk types, see Storage Overview. Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, CLOUD_SSD: SSD, CLOUD_PREMIUM: Premium Cloud Storage. NOTE: CLOUD_BASIC, LOCAL_BASIC and LOCAL_SSD are deprecated.
	// System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_SSD`: SSD, `CLOUD_PREMIUM`: Premium Cloud Storage. NOTE: `CLOUD_BASIC`, `LOCAL_BASIC` and `LOCAL_SSD` are deprecated.
	// +kubebuilder:validation:Optional
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// Tag pairs.
	// Tag pairs.
	// +kubebuilder:validation:Optional
	Tags []TagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	// User data provided to instances, needs to be encoded in base64, and the maximum supported data size is 16KB.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type ScaleWorkerWorkerInstancesListInitParameters struct {
}

type ScaleWorkerWorkerInstancesListObservation struct {

	// Information of the cvm when it is failed.
	FailedReason *string `json:"failedReason,omitempty" tf:"failed_reason,omitempty"`

	// ID of the cvm.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Role of the cvm.
	InstanceRole *string `json:"instanceRole,omitempty" tf:"instance_role,omitempty"`

	// State of the cvm.
	InstanceState *string `json:"instanceState,omitempty" tf:"instance_state,omitempty"`

	// LAN IP of the cvm.
	LanIP *string `json:"lanIp,omitempty" tf:"lan_ip,omitempty"`
}

type ScaleWorkerWorkerInstancesListParameters struct {
}

type TagsInitParameters struct {

	// Tag key.
	// Tag key.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Tag value.
	// Tag value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TagsObservation struct {

	// Tag key.
	// Tag key.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Tag value.
	// Tag value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TagsParameters struct {

	// Tag key.
	// Tag key.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Tag value.
	// Tag value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// ScaleWorkerSpec defines the desired state of ScaleWorker
type ScaleWorkerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ScaleWorkerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ScaleWorkerInitParameters `json:"initProvider,omitempty"`
}

// ScaleWorkerStatus defines the observed state of ScaleWorker.
type ScaleWorkerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ScaleWorkerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ScaleWorker is the Schema for the ScaleWorkers API. Provide a resource to increase instance to cluster
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ScaleWorker struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.workerConfig) || (has(self.initProvider) && has(self.initProvider.workerConfig))",message="spec.forProvider.workerConfig is a required parameter"
	Spec   ScaleWorkerSpec   `json:"spec"`
	Status ScaleWorkerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ScaleWorkerList contains a list of ScaleWorkers
type ScaleWorkerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ScaleWorker `json:"items"`
}

// Repository type metadata.
var (
	ScaleWorker_Kind             = "ScaleWorker"
	ScaleWorker_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ScaleWorker_Kind}.String()
	ScaleWorker_KindAPIVersion   = ScaleWorker_Kind + "." + CRDGroupVersion.String()
	ScaleWorker_GroupVersionKind = CRDGroupVersion.WithKind(ScaleWorker_Kind)
)

func init() {
	SchemeBuilder.Register(&ScaleWorker{}, &ScaleWorkerList{})
}
