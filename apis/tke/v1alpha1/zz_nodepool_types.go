/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnnotationsInitParameters struct {

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name in the map table.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value in the map table.
	// Value in the map table.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AnnotationsObservation struct {

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name in the map table.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value in the map table.
	// Value in the map table.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AnnotationsParameters struct {

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name in the map table.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Value in the map table.
	// Value in the map table.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type AutoScalingConfigDataDiskInitParameters struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role QcloudKMSAccessForCVMRole was provided.
	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// Add extra performance to the data disk. Only works when disk type is CLOUD_TSSD or CLOUD_HSSD and data_size > 460GB.
	// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `data_size` > 460GB.
	ThroughputPerformance *float64 `json:"throughputPerformance,omitempty" tf:"throughput_performance,omitempty"`
}

type AutoScalingConfigDataDiskObservation struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role QcloudKMSAccessForCVMRole was provided.
	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// Add extra performance to the data disk. Only works when disk type is CLOUD_TSSD or CLOUD_HSSD and data_size > 460GB.
	// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `data_size` > 460GB.
	ThroughputPerformance *float64 `json:"throughputPerformance,omitempty" tf:"throughput_performance,omitempty"`
}

type AutoScalingConfigDataDiskParameters struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	// +kubebuilder:validation:Optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD` and `CLOUD_BSSD`.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role QcloudKMSAccessForCVMRole was provided.
	// Specify whether to encrypt data disk, default: false. NOTE: Make sure the instance type is offering and the cam role `QcloudKMSAccessForCVMRole` was provided.
	// +kubebuilder:validation:Optional
	Encrypt *bool `json:"encrypt,omitempty" tf:"encrypt,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	// +kubebuilder:validation:Optional
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// Add extra performance to the data disk. Only works when disk type is CLOUD_TSSD or CLOUD_HSSD and data_size > 460GB.
	// Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD` and `data_size` > 460GB.
	// +kubebuilder:validation:Optional
	ThroughputPerformance *float64 `json:"throughputPerformance,omitempty" tf:"throughput_performance,omitempty"`
}

type AutoScalingConfigInitParameters struct {

	// Backup CVM instance types if specified instance type sold out or mismatch.
	// Backup CVM instance types if specified instance type sold out or mismatch.
	BackupInstanceTypes []*string `json:"backupInstanceTypes,omitempty" tf:"backup_instance_types,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// Name of cam role.
	// Name of cam role.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []AutoScalingConfigDataDiskInitParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Instance name, no more than 60 characters. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default value: ORIGINAL. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default value: `ORIGINAL`. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Valid value: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys.
	// ID list of keys.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Ordered security groups to which a CVM instance belongs.
	// Ordered security groups to which a CVM instance belongs.
	OrderlySecurityGroupIds []*string `json:"orderlySecurityGroupIds,omitempty" tf:"orderly_security_group_ids,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// The order of elements in this field cannot be guaranteed. Use orderly_security_group_ids instead. Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD, CLOUD_BSSD and LOCAL_NVME. Default is CLOUD_PREMIUM.
	// Type of a CVM disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`. Default is `CLOUD_PREMIUM`.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`
}

type AutoScalingConfigObservation struct {

	// Backup CVM instance types if specified instance type sold out or mismatch.
	// Backup CVM instance types if specified instance type sold out or mismatch.
	BackupInstanceTypes []*string `json:"backupInstanceTypes,omitempty" tf:"backup_instance_types,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// Name of cam role.
	// Name of cam role.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []AutoScalingConfigDataDiskObservation `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Instance name, no more than 60 characters. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default value: ORIGINAL. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default value: `ORIGINAL`. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Valid value: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys.
	// ID list of keys.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Ordered security groups to which a CVM instance belongs.
	// Ordered security groups to which a CVM instance belongs.
	OrderlySecurityGroupIds []*string `json:"orderlySecurityGroupIds,omitempty" tf:"orderly_security_group_ids,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// The order of elements in this field cannot be guaranteed. Use orderly_security_group_ids instead. Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD, CLOUD_BSSD and LOCAL_NVME. Default is CLOUD_PREMIUM.
	// Type of a CVM disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`. Default is `CLOUD_PREMIUM`.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`
}

type AutoScalingConfigParameters struct {

	// Backup CVM instance types if specified instance type sold out or mismatch.
	// Backup CVM instance types if specified instance type sold out or mismatch.
	// +kubebuilder:validation:Optional
	BackupInstanceTypes []*string `json:"backupInstanceTypes,omitempty" tf:"backup_instance_types,omitempty"`

	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
	// +kubebuilder:validation:Optional
	BandwidthPackageID *string `json:"bandwidthPackageId,omitempty" tf:"bandwidth_package_id,omitempty"`

	// Name of cam role.
	// Name of cam role.
	// +kubebuilder:validation:Optional
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	// +kubebuilder:validation:Optional
	DataDisk []AutoScalingConfigDataDiskParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is TRUE.
	// +kubebuilder:validation:Optional
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is TRUE.
	// +kubebuilder:validation:Optional
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The hostname of the cloud server, dot (.) and dash (-) cannot be used as the first and last characters of HostName and cannot be used consecutively. Windows instances are not supported. Examples of other types (Linux, etc.): The character length is [2, 40], multiple periods are allowed, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (unlimited case), numbers and dashes (-). Pure numbers are not allowed. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to HostNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, and the default is ORIGINAL. For usage, refer to `HostNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	// +kubebuilder:validation:Optional
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Instance name, no more than 60 characters. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Instance name, no more than 60 characters. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default value: ORIGINAL. For usage, refer to InstanceNameSettings in https://www.tencentcloud.com/document/product/377/31001.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default value: `ORIGINAL`. For usage, refer to `InstanceNameSettings` in https://www.tencentcloud.com/document/product/377/31001.
	// +kubebuilder:validation:Optional
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`

	// Specified types of CVM instance.
	// Specified types of CVM instance.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType" tf:"instance_type,omitempty"`

	// Charge types for network traffic. Valid value: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid value: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	// +kubebuilder:validation:Optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	// +kubebuilder:validation:Optional
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// ID list of keys.
	// ID list of keys.
	// +kubebuilder:validation:Optional
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Ordered security groups to which a CVM instance belongs.
	// Ordered security groups to which a CVM instance belongs.
	// +kubebuilder:validation:Optional
	OrderlySecurityGroupIds []*string `json:"orderlySecurityGroupIds,omitempty" tf:"orderly_security_group_ids,omitempty"`

	// Password to access.
	// Password to access.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	// +kubebuilder:validation:Optional
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// The order of elements in this field cannot be guaranteed. Use orderly_security_group_ids instead. Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	// +kubebuilder:validation:Optional
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	// +kubebuilder:validation:Optional
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	// +kubebuilder:validation:Optional
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD, CLOUD_BSSD and LOCAL_NVME. Default is CLOUD_PREMIUM.
	// Type of a CVM disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`. Default is `CLOUD_PREMIUM`.
	// +kubebuilder:validation:Optional
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`
}

type NodeConfigDataDiskInitParameters struct {

	// Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type NodeConfigDataDiskObservation struct {

	// Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target.
	// Mount target.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type NodeConfigDataDiskParameters struct {

	// Indicate whether to auto format and mount or not. Default is false.
	// Indicate whether to auto format and mount or not. Default is `false`.
	// +kubebuilder:validation:Optional
	AutoFormatAndMount *bool `json:"autoFormatAndMount,omitempty" tf:"auto_format_and_mount,omitempty"`

	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	// The name of the device or partition to mount. NOTE: this argument doesn't support setting in node pool, or will leads to mount error.
	// +kubebuilder:validation:Optional
	DiskPartition *string `json:"diskPartition,omitempty" tf:"disk_partition,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid value: LOCAL_BASIC, LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD, CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD.
	// Types of disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`, `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`, `CLOUD_BSSD` and `LOCAL_NVME`.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// File system, e.g. ext3/ext4/xfs.
	// File system, e.g. `ext3/ext4/xfs`.
	// +kubebuilder:validation:Optional
	FileSystem *string `json:"fileSystem,omitempty" tf:"file_system,omitempty"`

	// Mount target.
	// Mount target.
	// +kubebuilder:validation:Optional
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`
}

type NodeConfigGpuArgsInitParameters struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type NodeConfigGpuArgsObservation struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type NodeConfigGpuArgsParameters struct {

	// CUDA  version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// CUDA  version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Cuda map[string]*string `json:"cuda,omitempty" tf:"cuda,omitempty"`

	// cuDNN version. Format like: { version: String, name: String, doc_name: String, dev_name: String }. version: cuDNN version; name: cuDNN name; doc_name: Doc name of cuDNN; dev_name: Dev name of cuDNN.
	// cuDNN version. Format like: `{ version: String, name: String, doc_name: String, dev_name: String }`. `version`: cuDNN version; `name`: cuDNN name; `doc_name`: Doc name of cuDNN; `dev_name`: Dev name of cuDNN.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Cudnn map[string]*string `json:"cudnn,omitempty" tf:"cudnn,omitempty"`

	// Custom GPU driver. Format like: {address: String}. address: URL of custom GPU driver address.
	// Custom GPU driver. Format like: `{address: String}`. `address`: URL of custom GPU driver address.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomDriver map[string]*string `json:"customDriver,omitempty" tf:"custom_driver,omitempty"`

	// GPU driver version. Format like: { version: String, name: String }. version: Version of GPU driver or CUDA; name: Name of GPU driver or CUDA.
	// GPU driver version. Format like: `{ version: String, name: String }`. `version`: Version of GPU driver or CUDA; `name`: Name of GPU driver or CUDA.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Driver map[string]*string `json:"driver,omitempty" tf:"driver,omitempty"`

	// Whether to enable MIG.
	// Whether to enable MIG.
	// +kubebuilder:validation:Optional
	MigEnable *bool `json:"migEnable,omitempty" tf:"mig_enable,omitempty"`
}

type NodeConfigInitParameters struct {

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []NodeConfigDataDiskInitParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node. This is a white-list parameter.
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	GpuArgs []NodeConfigGpuArgsInitParameters `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// Indicate to schedule the adding node or not. Default is true.
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule *bool `json:"isSchedule,omitempty" tf:"is_schedule,omitempty"`

	// Mount target.
	// Mount target. Default is not mounting.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Base64-encoded User Data text, the length limit is 16KB.
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type NodeConfigObservation struct {

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []NodeConfigDataDiskObservation `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node. This is a white-list parameter.
	// Custom parameter information related to the node. This is a white-list parameter.
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	GpuArgs []NodeConfigGpuArgsObservation `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// Indicate to schedule the adding node or not. Default is true.
	// Indicate to schedule the adding node or not. Default is true.
	IsSchedule *bool `json:"isSchedule,omitempty" tf:"is_schedule,omitempty"`

	// Mount target.
	// Mount target. Default is not mounting.
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Base64-encoded User Data text, the length limit is 16KB.
	// Base64-encoded User Data text, the length limit is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type NodeConfigParameters struct {

	// Configurations of data disk.
	// Configurations of data disk.
	// +kubebuilder:validation:Optional
	DataDisk []NodeConfigDataDiskParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	// Indicate to set desired pod number in node. valid when the cluster is podCIDR.
	// +kubebuilder:validation:Optional
	DesiredPodNum *float64 `json:"desiredPodNum,omitempty" tf:"desired_pod_num,omitempty"`

	// Docker graph path. Default is /var/lib/docker.
	// Docker graph path. Default is `/var/lib/docker`.
	// +kubebuilder:validation:Optional
	DockerGraphPath *string `json:"dockerGraphPath,omitempty" tf:"docker_graph_path,omitempty"`

	// Custom parameter information related to the node. This is a white-list parameter.
	// Custom parameter information related to the node. This is a white-list parameter.
	// +kubebuilder:validation:Optional
	ExtraArgs []*string `json:"extraArgs,omitempty" tf:"extra_args,omitempty"`

	// GPU driver parameters.
	// GPU driver parameters.
	// +kubebuilder:validation:Optional
	GpuArgs []NodeConfigGpuArgsParameters `json:"gpuArgs,omitempty" tf:"gpu_args,omitempty"`

	// Indicate to schedule the adding node or not. Default is true.
	// Indicate to schedule the adding node or not. Default is true.
	// +kubebuilder:validation:Optional
	IsSchedule *bool `json:"isSchedule,omitempty" tf:"is_schedule,omitempty"`

	// Mount target.
	// Mount target. Default is not mounting.
	// +kubebuilder:validation:Optional
	MountTarget *string `json:"mountTarget,omitempty" tf:"mount_target,omitempty"`

	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// Base64-encoded user script, executed before initializing the node, currently only effective for adding existing nodes.
	// +kubebuilder:validation:Optional
	PreStartUserScript *string `json:"preStartUserScript,omitempty" tf:"pre_start_user_script,omitempty"`

	// Base64-encoded User Data text, the length limit is 16KB.
	// Base64-encoded User Data text, the length limit is 16KB.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type NodePoolInitParameters struct {

	// Node Annotation List.
	// Node Annotation List.
	Annotations []AnnotationsInitParameters `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Auto scaling config parameters.
	// Auto scaling config parameters.
	AutoScalingConfig []AutoScalingConfigInitParameters `json:"autoScalingConfig,omitempty" tf:"auto_scaling_config,omitempty"`

	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	AutoUpdateInstanceTags *bool `json:"autoUpdateInstanceTags,omitempty" tf:"auto_update_instance_tags,omitempty"`

	// ID of the cluster.
	// ID of the cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Seconds of scaling group cool down. Default value is 300.
	// Seconds of scaling group cool down. Default value is `300`.
	DefaultCooldown *float64 `json:"defaultCooldown,omitempty" tf:"default_cooldown,omitempty"`

	// Indicate to keep the CVM instance when delete the node pool. Default is true.
	// Indicate to keep the CVM instance when delete the node pool. Default is `true`.
	DeleteKeepInstance *bool `json:"deleteKeepInstance,omitempty" tf:"delete_keep_instance,omitempty"`

	// Indicates whether the node pool deletion protection is enabled.
	// Indicates whether the node pool deletion protection is enabled.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Desired capacity of the node. If enable_auto_scale is set true, this will be a computed parameter.
	// Desired capacity of the node. If `enable_auto_scale` is set `true`, this will be a computed parameter.
	DesiredCapacity *float64 `json:"desiredCapacity,omitempty" tf:"desired_capacity,omitempty"`

	// Indicate whether to enable auto scaling or not.
	// Indicate whether to enable auto scaling or not.
	EnableAutoScale *bool `json:"enableAutoScale,omitempty" tf:"enable_auto_scale,omitempty"`

	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Maximum number of node.
	// Maximum number of node.
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Minimum number of node.
	// Minimum number of node.
	MinSize *float64 `json:"minSize,omitempty" tf:"min_size,omitempty"`

	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	MultiZoneSubnetPolicy *string `json:"multiZoneSubnetPolicy,omitempty" tf:"multi_zone_subnet_policy,omitempty"`

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (`-`) and decimal points.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Node config.
	// Node config.
	NodeConfig []NodeConfigInitParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// Operating system of the cluster. Please refer to TencentCloud Documentation for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	// Operating system of the cluster. Please refer to [TencentCloud Documentation](https://www.tencentcloud.com/document/product/457/46750?lang=en&pg=#list-of-public-images-supported-by-tke) for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	NodeOs *string `json:"nodeOs,omitempty" tf:"node_os,omitempty"`

	// The image version of the node. Valida values are DOCKER_CUSTOMIZE and GENERAL. Default is GENERAL. This parameter will only affect new nodes, not including the existing nodes.
	// The image version of the node. Valida values are `DOCKER_CUSTOMIZE` and `GENERAL`. Default is `GENERAL`. This parameter will only affect new nodes, not including the existing nodes.
	NodeOsType *string `json:"nodeOsType,omitempty" tf:"node_os_type,omitempty"`

	// Available values for retry policies include IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.
	// Available values for retry policies include `IMMEDIATE_RETRY` and `INCREMENTAL_INTERVALS`.
	RetryPolicy *string `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Control how many expectations(desired_capacity) can be tolerated successfully. Unit is percentage, Default is 100. Only can be set if wait_node_ready is true.
	// Control how many expectations(`desired_capacity`) can be tolerated successfully. Unit is percentage, Default is `100`. Only can be set if `wait_node_ready` is `true`.
	ScaleTolerance *float64 `json:"scaleTolerance,omitempty" tf:"scale_tolerance,omitempty"`

	// Name of relative scaling group.
	// Name of relative scaling group.
	ScalingGroupName *string `json:"scalingGroupName,omitempty" tf:"scaling_group_name,omitempty"`

	// Project ID the scaling group belongs to.
	// Project ID the scaling group belongs to.
	ScalingGroupProjectID *float64 `json:"scalingGroupProjectId,omitempty" tf:"scaling_group_project_id,omitempty"`

	// Auto scaling mode. Valid values are CLASSIC_SCALING(scaling by create/destroy instances), WAKE_UP_STOPPED_SCALING(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	// Auto scaling mode. Valid values are `CLASSIC_SCALING`(scaling by create/destroy instances), `WAKE_UP_STOPPED_SCALING`(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	ScalingMode *string `json:"scalingMode,omitempty" tf:"scaling_mode,omitempty"`

	// ID list of subnet, and for VPC it is required.
	// ID list of subnet, and for VPC it is required.
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// Node pool tag specifications, will passthroughs to the scaling instances.
	// Node pool tag specifications, will passthroughs to the scaling instances.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Taints of kubernetes node pool created nodes.
	// Taints of kubernetes node pool created nodes.
	Taints []NodePoolTaintsInitParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Policy of scaling group termination. Available values: ["OLDEST_INSTANCE"], ["NEWEST_INSTANCE"].
	// Policy of scaling group termination. Available values: `["OLDEST_INSTANCE"]`, `["NEWEST_INSTANCE"]`.
	TerminationPolicies []*string `json:"terminationPolicies,omitempty" tf:"termination_policies,omitempty"`

	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// ID of VPC network.
	// ID of VPC network.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if enable_auto_scale is false.
	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if `enable_auto_scale` is `false`.
	WaitNodeReady *bool `json:"waitNodeReady,omitempty" tf:"wait_node_ready,omitempty"`

	// List of auto scaling group available zones, for Basic network it is required.
	// List of auto scaling group available zones, for Basic network it is required.
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type NodePoolObservation struct {

	// Node Annotation List.
	// Node Annotation List.
	Annotations []AnnotationsObservation `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Auto scaling config parameters.
	// Auto scaling config parameters.
	AutoScalingConfig []AutoScalingConfigObservation `json:"autoScalingConfig,omitempty" tf:"auto_scaling_config,omitempty"`

	// The auto scaling group ID.
	// The auto scaling group ID.
	AutoScalingGroupID *string `json:"autoScalingGroupId,omitempty" tf:"auto_scaling_group_id,omitempty"`

	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	AutoUpdateInstanceTags *bool `json:"autoUpdateInstanceTags,omitempty" tf:"auto_update_instance_tags,omitempty"`

	// The total of autoscaling added node.
	// The total of autoscaling added node.
	AutoscalingAddedTotal *float64 `json:"autoscalingAddedTotal,omitempty" tf:"autoscaling_added_total,omitempty"`

	// ID of the cluster.
	// ID of the cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Seconds of scaling group cool down. Default value is 300.
	// Seconds of scaling group cool down. Default value is `300`.
	DefaultCooldown *float64 `json:"defaultCooldown,omitempty" tf:"default_cooldown,omitempty"`

	// Indicate to keep the CVM instance when delete the node pool. Default is true.
	// Indicate to keep the CVM instance when delete the node pool. Default is `true`.
	DeleteKeepInstance *bool `json:"deleteKeepInstance,omitempty" tf:"delete_keep_instance,omitempty"`

	// Indicates whether the node pool deletion protection is enabled.
	// Indicates whether the node pool deletion protection is enabled.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Desired capacity of the node. If enable_auto_scale is set true, this will be a computed parameter.
	// Desired capacity of the node. If `enable_auto_scale` is set `true`, this will be a computed parameter.
	DesiredCapacity *float64 `json:"desiredCapacity,omitempty" tf:"desired_capacity,omitempty"`

	// Indicate whether to enable auto scaling or not.
	// Indicate whether to enable auto scaling or not.
	EnableAutoScale *bool `json:"enableAutoScale,omitempty" tf:"enable_auto_scale,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The launch config ID.
	// The launch config ID.
	LaunchConfigID *string `json:"launchConfigId,omitempty" tf:"launch_config_id,omitempty"`

	// The total of manually added node.
	// The total of manually added node.
	ManuallyAddedTotal *float64 `json:"manuallyAddedTotal,omitempty" tf:"manually_added_total,omitempty"`

	// Maximum number of node.
	// Maximum number of node.
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Minimum number of node.
	// Minimum number of node.
	MinSize *float64 `json:"minSize,omitempty" tf:"min_size,omitempty"`

	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	MultiZoneSubnetPolicy *string `json:"multiZoneSubnetPolicy,omitempty" tf:"multi_zone_subnet_policy,omitempty"`

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (`-`) and decimal points.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Node config.
	// Node config.
	NodeConfig []NodeConfigObservation `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The total node count.
	// The total node count.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`

	// Operating system of the cluster. Please refer to TencentCloud Documentation for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	// Operating system of the cluster. Please refer to [TencentCloud Documentation](https://www.tencentcloud.com/document/product/457/46750?lang=en&pg=#list-of-public-images-supported-by-tke) for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	NodeOs *string `json:"nodeOs,omitempty" tf:"node_os,omitempty"`

	// The image version of the node. Valida values are DOCKER_CUSTOMIZE and GENERAL. Default is GENERAL. This parameter will only affect new nodes, not including the existing nodes.
	// The image version of the node. Valida values are `DOCKER_CUSTOMIZE` and `GENERAL`. Default is `GENERAL`. This parameter will only affect new nodes, not including the existing nodes.
	NodeOsType *string `json:"nodeOsType,omitempty" tf:"node_os_type,omitempty"`

	// Available values for retry policies include IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.
	// Available values for retry policies include `IMMEDIATE_RETRY` and `INCREMENTAL_INTERVALS`.
	RetryPolicy *string `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Control how many expectations(desired_capacity) can be tolerated successfully. Unit is percentage, Default is 100. Only can be set if wait_node_ready is true.
	// Control how many expectations(`desired_capacity`) can be tolerated successfully. Unit is percentage, Default is `100`. Only can be set if `wait_node_ready` is `true`.
	ScaleTolerance *float64 `json:"scaleTolerance,omitempty" tf:"scale_tolerance,omitempty"`

	// Name of relative scaling group.
	// Name of relative scaling group.
	ScalingGroupName *string `json:"scalingGroupName,omitempty" tf:"scaling_group_name,omitempty"`

	// Project ID the scaling group belongs to.
	// Project ID the scaling group belongs to.
	ScalingGroupProjectID *float64 `json:"scalingGroupProjectId,omitempty" tf:"scaling_group_project_id,omitempty"`

	// Auto scaling mode. Valid values are CLASSIC_SCALING(scaling by create/destroy instances), WAKE_UP_STOPPED_SCALING(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	// Auto scaling mode. Valid values are `CLASSIC_SCALING`(scaling by create/destroy instances), `WAKE_UP_STOPPED_SCALING`(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	ScalingMode *string `json:"scalingMode,omitempty" tf:"scaling_mode,omitempty"`

	// Status of the node pool.
	// Status of the node pool.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// ID list of subnet, and for VPC it is required.
	// ID list of subnet, and for VPC it is required.
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// Node pool tag specifications, will passthroughs to the scaling instances.
	// Node pool tag specifications, will passthroughs to the scaling instances.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Taints of kubernetes node pool created nodes.
	// Taints of kubernetes node pool created nodes.
	Taints []NodePoolTaintsObservation `json:"taints,omitempty" tf:"taints,omitempty"`

	// Policy of scaling group termination. Available values: ["OLDEST_INSTANCE"], ["NEWEST_INSTANCE"].
	// Policy of scaling group termination. Available values: `["OLDEST_INSTANCE"]`, `["NEWEST_INSTANCE"]`.
	TerminationPolicies []*string `json:"terminationPolicies,omitempty" tf:"termination_policies,omitempty"`

	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// ID of VPC network.
	// ID of VPC network.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if enable_auto_scale is false.
	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if `enable_auto_scale` is `false`.
	WaitNodeReady *bool `json:"waitNodeReady,omitempty" tf:"wait_node_ready,omitempty"`

	// List of auto scaling group available zones, for Basic network it is required.
	// List of auto scaling group available zones, for Basic network it is required.
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type NodePoolParameters struct {

	// Node Annotation List.
	// Node Annotation List.
	// +kubebuilder:validation:Optional
	Annotations []AnnotationsParameters `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Auto scaling config parameters.
	// Auto scaling config parameters.
	// +kubebuilder:validation:Optional
	AutoScalingConfig []AutoScalingConfigParameters `json:"autoScalingConfig,omitempty" tf:"auto_scaling_config,omitempty"`

	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	// Automatically update instance tags. The default value is false. After configuration, if the scaling group tags are updated, the tags of the running instances in the scaling group will be updated synchronously (synchronous updates only support adding and modifying tags, and do not support deleting tags for the time being). Synchronous updates do not take effect immediately and there is a certain delay.
	// +kubebuilder:validation:Optional
	AutoUpdateInstanceTags *bool `json:"autoUpdateInstanceTags,omitempty" tf:"auto_update_instance_tags,omitempty"`

	// ID of the cluster.
	// ID of the cluster.
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Seconds of scaling group cool down. Default value is 300.
	// Seconds of scaling group cool down. Default value is `300`.
	// +kubebuilder:validation:Optional
	DefaultCooldown *float64 `json:"defaultCooldown,omitempty" tf:"default_cooldown,omitempty"`

	// Indicate to keep the CVM instance when delete the node pool. Default is true.
	// Indicate to keep the CVM instance when delete the node pool. Default is `true`.
	// +kubebuilder:validation:Optional
	DeleteKeepInstance *bool `json:"deleteKeepInstance,omitempty" tf:"delete_keep_instance,omitempty"`

	// Indicates whether the node pool deletion protection is enabled.
	// Indicates whether the node pool deletion protection is enabled.
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Desired capacity of the node. If enable_auto_scale is set true, this will be a computed parameter.
	// Desired capacity of the node. If `enable_auto_scale` is set `true`, this will be a computed parameter.
	// +kubebuilder:validation:Optional
	DesiredCapacity *float64 `json:"desiredCapacity,omitempty" tf:"desired_capacity,omitempty"`

	// Indicate whether to enable auto scaling or not.
	// Indicate whether to enable auto scaling or not.
	// +kubebuilder:validation:Optional
	EnableAutoScale *bool `json:"enableAutoScale,omitempty" tf:"enable_auto_scale,omitempty"`

	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Labels of kubernetes node pool created nodes. The label key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Maximum number of node.
	// Maximum number of node.
	// +kubebuilder:validation:Optional
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Minimum number of node.
	// Minimum number of node.
	// +kubebuilder:validation:Optional
	MinSize *float64 `json:"minSize,omitempty" tf:"min_size,omitempty"`

	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	// Multi-availability zone/subnet policy. Valid values: PRIORITY and EQUALITY. Default value: PRIORITY.
	// +kubebuilder:validation:Optional
	MultiZoneSubnetPolicy *string `json:"multiZoneSubnetPolicy,omitempty" tf:"multi_zone_subnet_policy,omitempty"`

	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (-) and decimal points.
	// Name of the node pool. The name does not exceed 25 characters, and only supports Chinese, English, numbers, underscores, separators (`-`) and decimal points.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Node config.
	// Node config.
	// +kubebuilder:validation:Optional
	NodeConfig []NodeConfigParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// Operating system of the cluster. Please refer to TencentCloud Documentation for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	// Operating system of the cluster. Please refer to [TencentCloud Documentation](https://www.tencentcloud.com/document/product/457/46750?lang=en&pg=#list-of-public-images-supported-by-tke) for available values. Default is 'tlinux2.4x86_64'. This parameter will only affect new nodes, not including the existing nodes.
	// +kubebuilder:validation:Optional
	NodeOs *string `json:"nodeOs,omitempty" tf:"node_os,omitempty"`

	// The image version of the node. Valida values are DOCKER_CUSTOMIZE and GENERAL. Default is GENERAL. This parameter will only affect new nodes, not including the existing nodes.
	// The image version of the node. Valida values are `DOCKER_CUSTOMIZE` and `GENERAL`. Default is `GENERAL`. This parameter will only affect new nodes, not including the existing nodes.
	// +kubebuilder:validation:Optional
	NodeOsType *string `json:"nodeOsType,omitempty" tf:"node_os_type,omitempty"`

	// Available values for retry policies include IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.
	// Available values for retry policies include `IMMEDIATE_RETRY` and `INCREMENTAL_INTERVALS`.
	// +kubebuilder:validation:Optional
	RetryPolicy *string `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Control how many expectations(desired_capacity) can be tolerated successfully. Unit is percentage, Default is 100. Only can be set if wait_node_ready is true.
	// Control how many expectations(`desired_capacity`) can be tolerated successfully. Unit is percentage, Default is `100`. Only can be set if `wait_node_ready` is `true`.
	// +kubebuilder:validation:Optional
	ScaleTolerance *float64 `json:"scaleTolerance,omitempty" tf:"scale_tolerance,omitempty"`

	// Name of relative scaling group.
	// Name of relative scaling group.
	// +kubebuilder:validation:Optional
	ScalingGroupName *string `json:"scalingGroupName,omitempty" tf:"scaling_group_name,omitempty"`

	// Project ID the scaling group belongs to.
	// Project ID the scaling group belongs to.
	// +kubebuilder:validation:Optional
	ScalingGroupProjectID *float64 `json:"scalingGroupProjectId,omitempty" tf:"scaling_group_project_id,omitempty"`

	// Auto scaling mode. Valid values are CLASSIC_SCALING(scaling by create/destroy instances), WAKE_UP_STOPPED_SCALING(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	// Auto scaling mode. Valid values are `CLASSIC_SCALING`(scaling by create/destroy instances), `WAKE_UP_STOPPED_SCALING`(Boot priority for expansion. When expanding the capacity, the shutdown operation is given priority to the shutdown of the instance. If the number of instances is still lower than the expected number of instances after the startup, the instance will be created, and the method of destroying the instance will still be used for shrinking).
	// +kubebuilder:validation:Optional
	ScalingMode *string `json:"scalingMode,omitempty" tf:"scaling_mode,omitempty"`

	// ID list of subnet, and for VPC it is required.
	// ID list of subnet, and for VPC it is required.
	// +kubebuilder:validation:Optional
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// Node pool tag specifications, will passthroughs to the scaling instances.
	// Node pool tag specifications, will passthroughs to the scaling instances.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Taints of kubernetes node pool created nodes.
	// Taints of kubernetes node pool created nodes.
	// +kubebuilder:validation:Optional
	Taints []NodePoolTaintsParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Policy of scaling group termination. Available values: ["OLDEST_INSTANCE"], ["NEWEST_INSTANCE"].
	// Policy of scaling group termination. Available values: `["OLDEST_INSTANCE"]`, `["NEWEST_INSTANCE"]`.
	// +kubebuilder:validation:Optional
	TerminationPolicies []*string `json:"terminationPolicies,omitempty" tf:"termination_policies,omitempty"`

	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	// Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
	// +kubebuilder:validation:Optional
	Unschedulable *float64 `json:"unschedulable,omitempty" tf:"unschedulable,omitempty"`

	// ID of VPC network.
	// ID of VPC network.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if enable_auto_scale is false.
	// Whether to wait for all desired nodes to be ready. Default is false. Only can be set if `enable_auto_scale` is `false`.
	// +kubebuilder:validation:Optional
	WaitNodeReady *bool `json:"waitNodeReady,omitempty" tf:"wait_node_ready,omitempty"`

	// List of auto scaling group available zones, for Basic network it is required.
	// List of auto scaling group available zones, for Basic network it is required.
	// +kubebuilder:validation:Optional
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type NodePoolTaintsInitParameters struct {

	// Effect of the taint. Valid values are: NoSchedule, PreferNoSchedule, NoExecute.
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value in the map table.
	// Value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NodePoolTaintsObservation struct {

	// Effect of the taint. Valid values are: NoSchedule, PreferNoSchedule, NoExecute.
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value in the map table.
	// Value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NodePoolTaintsParameters struct {

	// Effect of the taint. Valid values are: NoSchedule, PreferNoSchedule, NoExecute.
	// Effect of the taint. Valid values are: `NoSchedule`, `PreferNoSchedule`, `NoExecute`.
	// +kubebuilder:validation:Optional
	Effect *string `json:"effect" tf:"effect,omitempty"`

	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// Key of the taint. The taint key name does not exceed 63 characters, only supports English, numbers,'/','-', and does not allow beginning with ('/').
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value in the map table.
	// Value of the taint.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// NodePoolSpec defines the desired state of NodePool
type NodePoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NodePoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NodePoolInitParameters `json:"initProvider,omitempty"`
}

// NodePoolStatus defines the observed state of NodePool.
type NodePoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NodePoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NodePool is the Schema for the NodePools API. Provide a resource to create an auto scaling group for kubernetes cluster.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type NodePool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.autoScalingConfig) || (has(self.initProvider) && has(self.initProvider.autoScalingConfig))",message="spec.forProvider.autoScalingConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clusterId) || (has(self.initProvider) && has(self.initProvider.clusterId))",message="spec.forProvider.clusterId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxSize) || (has(self.initProvider) && has(self.initProvider.maxSize))",message="spec.forProvider.maxSize is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.minSize) || (has(self.initProvider) && has(self.initProvider.minSize))",message="spec.forProvider.minSize is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   NodePoolSpec   `json:"spec"`
	Status NodePoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NodePoolList contains a list of NodePools
type NodePoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NodePool `json:"items"`
}

// Repository type metadata.
var (
	NodePool_Kind             = "NodePool"
	NodePool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NodePool_Kind}.String()
	NodePool_KindAPIVersion   = NodePool_Kind + "." + CRDGroupVersion.String()
	NodePool_GroupVersionKind = CRDGroupVersion.WithKind(NodePool_Kind)
)

func init() {
	SchemeBuilder.Register(&NodePool{}, &NodePoolList{})
}
