/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AddNodeListInitParameters struct {

	// The node role that needs to be added.
	// The node role that needs to be added.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type AddNodeListObservation struct {

	// The node role that needs to be added.
	// The node role that needs to be added.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type AddNodeListParameters struct {

	// The node role that needs to be added.
	// The node role that needs to be added.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	// +kubebuilder:validation:Optional
	Role *string `json:"role" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone" tf:"zone,omitempty"`
}

type InstanceInitParameters struct {

	// Add node attribute list.
	// Add node attribute list.
	AddNodeList []AddNodeListInitParameters `json:"addNodeList,omitempty" tf:"add_node_list,omitempty"`

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	AvailabilityZoneList []*string `json:"availabilityZoneList,omitempty" tf:"availability_zone_list,omitempty"`

	// The available zone of the Mongodb.
	// The available zone of the Mongodb.
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Version of the Mongodb, and available values include MONGO_36_WT (MongoDB 3.6 WiredTiger Edition), MONGO_40_WT (MongoDB 4.0 WiredTiger Edition) and MONGO_42_WT  (MongoDB 4.2 WiredTiger Edition). NOTE: MONGO_3_WT (MongoDB 3.2 WiredTiger Edition) and MONGO_3_ROCKS (MongoDB 3.2 RocksDB Edition) will deprecated.
	// Version of the Mongodb, and available values include `MONGO_36_WT` (MongoDB 3.6 WiredTiger Edition), `MONGO_40_WT` (MongoDB 4.0 WiredTiger Edition) and `MONGO_42_WT`  (MongoDB 4.2 WiredTiger Edition). NOTE: `MONGO_3_WT` (MongoDB 3.2 WiredTiger Edition) and `MONGO_3_ROCKS` (MongoDB 3.2 RocksDB Edition) will deprecated.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	HiddenZone *string `json:"hiddenZone,omitempty" tf:"hidden_zone,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of Mongodb instance, and available values include HIO(or GIO which will be deprecated, represents high IO) and HIO10G(or TGIO which will be deprecated, represents 10-gigabit high IO).
	// Type of Mongodb instance, and available values include `HIO`(or `GIO` which will be deprecated, represents high IO) and `HIO10G`(or `TGIO` which will be deprecated, represents 10-gigabit high IO).
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Maintenance window end time.
	// Maintenance window end time.
	// - The value range is any full point or half point from `00:00-23:00`, and the maintenance time duration is at least 30 minutes and at most 3 hours.
	// - The end time must be based on the start time backwards.
	MaintenanceEnd *string `json:"maintenanceEnd,omitempty" tf:"maintenance_end,omitempty"`

	// Maintenance window start time. The value range is any full point or half point from 00:00-23:00, such as 00:00 or 00:30.
	// Maintenance window start time. The value range is any full point or half point from `00:00-23:00`, such as 00:00 or 00:30.
	MaintenanceStart *string `json:"maintenanceStart,omitempty" tf:"maintenance_start,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The number of nodes in each replica set. Default value: 3.
	// The number of nodes in each replica set. Default value: 3.
	NodeNum *float64 `json:"nodeNum,omitempty" tf:"node_num,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Add node attribute list.
	// Add node attribute list.
	RemoveNodeList []RemoveNodeListInitParameters `json:"removeNodeList,omitempty" tf:"remove_node_list,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`
}

type InstanceObservation struct {

	// Add node attribute list.
	// Add node attribute list.
	AddNodeList []AddNodeListObservation `json:"addNodeList,omitempty" tf:"add_node_list,omitempty"`

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	AvailabilityZoneList []*string `json:"availabilityZoneList,omitempty" tf:"availability_zone_list,omitempty"`

	// The available zone of the Mongodb.
	// The available zone of the Mongodb.
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Creation time of the Mongodb instance.
	// Creation time of the Mongodb instance.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Version of the Mongodb, and available values include MONGO_36_WT (MongoDB 3.6 WiredTiger Edition), MONGO_40_WT (MongoDB 4.0 WiredTiger Edition) and MONGO_42_WT  (MongoDB 4.2 WiredTiger Edition). NOTE: MONGO_3_WT (MongoDB 3.2 WiredTiger Edition) and MONGO_3_ROCKS (MongoDB 3.2 RocksDB Edition) will deprecated.
	// Version of the Mongodb, and available values include `MONGO_36_WT` (MongoDB 3.6 WiredTiger Edition), `MONGO_40_WT` (MongoDB 4.0 WiredTiger Edition) and `MONGO_42_WT`  (MongoDB 4.2 WiredTiger Edition). NOTE: `MONGO_3_WT` (MongoDB 3.2 WiredTiger Edition) and `MONGO_3_ROCKS` (MongoDB 3.2 RocksDB Edition) will deprecated.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	HiddenZone *string `json:"hiddenZone,omitempty" tf:"hidden_zone,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of Mongodb instance, and available values include HIO(or GIO which will be deprecated, represents high IO) and HIO10G(or TGIO which will be deprecated, represents 10-gigabit high IO).
	// Type of Mongodb instance, and available values include `HIO`(or `GIO` which will be deprecated, represents high IO) and `HIO10G`(or `TGIO` which will be deprecated, represents 10-gigabit high IO).
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Maintenance window end time.
	// Maintenance window end time.
	// - The value range is any full point or half point from `00:00-23:00`, and the maintenance time duration is at least 30 minutes and at most 3 hours.
	// - The end time must be based on the start time backwards.
	MaintenanceEnd *string `json:"maintenanceEnd,omitempty" tf:"maintenance_end,omitempty"`

	// Maintenance window start time. The value range is any full point or half point from 00:00-23:00, such as 00:00 or 00:30.
	// Maintenance window start time. The value range is any full point or half point from `00:00-23:00`, such as 00:00 or 00:30.
	MaintenanceStart *string `json:"maintenanceStart,omitempty" tf:"maintenance_start,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The number of nodes in each replica set. Default value: 3.
	// The number of nodes in each replica set. Default value: 3.
	NodeNum *float64 `json:"nodeNum,omitempty" tf:"node_num,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Add node attribute list.
	// Add node attribute list.
	RemoveNodeList []RemoveNodeListObservation `json:"removeNodeList,omitempty" tf:"remove_node_list,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// List of standby instances' info.
	// List of standby instances' info.
	StandbyInstanceList []StandbyInstanceListObservation `json:"standbyInstanceList,omitempty" tf:"standby_instance_list,omitempty"`

	// Status of the Mongodb instance, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	// Status of the Mongodb instance, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// IP of the Mongodb instance.
	// IP of the Mongodb instance.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`

	// IP port of the Mongodb instance.
	// IP port of the Mongodb instance.
	Vport *float64 `json:"vport,omitempty" tf:"vport,omitempty"`
}

type InstanceParameters struct {

	// Add node attribute list.
	// Add node attribute list.
	// +kubebuilder:validation:Optional
	AddNodeList []AddNodeListParameters `json:"addNodeList,omitempty" tf:"add_node_list,omitempty"`

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	// +kubebuilder:validation:Optional
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	// A list of nodes deployed in multiple availability zones. For more information, please use the API DescribeSpecInfo.
	// - Multi-availability zone deployment nodes can only be deployed in 3 different availability zones. It is not supported to deploy most nodes of the cluster in the same availability zone. For example, a 3-node cluster does not support the deployment of 2 nodes in the same zone.
	// - Version 4.2 and above are not supported.
	// - Read-only disaster recovery instances are not supported.
	// - Basic network cannot be selected.
	// +kubebuilder:validation:Optional
	AvailabilityZoneList []*string `json:"availabilityZoneList,omitempty" tf:"availability_zone_list,omitempty"`

	// The available zone of the Mongodb.
	// The available zone of the Mongodb.
	// +kubebuilder:validation:Optional
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Version of the Mongodb, and available values include MONGO_36_WT (MongoDB 3.6 WiredTiger Edition), MONGO_40_WT (MongoDB 4.0 WiredTiger Edition) and MONGO_42_WT  (MongoDB 4.2 WiredTiger Edition). NOTE: MONGO_3_WT (MongoDB 3.2 WiredTiger Edition) and MONGO_3_ROCKS (MongoDB 3.2 RocksDB Edition) will deprecated.
	// Version of the Mongodb, and available values include `MONGO_36_WT` (MongoDB 3.6 WiredTiger Edition), `MONGO_40_WT` (MongoDB 4.0 WiredTiger Edition) and `MONGO_42_WT`  (MongoDB 4.2 WiredTiger Edition). NOTE: `MONGO_3_WT` (MongoDB 3.2 WiredTiger Edition) and `MONGO_3_ROCKS` (MongoDB 3.2 RocksDB Edition) will deprecated.
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	// The availability zone to which the Hidden node belongs. This parameter is required in cross-AZ instance deployment.
	// +kubebuilder:validation:Optional
	HiddenZone *string `json:"hiddenZone,omitempty" tf:"hidden_zone,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	// +kubebuilder:validation:Optional
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of Mongodb instance, and available values include HIO(or GIO which will be deprecated, represents high IO) and HIO10G(or TGIO which will be deprecated, represents 10-gigabit high IO).
	// Type of Mongodb instance, and available values include `HIO`(or `GIO` which will be deprecated, represents high IO) and `HIO10G`(or `TGIO` which will be deprecated, represents 10-gigabit high IO).
	// +kubebuilder:validation:Optional
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Maintenance window end time.
	// Maintenance window end time.
	// - The value range is any full point or half point from `00:00-23:00`, and the maintenance time duration is at least 30 minutes and at most 3 hours.
	// - The end time must be based on the start time backwards.
	// +kubebuilder:validation:Optional
	MaintenanceEnd *string `json:"maintenanceEnd,omitempty" tf:"maintenance_end,omitempty"`

	// Maintenance window start time. The value range is any full point or half point from 00:00-23:00, such as 00:00 or 00:30.
	// Maintenance window start time. The value range is any full point or half point from `00:00-23:00`, such as 00:00 or 00:30.
	// +kubebuilder:validation:Optional
	MaintenanceStart *string `json:"maintenanceStart,omitempty" tf:"maintenance_start,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// +kubebuilder:validation:Optional
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The number of nodes in each replica set. Default value: 3.
	// The number of nodes in each replica set. Default value: 3.
	// +kubebuilder:validation:Optional
	NodeNum *float64 `json:"nodeNum,omitempty" tf:"node_num,omitempty"`

	// Password of this Mongodb account.
	// Password of this Mongodb account.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	// +kubebuilder:validation:Optional
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Add node attribute list.
	// Add node attribute list.
	// +kubebuilder:validation:Optional
	RemoveNodeList []RemoveNodeListParameters `json:"removeNodeList,omitempty" tf:"remove_node_list,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// +kubebuilder:validation:Optional
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`
}

type RemoveNodeListInitParameters struct {

	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	NodeName *string `json:"nodeName,omitempty" tf:"node_name,omitempty"`

	// The node role that needs to be added.
	// The node role that needs to be deleted.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type RemoveNodeListObservation struct {

	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	NodeName *string `json:"nodeName,omitempty" tf:"node_name,omitempty"`

	// The node role that needs to be added.
	// The node role that needs to be deleted.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type RemoveNodeListParameters struct {

	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	// The node ID to delete. The shard cluster must specify the name of the node to be deleted by a group of shards, and the rest of the shards should be grouped and aligned.
	// +kubebuilder:validation:Optional
	NodeName *string `json:"nodeName" tf:"node_name,omitempty"`

	// The node role that needs to be added.
	// The node role that needs to be deleted.
	// - SECONDARY: Mongod node;
	// - READONLY: read-only node;
	// - MONGOS: Mongos node.
	// +kubebuilder:validation:Optional
	Role *string `json:"role" tf:"role,omitempty"`

	// The availability zone corresponding to the node.
	// The availability zone corresponding to the node.
	// - single availability zone, where all nodes are in the same availability zone;
	// - multiple availability zones: the current standard specification is the distribution of three availability zones, and the master and slave nodes are not in the same availability zone. You should pay attention to configuring the availability zone corresponding to the new node, and the rule that the number of nodes in any two availability zones is greater than the third availability zone must be met after the addition.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone" tf:"zone,omitempty"`
}

type StandbyInstanceListInitParameters struct {
}

type StandbyInstanceListObservation struct {

	// Indicates the ID of standby instance.
	StandbyInstanceID *string `json:"standbyInstanceId,omitempty" tf:"standby_instance_id,omitempty"`

	// Indicates the region of standby instance.
	StandbyInstanceRegion *string `json:"standbyInstanceRegion,omitempty" tf:"standby_instance_region,omitempty"`
}

type StandbyInstanceListParameters struct {
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceInitParameters `json:"initProvider,omitempty"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Instance is the Schema for the Instances API. Provide a resource to create a Mongodb instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availableZone) || (has(self.initProvider) && has(self.initProvider.availableZone))",message="spec.forProvider.availableZone is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.engineVersion) || (has(self.initProvider) && has(self.initProvider.engineVersion))",message="spec.forProvider.engineVersion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceName) || (has(self.initProvider) && has(self.initProvider.instanceName))",message="spec.forProvider.instanceName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.machineType) || (has(self.initProvider) && has(self.initProvider.machineType))",message="spec.forProvider.machineType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memory) || (has(self.initProvider) && has(self.initProvider.memory))",message="spec.forProvider.memory is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.volume) || (has(self.initProvider) && has(self.initProvider.volume))",message="spec.forProvider.volume is a required parameter"
	Spec   InstanceSpec   `json:"spec"`
	Status InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
