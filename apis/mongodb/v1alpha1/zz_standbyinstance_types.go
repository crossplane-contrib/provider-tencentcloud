/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type StandbyInstanceInitParameters struct {

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Indicates the main instance ID of standby instances.
	// Indicates the main instance ID of standby instances.
	// +crossplane:generate:reference:type=Instance
	FatherInstanceID *string `json:"fatherInstanceId,omitempty" tf:"father_instance_id,omitempty"`

	// Reference to a Instance to populate fatherInstanceId.
	// +kubebuilder:validation:Optional
	FatherInstanceIDRef *v1.Reference `json:"fatherInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate fatherInstanceId.
	// +kubebuilder:validation:Optional
	FatherInstanceIDSelector *v1.Selector `json:"fatherInstanceIdSelector,omitempty" tf:"-"`

	// Indicates the region of main instance.
	// Indicates the region of main instance.
	FatherInstanceRegion *string `json:"fatherInstanceRegion,omitempty" tf:"father_instance_region,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`
}

type StandbyInstanceObservation struct {

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Creation time of the Mongodb instance.
	// Creation time of the Mongodb instance.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Version of the standby Mongodb instance and must be same as the version of main instance.
	// Version of the standby Mongodb instance and must be same as the version of main instance.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Indicates the main instance ID of standby instances.
	// Indicates the main instance ID of standby instances.
	FatherInstanceID *string `json:"fatherInstanceId,omitempty" tf:"father_instance_id,omitempty"`

	// Indicates the region of main instance.
	// Indicates the region of main instance.
	FatherInstanceRegion *string `json:"fatherInstanceRegion,omitempty" tf:"father_instance_region,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of standby Mongodb instance and must be same as the type of main instance.
	// Type of standby Mongodb instance and must be same as the type of main instance.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// Status of the Mongodb instance, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	// Status of the Mongodb instance, and available values include pending initialization(expressed with 0),  processing(expressed with 1), running(expressed with 2) and expired(expressed with -2).
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// IP of the Mongodb instance.
	// IP of the Mongodb instance.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`

	// IP port of the Mongodb instance.
	// IP port of the Mongodb instance.
	Vport *float64 `json:"vport,omitempty" tf:"vport,omitempty"`
}

type StandbyInstanceParameters struct {

	// Auto renew flag. Valid values are 0(NOTIFY_AND_MANUAL_RENEW), 1(NOTIFY_AND_AUTO_RENEW) and 2(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is 0. Note: only works for PREPAID instance. Only supports0 and 1 for creation.
	// Auto renew flag. Valid values are `0`(NOTIFY_AND_MANUAL_RENEW), `1`(NOTIFY_AND_AUTO_RENEW) and `2`(DISABLE_NOTIFY_AND_MANUAL_RENEW). Default value is `0`. Note: only works for PREPAID instance. Only supports`0` and `1` for creation.
	// +kubebuilder:validation:Optional
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	// The available zone of the Mongodb standby instance. NOTE: must not be same with father instance's.
	// +kubebuilder:validation:Optional
	AvailableZone *string `json:"availableZone,omitempty" tf:"available_zone,omitempty"`

	// The charge type of instance. Valid values are PREPAID and POSTPAID_BY_HOUR. Default value is POSTPAID_BY_HOUR. Note: TencentCloud International only supports POSTPAID_BY_HOUR. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`. Note: TencentCloud International only supports `POSTPAID_BY_HOUR`. Caution that update operation on this field will delete old instances and create new one with new charge type.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Indicates the main instance ID of standby instances.
	// Indicates the main instance ID of standby instances.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	FatherInstanceID *string `json:"fatherInstanceId,omitempty" tf:"father_instance_id,omitempty"`

	// Reference to a Instance to populate fatherInstanceId.
	// +kubebuilder:validation:Optional
	FatherInstanceIDRef *v1.Reference `json:"fatherInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate fatherInstanceId.
	// +kubebuilder:validation:Optional
	FatherInstanceIDSelector *v1.Selector `json:"fatherInstanceIdSelector,omitempty" tf:"-"`

	// Indicates the region of main instance.
	// Indicates the region of main instance.
	// +kubebuilder:validation:Optional
	FatherInstanceRegion *string `json:"fatherInstanceRegion,omitempty" tf:"father_instance_region,omitempty"`

	// Switch time for instance configuration changes.
	// Switch time for instance configuration changes.
	// - 0: When the adjustment is completed, perform the configuration task immediately. Default is 0.
	// - 1: Perform reconfiguration tasks within the maintenance time window.
	// Note: Adjusting the number of nodes and slices does not support changes within the maintenance window.
	// +kubebuilder:validation:Optional
	InMaintenance *float64 `json:"inMaintenance,omitempty" tf:"in_maintenance,omitempty"`

	// Name of the Mongodb instance.
	// Name of the Mongodb instance.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Memory size. The minimum value is 2, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// +kubebuilder:validation:Optional
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to PREPAID.
	// The tenancy (time unit is month) of the prepaid instance. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36. NOTE: it only works when charge_type is set to `PREPAID`.
	// +kubebuilder:validation:Optional
	PrepaidPeriod *float64 `json:"prepaidPeriod,omitempty" tf:"prepaid_period,omitempty"`

	// ID of the project which the instance belongs.
	// ID of the project which the instance belongs.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// ID of the security group.
	// ID of the security group.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// ID of the subnet within this VPC. The value is required if vpc_id is set.
	// ID of the subnet within this VPC. The value is required if `vpc_id` is set.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The tags of the Mongodb. Key name project is system reserved and can't be used.
	// The tags of the Mongodb. Key name `project` is system reserved and can't be used.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the VPC.
	// ID of the VPC.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// Disk size. The minimum value is 25, and unit is GB. Memory and volume must be upgraded or degraded simultaneously.
	// +kubebuilder:validation:Optional
	Volume *float64 `json:"volume,omitempty" tf:"volume,omitempty"`
}

// StandbyInstanceSpec defines the desired state of StandbyInstance
type StandbyInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     StandbyInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider StandbyInstanceInitParameters `json:"initProvider,omitempty"`
}

// StandbyInstanceStatus defines the observed state of StandbyInstance.
type StandbyInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        StandbyInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// StandbyInstance is the Schema for the StandbyInstances API. Provide a resource to create a Mongodb standby instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type StandbyInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availableZone) || (has(self.initProvider) && has(self.initProvider.availableZone))",message="spec.forProvider.availableZone is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fatherInstanceRegion) || (has(self.initProvider) && has(self.initProvider.fatherInstanceRegion))",message="spec.forProvider.fatherInstanceRegion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceName) || (has(self.initProvider) && has(self.initProvider.instanceName))",message="spec.forProvider.instanceName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memory) || (has(self.initProvider) && has(self.initProvider.memory))",message="spec.forProvider.memory is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.volume) || (has(self.initProvider) && has(self.initProvider.volume))",message="spec.forProvider.volume is a required parameter"
	Spec   StandbyInstanceSpec   `json:"spec"`
	Status StandbyInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StandbyInstanceList contains a list of StandbyInstances
type StandbyInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []StandbyInstance `json:"items"`
}

// Repository type metadata.
var (
	StandbyInstance_Kind             = "StandbyInstance"
	StandbyInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: StandbyInstance_Kind}.String()
	StandbyInstance_KindAPIVersion   = StandbyInstance_Kind + "." + CRDGroupVersion.String()
	StandbyInstance_GroupVersionKind = CRDGroupVersion.WithKind(StandbyInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&StandbyInstance{}, &StandbyInstanceList{})
}
