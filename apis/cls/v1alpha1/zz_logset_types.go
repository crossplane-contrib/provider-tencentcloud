/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LogsetInitParameters struct {

	// Logset name, which must be unique.
	// Logset name, which must be unique.
	LogsetName *string `json:"logsetName,omitempty" tf:"logset_name,omitempty"`

	// Tag description list.
	// Tag description list.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type LogsetObservation struct {

	// Creation time.
	// Creation time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Logset name, which must be unique.
	// Logset name, which must be unique.
	LogsetName *string `json:"logsetName,omitempty" tf:"logset_name,omitempty"`

	// If assumer_uin is not empty, it indicates the service provider who creates the logset.
	// If assumer_uin is not empty, it indicates the service provider who creates the logset.
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Tag description list.
	// Tag description list.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Number of log topics in logset.
	// Number of log topics in logset.
	TopicCount *float64 `json:"topicCount,omitempty" tf:"topic_count,omitempty"`
}

type LogsetParameters struct {

	// Logset name, which must be unique.
	// Logset name, which must be unique.
	// +kubebuilder:validation:Optional
	LogsetName *string `json:"logsetName,omitempty" tf:"logset_name,omitempty"`

	// Tag description list.
	// Tag description list.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// LogsetSpec defines the desired state of Logset
type LogsetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogsetParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LogsetInitParameters `json:"initProvider,omitempty"`
}

// LogsetStatus defines the observed state of Logset.
type LogsetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogsetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Logset is the Schema for the Logsets API. Provides a resource to create a CLS logset
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type Logset struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logsetName) || (has(self.initProvider) && has(self.initProvider.logsetName))",message="spec.forProvider.logsetName is a required parameter"
	Spec   LogsetSpec   `json:"spec"`
	Status LogsetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogsetList contains a list of Logsets
type LogsetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Logset `json:"items"`
}

// Repository type metadata.
var (
	Logset_Kind             = "Logset"
	Logset_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Logset_Kind}.String()
	Logset_KindAPIVersion   = Logset_Kind + "." + CRDGroupVersion.String()
	Logset_GroupVersionKind = CRDGroupVersion.WithKind(Logset_Kind)
)

func init() {
	SchemeBuilder.Register(&Logset{}, &LogsetList{})
}
