//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousAccessInitParameters) DeepCopyInto(out *AnonymousAccessInitParameters) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousAccessInitParameters.
func (in *AnonymousAccessInitParameters) DeepCopy() *AnonymousAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnonymousAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousAccessObservation) DeepCopyInto(out *AnonymousAccessObservation) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousAccessObservation.
func (in *AnonymousAccessObservation) DeepCopy() *AnonymousAccessObservation {
	if in == nil {
		return nil
	}
	out := new(AnonymousAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousAccessParameters) DeepCopyInto(out *AnonymousAccessParameters) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousAccessParameters.
func (in *AnonymousAccessParameters) DeepCopy() *AnonymousAccessParameters {
	if in == nil {
		return nil
	}
	out := new(AnonymousAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressInitParameters) DeepCopyInto(out *CompressInitParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressInitParameters.
func (in *CompressInitParameters) DeepCopy() *CompressInitParameters {
	if in == nil {
		return nil
	}
	out := new(CompressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressObservation) DeepCopyInto(out *CompressObservation) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressObservation.
func (in *CompressObservation) DeepCopy() *CompressObservation {
	if in == nil {
		return nil
	}
	out := new(CompressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressParameters) DeepCopyInto(out *CompressParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressParameters.
func (in *CompressParameters) DeepCopy() *CompressParameters {
	if in == nil {
		return nil
	}
	out := new(CompressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.ConditionValue != nil {
		in, out := &in.ConditionValue, &out.ConditionValue
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.ConditionValue != nil {
		in, out := &in.ConditionValue, &out.ConditionValue
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.ConditionValue != nil {
		in, out := &in.ConditionValue, &out.ConditionValue
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Config) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachment) DeepCopyInto(out *ConfigAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachment.
func (in *ConfigAttachment) DeepCopy() *ConfigAttachment {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentInitParameters) DeepCopyInto(out *ConfigAttachmentInitParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigIDRef != nil {
		in, out := &in.ConfigIDRef, &out.ConfigIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigIDSelector != nil {
		in, out := &in.ConfigIDSelector, &out.ConfigIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentInitParameters.
func (in *ConfigAttachmentInitParameters) DeepCopy() *ConfigAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentList) DeepCopyInto(out *ConfigAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConfigAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentList.
func (in *ConfigAttachmentList) DeepCopy() *ConfigAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentObservation) DeepCopyInto(out *ConfigAttachmentObservation) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentObservation.
func (in *ConfigAttachmentObservation) DeepCopy() *ConfigAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentParameters) DeepCopyInto(out *ConfigAttachmentParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigIDRef != nil {
		in, out := &in.ConfigIDRef, &out.ConfigIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigIDSelector != nil {
		in, out := &in.ConfigIDSelector, &out.ConfigIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentParameters.
func (in *ConfigAttachmentParameters) DeepCopy() *ConfigAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentSpec) DeepCopyInto(out *ConfigAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentSpec.
func (in *ConfigAttachmentSpec) DeepCopy() *ConfigAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAttachmentStatus) DeepCopyInto(out *ConfigAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAttachmentStatus.
func (in *ConfigAttachmentStatus) DeepCopy() *ConfigAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtra) DeepCopyInto(out *ConfigExtra) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtra.
func (in *ConfigExtra) DeepCopy() *ConfigExtra {
	if in == nil {
		return nil
	}
	out := new(ConfigExtra)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigExtra) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExcludePathsInitParameters) DeepCopyInto(out *ConfigExtraExcludePathsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExcludePathsInitParameters.
func (in *ConfigExtraExcludePathsInitParameters) DeepCopy() *ConfigExtraExcludePathsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExcludePathsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExcludePathsObservation) DeepCopyInto(out *ConfigExtraExcludePathsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExcludePathsObservation.
func (in *ConfigExtraExcludePathsObservation) DeepCopy() *ConfigExtraExcludePathsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExcludePathsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExcludePathsParameters) DeepCopyInto(out *ConfigExtraExcludePathsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExcludePathsParameters.
func (in *ConfigExtraExcludePathsParameters) DeepCopy() *ConfigExtraExcludePathsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExcludePathsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExtractRuleInitParameters) DeepCopyInto(out *ConfigExtraExtractRuleInitParameters) {
	*out = *in
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]ExtractRuleFilterKeyRegexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExtractRuleInitParameters.
func (in *ConfigExtraExtractRuleInitParameters) DeepCopy() *ConfigExtraExtractRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExtractRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExtractRuleObservation) DeepCopyInto(out *ConfigExtraExtractRuleObservation) {
	*out = *in
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]ExtractRuleFilterKeyRegexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExtractRuleObservation.
func (in *ConfigExtraExtractRuleObservation) DeepCopy() *ConfigExtraExtractRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExtractRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraExtractRuleParameters) DeepCopyInto(out *ConfigExtraExtractRuleParameters) {
	*out = *in
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]ExtractRuleFilterKeyRegexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraExtractRuleParameters.
func (in *ConfigExtraExtractRuleParameters) DeepCopy() *ConfigExtraExtractRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraExtractRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraInitParameters) DeepCopyInto(out *ConfigExtraInitParameters) {
	*out = *in
	if in.ConfigFlag != nil {
		in, out := &in.ConfigFlag, &out.ConfigFlag
		*out = new(string)
		**out = **in
	}
	if in.ContainerFile != nil {
		in, out := &in.ContainerFile, &out.ContainerFile
		*out = make([]ContainerFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerStdout != nil {
		in, out := &in.ContainerStdout, &out.ContainerStdout
		*out = make([]ContainerStdoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ConfigExtraExcludePathsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ConfigExtraExtractRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HostFile != nil {
		in, out := &in.HostFile, &out.HostFile
		*out = make([]HostFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.LogsetIDRef != nil {
		in, out := &in.LogsetIDRef, &out.LogsetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetIDSelector != nil {
		in, out := &in.LogsetIDSelector, &out.LogsetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraInitParameters.
func (in *ConfigExtraInitParameters) DeepCopy() *ConfigExtraInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraList) DeepCopyInto(out *ConfigExtraList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConfigExtra, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraList.
func (in *ConfigExtraList) DeepCopy() *ConfigExtraList {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigExtraList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraObservation) DeepCopyInto(out *ConfigExtraObservation) {
	*out = *in
	if in.ConfigFlag != nil {
		in, out := &in.ConfigFlag, &out.ConfigFlag
		*out = new(string)
		**out = **in
	}
	if in.ContainerFile != nil {
		in, out := &in.ContainerFile, &out.ContainerFile
		*out = make([]ContainerFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerStdout != nil {
		in, out := &in.ContainerStdout, &out.ContainerStdout
		*out = make([]ContainerStdoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ConfigExtraExcludePathsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ConfigExtraExtractRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HostFile != nil {
		in, out := &in.HostFile, &out.HostFile
		*out = make([]HostFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraObservation.
func (in *ConfigExtraObservation) DeepCopy() *ConfigExtraObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraParameters) DeepCopyInto(out *ConfigExtraParameters) {
	*out = *in
	if in.ConfigFlag != nil {
		in, out := &in.ConfigFlag, &out.ConfigFlag
		*out = new(string)
		**out = **in
	}
	if in.ContainerFile != nil {
		in, out := &in.ContainerFile, &out.ContainerFile
		*out = make([]ContainerFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerStdout != nil {
		in, out := &in.ContainerStdout, &out.ContainerStdout
		*out = make([]ContainerStdoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ConfigExtraExcludePathsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ConfigExtraExtractRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HostFile != nil {
		in, out := &in.HostFile, &out.HostFile
		*out = make([]HostFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.LogsetIDRef != nil {
		in, out := &in.LogsetIDRef, &out.LogsetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetIDSelector != nil {
		in, out := &in.LogsetIDSelector, &out.LogsetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraParameters.
func (in *ConfigExtraParameters) DeepCopy() *ConfigExtraParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraSpec) DeepCopyInto(out *ConfigExtraSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraSpec.
func (in *ConfigExtraSpec) DeepCopy() *ConfigExtraSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigExtraStatus) DeepCopyInto(out *ConfigExtraStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigExtraStatus.
func (in *ConfigExtraStatus) DeepCopy() *ConfigExtraStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigExtraStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ExcludePathsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ExtractRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigList) DeepCopyInto(out *ConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Config, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigList.
func (in *ConfigList) DeepCopy() *ConfigList {
	if in == nil {
		return nil
	}
	out := new(ConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ExcludePathsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ExtractRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]ExcludePathsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractRule != nil {
		in, out := &in.ExtractRule, &out.ExtractRule
		*out = make([]ExtractRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.UserDefineRule != nil {
		in, out := &in.UserDefineRule, &out.UserDefineRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSpec) DeepCopyInto(out *ConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSpec.
func (in *ConfigSpec) DeepCopy() *ConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigStatus) DeepCopyInto(out *ConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigStatus.
func (in *ConfigStatus) DeepCopy() *ConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerFileInitParameters) DeepCopyInto(out *ContainerFileInitParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerFileInitParameters.
func (in *ContainerFileInitParameters) DeepCopy() *ContainerFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerFileObservation) DeepCopyInto(out *ContainerFileObservation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerFileObservation.
func (in *ContainerFileObservation) DeepCopy() *ContainerFileObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerFileParameters) DeepCopyInto(out *ContainerFileParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerFileParameters.
func (in *ContainerFileParameters) DeepCopy() *ContainerFileParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStdoutInitParameters) DeepCopyInto(out *ContainerStdoutInitParameters) {
	*out = *in
	if in.AllContainers != nil {
		in, out := &in.AllContainers, &out.AllContainers
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workloads != nil {
		in, out := &in.Workloads, &out.Workloads
		*out = make([]WorkloadsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStdoutInitParameters.
func (in *ContainerStdoutInitParameters) DeepCopy() *ContainerStdoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerStdoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStdoutObservation) DeepCopyInto(out *ContainerStdoutObservation) {
	*out = *in
	if in.AllContainers != nil {
		in, out := &in.AllContainers, &out.AllContainers
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workloads != nil {
		in, out := &in.Workloads, &out.Workloads
		*out = make([]WorkloadsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStdoutObservation.
func (in *ContainerStdoutObservation) DeepCopy() *ContainerStdoutObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerStdoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStdoutParameters) DeepCopyInto(out *ContainerStdoutParameters) {
	*out = *in
	if in.AllContainers != nil {
		in, out := &in.AllContainers, &out.AllContainers
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeLabels != nil {
		in, out := &in.ExcludeLabels, &out.ExcludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeNamespace != nil {
		in, out := &in.ExcludeNamespace, &out.ExcludeNamespace
		*out = new(string)
		**out = **in
	}
	if in.IncludeLabels != nil {
		in, out := &in.IncludeLabels, &out.IncludeLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Workloads != nil {
		in, out := &in.Workloads, &out.Workloads
		*out = make([]WorkloadsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStdoutParameters.
func (in *ContainerStdoutParameters) DeepCopy() *ContainerStdoutParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerStdoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentInitParameters) DeepCopyInto(out *ContentInitParameters) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = make([]CsvInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.JSON != nil {
		in, out := &in.JSON, &out.JSON
		*out = make([]JSONInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentInitParameters.
func (in *ContentInitParameters) DeepCopy() *ContentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentObservation) DeepCopyInto(out *ContentObservation) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = make([]CsvObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.JSON != nil {
		in, out := &in.JSON, &out.JSON
		*out = make([]JSONObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentObservation.
func (in *ContentObservation) DeepCopy() *ContentObservation {
	if in == nil {
		return nil
	}
	out := new(ContentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentParameters) DeepCopyInto(out *ContentParameters) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = make([]CsvParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.JSON != nil {
		in, out := &in.JSON, &out.JSON
		*out = make([]JSONParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentParameters.
func (in *ContentParameters) DeepCopy() *ContentParameters {
	if in == nil {
		return nil
	}
	out := new(ContentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipper) DeepCopyInto(out *CosShipper) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipper.
func (in *CosShipper) DeepCopy() *CosShipper {
	if in == nil {
		return nil
	}
	out := new(CosShipper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CosShipper) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperInitParameters) DeepCopyInto(out *CosShipperInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = make([]CompressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(float64)
		**out = **in
	}
	if in.FilenameMode != nil {
		in, out := &in.FilenameMode, &out.FilenameMode
		*out = new(float64)
		**out = **in
	}
	if in.FilterRules != nil {
		in, out := &in.FilterRules, &out.FilterRules
		*out = make([]FilterRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ShipperName != nil {
		in, out := &in.ShipperName, &out.ShipperName
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperInitParameters.
func (in *CosShipperInitParameters) DeepCopy() *CosShipperInitParameters {
	if in == nil {
		return nil
	}
	out := new(CosShipperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperList) DeepCopyInto(out *CosShipperList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CosShipper, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperList.
func (in *CosShipperList) DeepCopy() *CosShipperList {
	if in == nil {
		return nil
	}
	out := new(CosShipperList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CosShipperList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperObservation) DeepCopyInto(out *CosShipperObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = make([]CompressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(float64)
		**out = **in
	}
	if in.FilenameMode != nil {
		in, out := &in.FilenameMode, &out.FilenameMode
		*out = new(float64)
		**out = **in
	}
	if in.FilterRules != nil {
		in, out := &in.FilterRules, &out.FilterRules
		*out = make([]FilterRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ShipperName != nil {
		in, out := &in.ShipperName, &out.ShipperName
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperObservation.
func (in *CosShipperObservation) DeepCopy() *CosShipperObservation {
	if in == nil {
		return nil
	}
	out := new(CosShipperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperParameters) DeepCopyInto(out *CosShipperParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = make([]CompressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(float64)
		**out = **in
	}
	if in.FilenameMode != nil {
		in, out := &in.FilenameMode, &out.FilenameMode
		*out = new(float64)
		**out = **in
	}
	if in.FilterRules != nil {
		in, out := &in.FilterRules, &out.FilterRules
		*out = make([]FilterRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ShipperName != nil {
		in, out := &in.ShipperName, &out.ShipperName
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperParameters.
func (in *CosShipperParameters) DeepCopy() *CosShipperParameters {
	if in == nil {
		return nil
	}
	out := new(CosShipperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperSpec) DeepCopyInto(out *CosShipperSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperSpec.
func (in *CosShipperSpec) DeepCopy() *CosShipperSpec {
	if in == nil {
		return nil
	}
	out := new(CosShipperSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosShipperStatus) DeepCopyInto(out *CosShipperStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosShipperStatus.
func (in *CosShipperStatus) DeepCopy() *CosShipperStatus {
	if in == nil {
		return nil
	}
	out := new(CosShipperStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvInitParameters) DeepCopyInto(out *CsvInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.EscapeChar != nil {
		in, out := &in.EscapeChar, &out.EscapeChar
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NonExistingField != nil {
		in, out := &in.NonExistingField, &out.NonExistingField
		*out = new(string)
		**out = **in
	}
	if in.PrintKey != nil {
		in, out := &in.PrintKey, &out.PrintKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvInitParameters.
func (in *CsvInitParameters) DeepCopy() *CsvInitParameters {
	if in == nil {
		return nil
	}
	out := new(CsvInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvObservation) DeepCopyInto(out *CsvObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.EscapeChar != nil {
		in, out := &in.EscapeChar, &out.EscapeChar
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NonExistingField != nil {
		in, out := &in.NonExistingField, &out.NonExistingField
		*out = new(string)
		**out = **in
	}
	if in.PrintKey != nil {
		in, out := &in.PrintKey, &out.PrintKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvObservation.
func (in *CsvObservation) DeepCopy() *CsvObservation {
	if in == nil {
		return nil
	}
	out := new(CsvObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvParameters) DeepCopyInto(out *CsvParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.EscapeChar != nil {
		in, out := &in.EscapeChar, &out.EscapeChar
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NonExistingField != nil {
		in, out := &in.NonExistingField, &out.NonExistingField
		*out = new(string)
		**out = **in
	}
	if in.PrintKey != nil {
		in, out := &in.PrintKey, &out.PrintKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvParameters.
func (in *CsvParameters) DeepCopy() *CsvParameters {
	if in == nil {
		return nil
	}
	out := new(CsvParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicIndexInitParameters) DeepCopyInto(out *DynamicIndexInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicIndexInitParameters.
func (in *DynamicIndexInitParameters) DeepCopy() *DynamicIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicIndexObservation) DeepCopyInto(out *DynamicIndexObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicIndexObservation.
func (in *DynamicIndexObservation) DeepCopy() *DynamicIndexObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicIndexParameters) DeepCopyInto(out *DynamicIndexParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicIndexParameters.
func (in *DynamicIndexParameters) DeepCopy() *DynamicIndexParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludePathsInitParameters) DeepCopyInto(out *ExcludePathsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludePathsInitParameters.
func (in *ExcludePathsInitParameters) DeepCopy() *ExcludePathsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludePathsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludePathsObservation) DeepCopyInto(out *ExcludePathsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludePathsObservation.
func (in *ExcludePathsObservation) DeepCopy() *ExcludePathsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludePathsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludePathsParameters) DeepCopyInto(out *ExcludePathsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludePathsParameters.
func (in *ExcludePathsParameters) DeepCopy() *ExcludePathsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludePathsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendsInitParameters) DeepCopyInto(out *ExtendsInitParameters) {
	*out = *in
	if in.AnonymousAccess != nil {
		in, out := &in.AnonymousAccess, &out.AnonymousAccess
		*out = make([]AnonymousAccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendsInitParameters.
func (in *ExtendsInitParameters) DeepCopy() *ExtendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendsObservation) DeepCopyInto(out *ExtendsObservation) {
	*out = *in
	if in.AnonymousAccess != nil {
		in, out := &in.AnonymousAccess, &out.AnonymousAccess
		*out = make([]AnonymousAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendsObservation.
func (in *ExtendsObservation) DeepCopy() *ExtendsObservation {
	if in == nil {
		return nil
	}
	out := new(ExtendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendsParameters) DeepCopyInto(out *ExtendsParameters) {
	*out = *in
	if in.AnonymousAccess != nil {
		in, out := &in.AnonymousAccess, &out.AnonymousAccess
		*out = make([]AnonymousAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendsParameters.
func (in *ExtendsParameters) DeepCopy() *ExtendsParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleFilterKeyRegexInitParameters) DeepCopyInto(out *ExtractRuleFilterKeyRegexInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleFilterKeyRegexInitParameters.
func (in *ExtractRuleFilterKeyRegexInitParameters) DeepCopy() *ExtractRuleFilterKeyRegexInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleFilterKeyRegexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleFilterKeyRegexObservation) DeepCopyInto(out *ExtractRuleFilterKeyRegexObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleFilterKeyRegexObservation.
func (in *ExtractRuleFilterKeyRegexObservation) DeepCopy() *ExtractRuleFilterKeyRegexObservation {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleFilterKeyRegexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleFilterKeyRegexParameters) DeepCopyInto(out *ExtractRuleFilterKeyRegexParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleFilterKeyRegexParameters.
func (in *ExtractRuleFilterKeyRegexParameters) DeepCopy() *ExtractRuleFilterKeyRegexParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleFilterKeyRegexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleInitParameters) DeepCopyInto(out *ExtractRuleInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]FilterKeyRegexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGbk != nil {
		in, out := &in.IsGbk, &out.IsGbk
		*out = new(float64)
		**out = **in
	}
	if in.JSONStandard != nil {
		in, out := &in.JSONStandard, &out.JSONStandard
		*out = new(float64)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.MetaTags != nil {
		in, out := &in.MetaTags, &out.MetaTags
		*out = make([]MetaTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataType != nil {
		in, out := &in.MetadataType, &out.MetadataType
		*out = new(float64)
		**out = **in
	}
	if in.ParseProtocol != nil {
		in, out := &in.ParseProtocol, &out.ParseProtocol
		*out = new(string)
		**out = **in
	}
	if in.PathRegex != nil {
		in, out := &in.PathRegex, &out.PathRegex
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleInitParameters.
func (in *ExtractRuleInitParameters) DeepCopy() *ExtractRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleObservation) DeepCopyInto(out *ExtractRuleObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]FilterKeyRegexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGbk != nil {
		in, out := &in.IsGbk, &out.IsGbk
		*out = new(float64)
		**out = **in
	}
	if in.JSONStandard != nil {
		in, out := &in.JSONStandard, &out.JSONStandard
		*out = new(float64)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.MetaTags != nil {
		in, out := &in.MetaTags, &out.MetaTags
		*out = make([]MetaTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataType != nil {
		in, out := &in.MetadataType, &out.MetadataType
		*out = new(float64)
		**out = **in
	}
	if in.ParseProtocol != nil {
		in, out := &in.ParseProtocol, &out.ParseProtocol
		*out = new(string)
		**out = **in
	}
	if in.PathRegex != nil {
		in, out := &in.PathRegex, &out.PathRegex
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleObservation.
func (in *ExtractRuleObservation) DeepCopy() *ExtractRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractRuleParameters) DeepCopyInto(out *ExtractRuleParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Backtracking != nil {
		in, out := &in.Backtracking, &out.Backtracking
		*out = new(float64)
		**out = **in
	}
	if in.BeginRegex != nil {
		in, out := &in.BeginRegex, &out.BeginRegex
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.FilterKeyRegex != nil {
		in, out := &in.FilterKeyRegex, &out.FilterKeyRegex
		*out = make([]FilterKeyRegexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGbk != nil {
		in, out := &in.IsGbk, &out.IsGbk
		*out = new(float64)
		**out = **in
	}
	if in.JSONStandard != nil {
		in, out := &in.JSONStandard, &out.JSONStandard
		*out = new(float64)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogRegex != nil {
		in, out := &in.LogRegex, &out.LogRegex
		*out = new(string)
		**out = **in
	}
	if in.MetaTags != nil {
		in, out := &in.MetaTags, &out.MetaTags
		*out = make([]MetaTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataType != nil {
		in, out := &in.MetadataType, &out.MetadataType
		*out = new(float64)
		**out = **in
	}
	if in.ParseProtocol != nil {
		in, out := &in.ParseProtocol, &out.ParseProtocol
		*out = new(string)
		**out = **in
	}
	if in.PathRegex != nil {
		in, out := &in.PathRegex, &out.PathRegex
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeKey != nil {
		in, out := &in.TimeKey, &out.TimeKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchLogKey != nil {
		in, out := &in.UnMatchLogKey, &out.UnMatchLogKey
		*out = new(string)
		**out = **in
	}
	if in.UnMatchUpLoadSwitch != nil {
		in, out := &in.UnMatchUpLoadSwitch, &out.UnMatchUpLoadSwitch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractRuleParameters.
func (in *ExtractRuleParameters) DeepCopy() *ExtractRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterKeyRegexInitParameters) DeepCopyInto(out *FilterKeyRegexInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterKeyRegexInitParameters.
func (in *FilterKeyRegexInitParameters) DeepCopy() *FilterKeyRegexInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterKeyRegexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterKeyRegexObservation) DeepCopyInto(out *FilterKeyRegexObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterKeyRegexObservation.
func (in *FilterKeyRegexObservation) DeepCopy() *FilterKeyRegexObservation {
	if in == nil {
		return nil
	}
	out := new(FilterKeyRegexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterKeyRegexParameters) DeepCopyInto(out *FilterKeyRegexParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterKeyRegexParameters.
func (in *FilterKeyRegexParameters) DeepCopy() *FilterKeyRegexParameters {
	if in == nil {
		return nil
	}
	out := new(FilterKeyRegexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRulesInitParameters) DeepCopyInto(out *FilterRulesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRulesInitParameters.
func (in *FilterRulesInitParameters) DeepCopy() *FilterRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRulesObservation) DeepCopyInto(out *FilterRulesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRulesObservation.
func (in *FilterRulesObservation) DeepCopy() *FilterRulesObservation {
	if in == nil {
		return nil
	}
	out := new(FilterRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRulesParameters) DeepCopyInto(out *FilterRulesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRulesParameters.
func (in *FilterRulesParameters) DeepCopy() *FilterRulesParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullTextInitParameters) DeepCopyInto(out *FullTextInitParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullTextInitParameters.
func (in *FullTextInitParameters) DeepCopy() *FullTextInitParameters {
	if in == nil {
		return nil
	}
	out := new(FullTextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullTextObservation) DeepCopyInto(out *FullTextObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullTextObservation.
func (in *FullTextObservation) DeepCopy() *FullTextObservation {
	if in == nil {
		return nil
	}
	out := new(FullTextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullTextParameters) DeepCopyInto(out *FullTextParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullTextParameters.
func (in *FullTextParameters) DeepCopy() *FullTextParameters {
	if in == nil {
		return nil
	}
	out := new(FullTextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostFileInitParameters) DeepCopyInto(out *HostFileInitParameters) {
	*out = *in
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostFileInitParameters.
func (in *HostFileInitParameters) DeepCopy() *HostFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostFileObservation) DeepCopyInto(out *HostFileObservation) {
	*out = *in
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostFileObservation.
func (in *HostFileObservation) DeepCopy() *HostFileObservation {
	if in == nil {
		return nil
	}
	out := new(HostFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostFileParameters) DeepCopyInto(out *HostFileParameters) {
	*out = *in
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
	if in.LogPath != nil {
		in, out := &in.LogPath, &out.LogPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostFileParameters.
func (in *HostFileParameters) DeepCopy() *HostFileParameters {
	if in == nil {
		return nil
	}
	out := new(HostFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index) DeepCopyInto(out *Index) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index.
func (in *Index) DeepCopy() *Index {
	if in == nil {
		return nil
	}
	out := new(Index)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Index) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexInitParameters) DeepCopyInto(out *IndexInitParameters) {
	*out = *in
	if in.IncludeInternalFields != nil {
		in, out := &in.IncludeInternalFields, &out.IncludeInternalFields
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFlag != nil {
		in, out := &in.MetadataFlag, &out.MetadataFlag
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexInitParameters.
func (in *IndexInitParameters) DeepCopy() *IndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexList) DeepCopyInto(out *IndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Index, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexList.
func (in *IndexList) DeepCopy() *IndexList {
	if in == nil {
		return nil
	}
	out := new(IndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexObservation) DeepCopyInto(out *IndexObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeInternalFields != nil {
		in, out := &in.IncludeInternalFields, &out.IncludeInternalFields
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFlag != nil {
		in, out := &in.MetadataFlag, &out.MetadataFlag
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexObservation.
func (in *IndexObservation) DeepCopy() *IndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexParameters) DeepCopyInto(out *IndexParameters) {
	*out = *in
	if in.IncludeInternalFields != nil {
		in, out := &in.IncludeInternalFields, &out.IncludeInternalFields
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFlag != nil {
		in, out := &in.MetadataFlag, &out.MetadataFlag
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexParameters.
func (in *IndexParameters) DeepCopy() *IndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexSpec) DeepCopyInto(out *IndexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexSpec.
func (in *IndexSpec) DeepCopy() *IndexSpec {
	if in == nil {
		return nil
	}
	out := new(IndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexStatus) DeepCopyInto(out *IndexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexStatus.
func (in *IndexStatus) DeepCopy() *IndexStatus {
	if in == nil {
		return nil
	}
	out := new(IndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONInitParameters) DeepCopyInto(out *JSONInitParameters) {
	*out = *in
	if in.EnableTag != nil {
		in, out := &in.EnableTag, &out.EnableTag
		*out = new(bool)
		**out = **in
	}
	if in.MetaFields != nil {
		in, out := &in.MetaFields, &out.MetaFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONInitParameters.
func (in *JSONInitParameters) DeepCopy() *JSONInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONObservation) DeepCopyInto(out *JSONObservation) {
	*out = *in
	if in.EnableTag != nil {
		in, out := &in.EnableTag, &out.EnableTag
		*out = new(bool)
		**out = **in
	}
	if in.MetaFields != nil {
		in, out := &in.MetaFields, &out.MetaFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONObservation.
func (in *JSONObservation) DeepCopy() *JSONObservation {
	if in == nil {
		return nil
	}
	out := new(JSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParameters) DeepCopyInto(out *JSONParameters) {
	*out = *in
	if in.EnableTag != nil {
		in, out := &in.EnableTag, &out.EnableTag
		*out = new(bool)
		**out = **in
	}
	if in.MetaFields != nil {
		in, out := &in.MetaFields, &out.MetaFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParameters.
func (in *JSONParameters) DeepCopy() *JSONParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueInitParameters) DeepCopyInto(out *KeyValueInitParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]KeyValuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueInitParameters.
func (in *KeyValueInitParameters) DeepCopy() *KeyValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueObservation) DeepCopyInto(out *KeyValueObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]KeyValuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueObservation.
func (in *KeyValueObservation) DeepCopy() *KeyValueObservation {
	if in == nil {
		return nil
	}
	out := new(KeyValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueParameters) DeepCopyInto(out *KeyValueParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]KeyValuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueParameters.
func (in *KeyValueParameters) DeepCopy() *KeyValueParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesInitParameters) DeepCopyInto(out *KeyValuesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesInitParameters.
func (in *KeyValuesInitParameters) DeepCopy() *KeyValuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesObservation) DeepCopyInto(out *KeyValuesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesObservation.
func (in *KeyValuesObservation) DeepCopy() *KeyValuesObservation {
	if in == nil {
		return nil
	}
	out := new(KeyValuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesParameters) DeepCopyInto(out *KeyValuesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesParameters.
func (in *KeyValuesParameters) DeepCopy() *KeyValuesParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesValueInitParameters) DeepCopyInto(out *KeyValuesValueInitParameters) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesValueInitParameters.
func (in *KeyValuesValueInitParameters) DeepCopy() *KeyValuesValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValuesValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesValueObservation) DeepCopyInto(out *KeyValuesValueObservation) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesValueObservation.
func (in *KeyValuesValueObservation) DeepCopy() *KeyValuesValueObservation {
	if in == nil {
		return nil
	}
	out := new(KeyValuesValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuesValueParameters) DeepCopyInto(out *KeyValuesValueParameters) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuesValueParameters.
func (in *KeyValuesValueParameters) DeepCopy() *KeyValuesValueParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValuesValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logset) DeepCopyInto(out *Logset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logset.
func (in *Logset) DeepCopy() *Logset {
	if in == nil {
		return nil
	}
	out := new(Logset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Logset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetInitParameters) DeepCopyInto(out *LogsetInitParameters) {
	*out = *in
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetInitParameters.
func (in *LogsetInitParameters) DeepCopy() *LogsetInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetList) DeepCopyInto(out *LogsetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Logset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetList.
func (in *LogsetList) DeepCopy() *LogsetList {
	if in == nil {
		return nil
	}
	out := new(LogsetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogsetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetObservation) DeepCopyInto(out *LogsetObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicCount != nil {
		in, out := &in.TopicCount, &out.TopicCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetObservation.
func (in *LogsetObservation) DeepCopy() *LogsetObservation {
	if in == nil {
		return nil
	}
	out := new(LogsetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetParameters) DeepCopyInto(out *LogsetParameters) {
	*out = *in
	if in.LogsetName != nil {
		in, out := &in.LogsetName, &out.LogsetName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetParameters.
func (in *LogsetParameters) DeepCopy() *LogsetParameters {
	if in == nil {
		return nil
	}
	out := new(LogsetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetSpec) DeepCopyInto(out *LogsetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetSpec.
func (in *LogsetSpec) DeepCopy() *LogsetSpec {
	if in == nil {
		return nil
	}
	out := new(LogsetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsetStatus) DeepCopyInto(out *LogsetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsetStatus.
func (in *LogsetStatus) DeepCopy() *LogsetStatus {
	if in == nil {
		return nil
	}
	out := new(LogsetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroup) DeepCopyInto(out *MachineGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroup.
func (in *MachineGroup) DeepCopy() *MachineGroup {
	if in == nil {
		return nil
	}
	out := new(MachineGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupInitParameters) DeepCopyInto(out *MachineGroupInitParameters) {
	*out = *in
	if in.AutoUpdate != nil {
		in, out := &in.AutoUpdate, &out.AutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.MachineGroupType != nil {
		in, out := &in.MachineGroupType, &out.MachineGroupType
		*out = make([]MachineGroupTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLogging != nil {
		in, out := &in.ServiceLogging, &out.ServiceLogging
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateEndTime != nil {
		in, out := &in.UpdateEndTime, &out.UpdateEndTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateStartTime != nil {
		in, out := &in.UpdateStartTime, &out.UpdateStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupInitParameters.
func (in *MachineGroupInitParameters) DeepCopy() *MachineGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachineGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupList) DeepCopyInto(out *MachineGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MachineGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupList.
func (in *MachineGroupList) DeepCopy() *MachineGroupList {
	if in == nil {
		return nil
	}
	out := new(MachineGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupObservation) DeepCopyInto(out *MachineGroupObservation) {
	*out = *in
	if in.AutoUpdate != nil {
		in, out := &in.AutoUpdate, &out.AutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MachineGroupType != nil {
		in, out := &in.MachineGroupType, &out.MachineGroupType
		*out = make([]MachineGroupTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLogging != nil {
		in, out := &in.ServiceLogging, &out.ServiceLogging
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateEndTime != nil {
		in, out := &in.UpdateEndTime, &out.UpdateEndTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateStartTime != nil {
		in, out := &in.UpdateStartTime, &out.UpdateStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupObservation.
func (in *MachineGroupObservation) DeepCopy() *MachineGroupObservation {
	if in == nil {
		return nil
	}
	out := new(MachineGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupParameters) DeepCopyInto(out *MachineGroupParameters) {
	*out = *in
	if in.AutoUpdate != nil {
		in, out := &in.AutoUpdate, &out.AutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.MachineGroupType != nil {
		in, out := &in.MachineGroupType, &out.MachineGroupType
		*out = make([]MachineGroupTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLogging != nil {
		in, out := &in.ServiceLogging, &out.ServiceLogging
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateEndTime != nil {
		in, out := &in.UpdateEndTime, &out.UpdateEndTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateStartTime != nil {
		in, out := &in.UpdateStartTime, &out.UpdateStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupParameters.
func (in *MachineGroupParameters) DeepCopy() *MachineGroupParameters {
	if in == nil {
		return nil
	}
	out := new(MachineGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupSpec) DeepCopyInto(out *MachineGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupSpec.
func (in *MachineGroupSpec) DeepCopy() *MachineGroupSpec {
	if in == nil {
		return nil
	}
	out := new(MachineGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupStatus) DeepCopyInto(out *MachineGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupStatus.
func (in *MachineGroupStatus) DeepCopy() *MachineGroupStatus {
	if in == nil {
		return nil
	}
	out := new(MachineGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupTypeInitParameters) DeepCopyInto(out *MachineGroupTypeInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupTypeInitParameters.
func (in *MachineGroupTypeInitParameters) DeepCopy() *MachineGroupTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachineGroupTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupTypeObservation) DeepCopyInto(out *MachineGroupTypeObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupTypeObservation.
func (in *MachineGroupTypeObservation) DeepCopy() *MachineGroupTypeObservation {
	if in == nil {
		return nil
	}
	out := new(MachineGroupTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineGroupTypeParameters) DeepCopyInto(out *MachineGroupTypeParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineGroupTypeParameters.
func (in *MachineGroupTypeParameters) DeepCopy() *MachineGroupTypeParameters {
	if in == nil {
		return nil
	}
	out := new(MachineGroupTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaTagsInitParameters) DeepCopyInto(out *MetaTagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaTagsInitParameters.
func (in *MetaTagsInitParameters) DeepCopy() *MetaTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetaTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaTagsObservation) DeepCopyInto(out *MetaTagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaTagsObservation.
func (in *MetaTagsObservation) DeepCopy() *MetaTagsObservation {
	if in == nil {
		return nil
	}
	out := new(MetaTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaTagsParameters) DeepCopyInto(out *MetaTagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaTagsParameters.
func (in *MetaTagsParameters) DeepCopy() *MetaTagsParameters {
	if in == nil {
		return nil
	}
	out := new(MetaTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.DynamicIndex != nil {
		in, out := &in.DynamicIndex, &out.DynamicIndex
		*out = make([]DynamicIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullText != nil {
		in, out := &in.FullText, &out.FullText
		*out = make([]FullTextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = make([]KeyValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.DynamicIndex != nil {
		in, out := &in.DynamicIndex, &out.DynamicIndex
		*out = make([]DynamicIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullText != nil {
		in, out := &in.FullText, &out.FullText
		*out = make([]FullTextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = make([]KeyValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.DynamicIndex != nil {
		in, out := &in.DynamicIndex, &out.DynamicIndex
		*out = make([]DynamicIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullText != nil {
		in, out := &in.FullText, &out.FullText
		*out = make([]FullTextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = make([]KeyValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagInitParameters) DeepCopyInto(out *TagInitParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]TagKeyValuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagInitParameters.
func (in *TagInitParameters) DeepCopy() *TagInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagKeyValuesInitParameters) DeepCopyInto(out *TagKeyValuesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]KeyValuesValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagKeyValuesInitParameters.
func (in *TagKeyValuesInitParameters) DeepCopy() *TagKeyValuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagKeyValuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagKeyValuesObservation) DeepCopyInto(out *TagKeyValuesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]KeyValuesValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagKeyValuesObservation.
func (in *TagKeyValuesObservation) DeepCopy() *TagKeyValuesObservation {
	if in == nil {
		return nil
	}
	out := new(TagKeyValuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagKeyValuesParameters) DeepCopyInto(out *TagKeyValuesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]KeyValuesValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagKeyValuesParameters.
func (in *TagKeyValuesParameters) DeepCopy() *TagKeyValuesParameters {
	if in == nil {
		return nil
	}
	out := new(TagKeyValuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]TagKeyValuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.KeyValues != nil {
		in, out := &in.KeyValues, &out.KeyValues
		*out = make([]TagKeyValuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topic) DeepCopyInto(out *Topic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topic.
func (in *Topic) DeepCopy() *Topic {
	if in == nil {
		return nil
	}
	out := new(Topic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Topic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicInitParameters) DeepCopyInto(out *TopicInitParameters) {
	*out = *in
	if in.AutoSplit != nil {
		in, out := &in.AutoSplit, &out.AutoSplit
		*out = new(bool)
		**out = **in
	}
	if in.Describes != nil {
		in, out := &in.Describes, &out.Describes
		*out = new(string)
		**out = **in
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]ExtendsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HotPeriod != nil {
		in, out := &in.HotPeriod, &out.HotPeriod
		*out = new(float64)
		**out = **in
	}
	if in.IsWebTracking != nil {
		in, out := &in.IsWebTracking, &out.IsWebTracking
		*out = new(bool)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.LogsetIDRef != nil {
		in, out := &in.LogsetIDRef, &out.LogsetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetIDSelector != nil {
		in, out := &in.LogsetIDSelector, &out.LogsetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxSplitPartitions != nil {
		in, out := &in.MaxSplitPartitions, &out.MaxSplitPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicInitParameters.
func (in *TopicInitParameters) DeepCopy() *TopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicList) DeepCopyInto(out *TopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Topic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicList.
func (in *TopicList) DeepCopy() *TopicList {
	if in == nil {
		return nil
	}
	out := new(TopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicObservation) DeepCopyInto(out *TopicObservation) {
	*out = *in
	if in.AutoSplit != nil {
		in, out := &in.AutoSplit, &out.AutoSplit
		*out = new(bool)
		**out = **in
	}
	if in.Describes != nil {
		in, out := &in.Describes, &out.Describes
		*out = new(string)
		**out = **in
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]ExtendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HotPeriod != nil {
		in, out := &in.HotPeriod, &out.HotPeriod
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsWebTracking != nil {
		in, out := &in.IsWebTracking, &out.IsWebTracking
		*out = new(bool)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.MaxSplitPartitions != nil {
		in, out := &in.MaxSplitPartitions, &out.MaxSplitPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicObservation.
func (in *TopicObservation) DeepCopy() *TopicObservation {
	if in == nil {
		return nil
	}
	out := new(TopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicParameters) DeepCopyInto(out *TopicParameters) {
	*out = *in
	if in.AutoSplit != nil {
		in, out := &in.AutoSplit, &out.AutoSplit
		*out = new(bool)
		**out = **in
	}
	if in.Describes != nil {
		in, out := &in.Describes, &out.Describes
		*out = new(string)
		**out = **in
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]ExtendsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HotPeriod != nil {
		in, out := &in.HotPeriod, &out.HotPeriod
		*out = new(float64)
		**out = **in
	}
	if in.IsWebTracking != nil {
		in, out := &in.IsWebTracking, &out.IsWebTracking
		*out = new(bool)
		**out = **in
	}
	if in.LogsetID != nil {
		in, out := &in.LogsetID, &out.LogsetID
		*out = new(string)
		**out = **in
	}
	if in.LogsetIDRef != nil {
		in, out := &in.LogsetIDRef, &out.LogsetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsetIDSelector != nil {
		in, out := &in.LogsetIDSelector, &out.LogsetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxSplitPartitions != nil {
		in, out := &in.MaxSplitPartitions, &out.MaxSplitPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicParameters.
func (in *TopicParameters) DeepCopy() *TopicParameters {
	if in == nil {
		return nil
	}
	out := new(TopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpec) DeepCopyInto(out *TopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpec.
func (in *TopicSpec) DeepCopy() *TopicSpec {
	if in == nil {
		return nil
	}
	out := new(TopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicStatus) DeepCopyInto(out *TopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicStatus.
func (in *TopicStatus) DeepCopy() *TopicStatus {
	if in == nil {
		return nil
	}
	out := new(TopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueInitParameters) DeepCopyInto(out *ValueInitParameters) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueInitParameters.
func (in *ValueInitParameters) DeepCopy() *ValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueObservation) DeepCopyInto(out *ValueObservation) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueObservation.
func (in *ValueObservation) DeepCopy() *ValueObservation {
	if in == nil {
		return nil
	}
	out := new(ValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueParameters) DeepCopyInto(out *ValueParameters) {
	*out = *in
	if in.ContainZH != nil {
		in, out := &in.ContainZH, &out.ContainZH
		*out = new(bool)
		**out = **in
	}
	if in.SQLFlag != nil {
		in, out := &in.SQLFlag, &out.SQLFlag
		*out = new(bool)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueParameters.
func (in *ValueParameters) DeepCopy() *ValueParameters {
	if in == nil {
		return nil
	}
	out := new(ValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadInitParameters) DeepCopyInto(out *WorkloadInitParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadInitParameters.
func (in *WorkloadInitParameters) DeepCopy() *WorkloadInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadObservation) DeepCopyInto(out *WorkloadObservation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadObservation.
func (in *WorkloadObservation) DeepCopy() *WorkloadObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadParameters) DeepCopyInto(out *WorkloadParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadParameters.
func (in *WorkloadParameters) DeepCopy() *WorkloadParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsInitParameters) DeepCopyInto(out *WorkloadsInitParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsInitParameters.
func (in *WorkloadsInitParameters) DeepCopy() *WorkloadsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsObservation) DeepCopyInto(out *WorkloadsObservation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsObservation.
func (in *WorkloadsObservation) DeepCopy() *WorkloadsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsParameters) DeepCopyInto(out *WorkloadsParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsParameters.
func (in *WorkloadsParameters) DeepCopy() *WorkloadsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadsParameters)
	in.DeepCopyInto(out)
	return out
}
