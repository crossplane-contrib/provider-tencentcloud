/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DataDiskInitParameters struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. valid when disk_type_policy is ORIGINAL.
	// Types of disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. valid when disk_type_policy is ORIGINAL.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type DataDiskObservation struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. valid when disk_type_policy is ORIGINAL.
	// Types of disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. valid when disk_type_policy is ORIGINAL.
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type DataDiskParameters struct {

	// Indicates whether the disk remove after instance terminated. Default is false.
	// Indicates whether the disk remove after instance terminated. Default is `false`.
	// +kubebuilder:validation:Optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// Volume of disk in GB. Default is 0.
	// Volume of disk in GB. Default is `0`.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Types of disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. valid when disk_type_policy is ORIGINAL.
	// Types of disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. valid when disk_type_policy is ORIGINAL.
	// +kubebuilder:validation:Optional
	DiskType *string `json:"diskType,omitempty" tf:"disk_type,omitempty"`

	// Data disk snapshot ID.
	// Data disk snapshot ID.
	// +kubebuilder:validation:Optional
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`
}

type HostNameSettingsInitParameters struct {

	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, the default is ORIGINAL; ORIGINAL, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; UNIQUE, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	// The style of the host name of the cloud server, the value range includes `ORIGINAL` and `UNIQUE`, the default is `ORIGINAL`; `ORIGINAL`, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; `UNIQUE`, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`
}

type HostNameSettingsObservation struct {

	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, the default is ORIGINAL; ORIGINAL, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; UNIQUE, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	// The style of the host name of the cloud server, the value range includes `ORIGINAL` and `UNIQUE`, the default is `ORIGINAL`; `ORIGINAL`, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; `UNIQUE`, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`
}

type HostNameSettingsParameters struct {

	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	// The host name of the cloud server; dots (.) and dashes (-) cannot be used as the first and last characters of HostName, and cannot be used consecutively; Windows instances are not supported; other types (Linux, etc.) instances: the character length is [2, 40], it is allowed to support multiple dots, and there is a paragraph between the dots, and each paragraph is allowed to consist of letters (no uppercase and lowercase restrictions), numbers and dashes (-). Pure numbers are not allowed.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostName" tf:"host_name,omitempty"`

	// The style of the host name of the cloud server, the value range includes ORIGINAL and UNIQUE, the default is ORIGINAL; ORIGINAL, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; UNIQUE, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	// The style of the host name of the cloud server, the value range includes `ORIGINAL` and `UNIQUE`, the default is `ORIGINAL`; `ORIGINAL`, the AS directly passes the HostName filled in the input parameter to the CVM, and the CVM may append a sequence to the HostName number, the HostName of the instance in the scaling group will conflict; `UNIQUE`, the HostName filled in as a parameter is equivalent to the host name prefix, AS and CVM will expand it, and the HostName of the instance in the scaling group can be guaranteed to be unique.
	// +kubebuilder:validation:Optional
	HostNameStyle *string `json:"hostNameStyle,omitempty" tf:"host_name_style,omitempty"`
}

type InstanceNameSettingsInitParameters struct {

	// CVM instance name.
	// CVM instance name.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default is ORIGINAL.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default is `ORIGINAL`.
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`
}

type InstanceNameSettingsObservation struct {

	// CVM instance name.
	// CVM instance name.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default is ORIGINAL.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default is `ORIGINAL`.
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`
}

type InstanceNameSettingsParameters struct {

	// CVM instance name.
	// CVM instance name.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName" tf:"instance_name,omitempty"`

	// Type of CVM instance name. Valid values: ORIGINAL and UNIQUE. Default is ORIGINAL.
	// Type of CVM instance name. Valid values: `ORIGINAL` and `UNIQUE`. Default is `ORIGINAL`.
	// +kubebuilder:validation:Optional
	InstanceNameStyle *string `json:"instanceNameStyle,omitempty" tf:"instance_name_style,omitempty"`
}

type ScalingConfigInitParameters struct {

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Name of a launch configuration.
	// Name of a launch configuration.
	ConfigurationName *string `json:"configurationName,omitempty" tf:"configuration_name,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []DataDiskInitParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Dedicated Cluster ID.
	// Dedicated Cluster ID.
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// Placement group ID. Only one is allowed.
	// Placement group ID. Only one is allowed.
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// Policy of cloud disk type. Valid values: ORIGINAL and AUTOMATIC. Default is ORIGINAL.
	// Policy of cloud disk type. Valid values: `ORIGINAL` and `AUTOMATIC`. Default is `ORIGINAL`.
	DiskTypePolicy *string `json:"diskTypePolicy,omitempty" tf:"disk_type_policy,omitempty"`

	// To specify whether to enable cloud automation tools service.
	// To specify whether to enable cloud automation tools service.
	EnhancedAutomationToolsService *bool `json:"enhancedAutomationToolsService,omitempty" tf:"enhanced_automation_tools_service,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is `TRUE`.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is `TRUE`.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// Related settings of the cloud server hostname (HostName).
	// Related settings of the cloud server hostname (HostName).
	HostNameSettings []HostNameSettingsInitParameters `json:"hostNameSettings,omitempty" tf:"host_name_settings,omitempty"`

	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	ImageFamily *string `json:"imageFamily,omitempty" tf:"image_family,omitempty"`

	// An available image ID for a cvm instance.
	// An available image ID for a cvm instance.
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID, CDCPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDCPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Settings of CVM instance names.
	// Settings of CVM instance names.
	InstanceNameSettings []InstanceNameSettingsInitParameters `json:"instanceNameSettings,omitempty" tf:"instance_name_settings,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +mapType=granular
	InstanceTags map[string]*string `json:"instanceTags,omitempty" tf:"instance_tags,omitempty"`

	// Specified types of CVM instances.
	// Specified types of CVM instances.
	InstanceTypes []*string `json:"instanceTypes,omitempty" tf:"instance_types,omitempty"`

	// Charge types for network traffic. Valid values: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid values: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	KeepImageLogin *bool `json:"keepImageLogin,omitempty" tf:"keep_image_login,omitempty"`

	// ID list of keys.
	// ID list of keys.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Specifys to which project the configuration belongs.
	// Specifys to which project the configuration belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. Default is CLOUD_PREMIUM. valid when disk_type_policy is ORIGINAL.
	// Type of a CVM disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`. valid when disk_type_policy is ORIGINAL.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// ase64-encoded User Data text, the length limit is 16KB.
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type ScalingConfigObservation struct {

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Name of a launch configuration.
	// Name of a launch configuration.
	ConfigurationName *string `json:"configurationName,omitempty" tf:"configuration_name,omitempty"`

	// The time when the launch configuration was created.
	// The time when the launch configuration was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	DataDisk []DataDiskObservation `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Dedicated Cluster ID.
	// Dedicated Cluster ID.
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// Placement group ID. Only one is allowed.
	// Placement group ID. Only one is allowed.
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// Policy of cloud disk type. Valid values: ORIGINAL and AUTOMATIC. Default is ORIGINAL.
	// Policy of cloud disk type. Valid values: `ORIGINAL` and `AUTOMATIC`. Default is `ORIGINAL`.
	DiskTypePolicy *string `json:"diskTypePolicy,omitempty" tf:"disk_type_policy,omitempty"`

	// To specify whether to enable cloud automation tools service.
	// To specify whether to enable cloud automation tools service.
	EnhancedAutomationToolsService *bool `json:"enhancedAutomationToolsService,omitempty" tf:"enhanced_automation_tools_service,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is `TRUE`.
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is `TRUE`.
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// Related settings of the cloud server hostname (HostName).
	// Related settings of the cloud server hostname (HostName).
	HostNameSettings []HostNameSettingsObservation `json:"hostNameSettings,omitempty" tf:"host_name_settings,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	ImageFamily *string `json:"imageFamily,omitempty" tf:"image_family,omitempty"`

	// An available image ID for a cvm instance.
	// An available image ID for a cvm instance.
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID, CDCPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDCPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Settings of CVM instance names.
	// Settings of CVM instance names.
	InstanceNameSettings []InstanceNameSettingsObservation `json:"instanceNameSettings,omitempty" tf:"instance_name_settings,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +mapType=granular
	InstanceTags map[string]*string `json:"instanceTags,omitempty" tf:"instance_tags,omitempty"`

	// Specified types of CVM instances.
	// Specified types of CVM instances.
	InstanceTypes []*string `json:"instanceTypes,omitempty" tf:"instance_types,omitempty"`

	// Charge types for network traffic. Valid values: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid values: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	KeepImageLogin *bool `json:"keepImageLogin,omitempty" tf:"keep_image_login,omitempty"`

	// ID list of keys.
	// ID list of keys.
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Specifys to which project the configuration belongs.
	// Specifys to which project the configuration belongs.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Current statues of a launch configuration.
	// Current statues of a launch configuration.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. Default is CLOUD_PREMIUM. valid when disk_type_policy is ORIGINAL.
	// Type of a CVM disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`. valid when disk_type_policy is ORIGINAL.
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// ase64-encoded User Data text, the length limit is 16KB.
	// ase64-encoded User Data text, the length limit is 16KB.
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type ScalingConfigParameters struct {

	// CAM role name authorized to access.
	// CAM role name authorized to access.
	// +kubebuilder:validation:Optional
	CamRoleName *string `json:"camRoleName,omitempty" tf:"cam_role_name,omitempty"`

	// Name of a launch configuration.
	// Name of a launch configuration.
	// +kubebuilder:validation:Optional
	ConfigurationName *string `json:"configurationName,omitempty" tf:"configuration_name,omitempty"`

	// Configurations of data disk.
	// Configurations of data disk.
	// +kubebuilder:validation:Optional
	DataDisk []DataDiskParameters `json:"dataDisk,omitempty" tf:"data_disk,omitempty"`

	// Dedicated Cluster ID.
	// Dedicated Cluster ID.
	// +kubebuilder:validation:Optional
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// Placement group ID. Only one is allowed.
	// Placement group ID. Only one is allowed.
	// +kubebuilder:validation:Optional
	DisasterRecoverGroupIds []*string `json:"disasterRecoverGroupIds,omitempty" tf:"disaster_recover_group_ids,omitempty"`

	// Policy of cloud disk type. Valid values: ORIGINAL and AUTOMATIC. Default is ORIGINAL.
	// Policy of cloud disk type. Valid values: `ORIGINAL` and `AUTOMATIC`. Default is `ORIGINAL`.
	// +kubebuilder:validation:Optional
	DiskTypePolicy *string `json:"diskTypePolicy,omitempty" tf:"disk_type_policy,omitempty"`

	// To specify whether to enable cloud automation tools service.
	// To specify whether to enable cloud automation tools service.
	// +kubebuilder:validation:Optional
	EnhancedAutomationToolsService *bool `json:"enhancedAutomationToolsService,omitempty" tf:"enhanced_automation_tools_service,omitempty"`

	// To specify whether to enable cloud monitor service. Default is TRUE.
	// To specify whether to enable cloud monitor service. Default is `TRUE`.
	// +kubebuilder:validation:Optional
	EnhancedMonitorService *bool `json:"enhancedMonitorService,omitempty" tf:"enhanced_monitor_service,omitempty"`

	// To specify whether to enable cloud security service. Default is TRUE.
	// To specify whether to enable cloud security service. Default is `TRUE`.
	// +kubebuilder:validation:Optional
	EnhancedSecurityService *bool `json:"enhancedSecurityService,omitempty" tf:"enhanced_security_service,omitempty"`

	// Related settings of the cloud server hostname (HostName).
	// Related settings of the cloud server hostname (HostName).
	// +kubebuilder:validation:Optional
	HostNameSettings []HostNameSettingsParameters `json:"hostNameSettings,omitempty" tf:"host_name_settings,omitempty"`

	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	// Image Family Name. Either Image ID or Image Family Name must be provided, but not both.
	// +kubebuilder:validation:Optional
	ImageFamily *string `json:"imageFamily,omitempty" tf:"image_family,omitempty"`

	// An available image ID for a cvm instance.
	// An available image ID for a cvm instance.
	// +kubebuilder:validation:Optional
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// Charge type of instance. Valid values are PREPAID, POSTPAID_BY_HOUR, SPOTPAID, CDCPAID. The default is POSTPAID_BY_HOUR. NOTE: SPOTPAID instance must set spot_instance_type and spot_max_price at the same time.
	// Charge type of instance. Valid values are `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`, `CDCPAID`. The default is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must set `spot_instance_type` and `spot_max_price` at the same time.
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to PREPAID. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// The tenancy (in month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidPeriod *float64 `json:"instanceChargeTypePrepaidPeriod,omitempty" tf:"instance_charge_type_prepaid_period,omitempty"`

	// Auto renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify upon expiration and renew automatically, NOTIFY_AND_MANUAL_RENEW: notify upon expiration but do not renew automatically, DISABLE_NOTIFY_AND_MANUAL_RENEW: neither notify upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW. If this parameter is specified as NOTIFY_AND_AUTO_RENEW, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to PREPAID.
	// Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
	// +kubebuilder:validation:Optional
	InstanceChargeTypePrepaidRenewFlag *string `json:"instanceChargeTypePrepaidRenewFlag,omitempty" tf:"instance_charge_type_prepaid_renew_flag,omitempty"`

	// Settings of CVM instance names.
	// Settings of CVM instance names.
	// +kubebuilder:validation:Optional
	InstanceNameSettings []InstanceNameSettingsParameters `json:"instanceNameSettings,omitempty" tf:"instance_name_settings,omitempty"`

	// A list of tags used to associate different resources.
	// A list of tags used to associate different resources.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	InstanceTags map[string]*string `json:"instanceTags,omitempty" tf:"instance_tags,omitempty"`

	// Specified types of CVM instances.
	// Specified types of CVM instances.
	// +kubebuilder:validation:Optional
	InstanceTypes []*string `json:"instanceTypes,omitempty" tf:"instance_types,omitempty"`

	// Charge types for network traffic. Valid values: BANDWIDTH_PREPAID, TRAFFIC_POSTPAID_BY_HOUR and BANDWIDTH_PACKAGE.
	// Charge types for network traffic. Valid values: `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`.
	// +kubebuilder:validation:Optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// Max bandwidth of Internet access in Mbps. Default is 0.
	// Max bandwidth of Internet access in Mbps. Default is `0`.
	// +kubebuilder:validation:Optional
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	// Specify whether to keep original settings of a CVM image. And it can't be used with password or key_ids together.
	// +kubebuilder:validation:Optional
	KeepImageLogin *bool `json:"keepImageLogin,omitempty" tf:"keep_image_login,omitempty"`

	// ID list of keys.
	// ID list of keys.
	// +kubebuilder:validation:Optional
	KeyIds []*string `json:"keyIds,omitempty" tf:"key_ids,omitempty"`

	// Password to access.
	// Password to access.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifys to which project the configuration belongs.
	// Specifys to which project the configuration belongs.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Specify whether to assign an Internet IP address.
	// Specify whether to assign an Internet IP address.
	// +kubebuilder:validation:Optional
	PublicIPAssigned *bool `json:"publicIpAssigned,omitempty" tf:"public_ip_assigned,omitempty"`

	// Security groups to which a CVM instance belongs.
	// Security groups to which a CVM instance belongs.
	// +kubebuilder:validation:Optional
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Type of spot instance, only support one-time now. Note: it only works when instance_charge_type is set to SPOTPAID.
	// Type of spot instance, only support `one-time` now. Note: it only works when instance_charge_type is set to `SPOTPAID`.
	// +kubebuilder:validation:Optional
	SpotInstanceType *string `json:"spotInstanceType,omitempty" tf:"spot_instance_type,omitempty"`

	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to SPOTPAID.
	// Max price of a spot instance, is the format of decimal string, for example "0.50". Note: it only works when instance_charge_type is set to `SPOTPAID`.
	// +kubebuilder:validation:Optional
	SpotMaxPrice *string `json:"spotMaxPrice,omitempty" tf:"spot_max_price,omitempty"`

	// Volume of system disk in GB. Default is 50.
	// Volume of system disk in GB. Default is `50`.
	// +kubebuilder:validation:Optional
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Type of a CVM disk. Valid values: CLOUD_PREMIUM and CLOUD_SSD. Default is CLOUD_PREMIUM. valid when disk_type_policy is ORIGINAL.
	// Type of a CVM disk. Valid values: `CLOUD_PREMIUM` and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`. valid when disk_type_policy is ORIGINAL.
	// +kubebuilder:validation:Optional
	SystemDiskType *string `json:"systemDiskType,omitempty" tf:"system_disk_type,omitempty"`

	// ase64-encoded User Data text, the length limit is 16KB.
	// ase64-encoded User Data text, the length limit is 16KB.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

// ScalingConfigSpec defines the desired state of ScalingConfig
type ScalingConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ScalingConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ScalingConfigInitParameters `json:"initProvider,omitempty"`
}

// ScalingConfigStatus defines the observed state of ScalingConfig.
type ScalingConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ScalingConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ScalingConfig is the Schema for the ScalingConfigs API. Provides a resource to create a configuration for an AS (Auto scaling) instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ScalingConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.configurationName) || (has(self.initProvider) && has(self.initProvider.configurationName))",message="spec.forProvider.configurationName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceTypes) || (has(self.initProvider) && has(self.initProvider.instanceTypes))",message="spec.forProvider.instanceTypes is a required parameter"
	Spec   ScalingConfigSpec   `json:"spec"`
	Status ScalingConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ScalingConfigList contains a list of ScalingConfigs
type ScalingConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ScalingConfig `json:"items"`
}

// Repository type metadata.
var (
	ScalingConfig_Kind             = "ScalingConfig"
	ScalingConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ScalingConfig_Kind}.String()
	ScalingConfig_KindAPIVersion   = ScalingConfig_Kind + "." + CRDGroupVersion.String()
	ScalingConfig_GroupVersionKind = CRDGroupVersion.WithKind(ScalingConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&ScalingConfig{}, &ScalingConfigList{})
}
