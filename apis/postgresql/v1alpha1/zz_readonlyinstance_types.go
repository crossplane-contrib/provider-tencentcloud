/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadonlyInstanceInitParameters struct {

	// Auto renew flag, 1 for enabled. NOTES: Only support prepaid instance.
	// Auto renew flag, `1` for enabled. NOTES: Only support prepaid instance.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// Whether to use voucher, 1 for enabled.
	// Whether to use voucher, `1` for enabled.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Number of CPU cores. Allowed value must be equal cpu that data source tencentcloud_postgresql_specinfos provides.
	// Number of CPU cores. Allowed value must be equal `cpu` that data source `tencentcloud_postgresql_specinfos` provides.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// Dedicated cluster ID.
	// Dedicated cluster ID.
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// ID of the primary instance to which the read-only replica belongs.
	// ID of the primary instance to which the read-only replica belongs.
	MasterDBInstanceID *string `json:"masterDbInstanceId,omitempty" tf:"master_db_instance_id,omitempty"`

	// Memory size(in GB). Allowed value must be larger than memory that data source tencentcloud_postgresql_specinfos provides.
	// Memory size(in GB). Allowed value must be larger than `memory` that data source `tencentcloud_postgresql_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Instance name.
	// Instance name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	NeedSupportIPv6 *float64 `json:"needSupportIpv6,omitempty" tf:"need_support_ipv6,omitempty"`

	// Specify Prepaid period in month. Default 1. Values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// Specify Prepaid period in month. Default `1`. Values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// RO group ID.
	// RO group ID.
	ReadOnlyGroupID *string `json:"readOnlyGroupId,omitempty" tf:"read_only_group_id,omitempty"`

	// ID of security group.
	// ID of security group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.SecurityGroup
	// +listType=set
	SecurityGroupsIds []*string `json:"securityGroupsIds,omitempty" tf:"security_groups_ids,omitempty"`

	// References to SecurityGroup in vpc to populate securityGroupsIds.
	// +kubebuilder:validation:Optional
	SecurityGroupsIdsRefs []v1.Reference `json:"securityGroupsIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in vpc to populate securityGroupsIds.
	// +kubebuilder:validation:Optional
	SecurityGroupsIdsSelector *v1.Selector `json:"securityGroupsIdsSelector,omitempty" tf:"-"`

	// Instance storage capacity in GB.
	// Instance storage capacity in GB.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// VPC subnet ID.
	// VPC subnet ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// VPC ID.
	// VPC ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specify Voucher Ids if auto_voucher was 1, only support using 1 vouchers for now.
	// Specify Voucher Ids if `auto_voucher` was `1`, only support using 1 vouchers for now.
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// Switch time after instance configurations are modified. 0: Switch immediately; 2: Switch during maintenance time window. Default: 0. Note: This only takes effect when updating the memory, storage, cpu fields.
	// Switch time after instance configurations are modified. `0`: Switch immediately; `2`: Switch during maintenance time window. Default: `0`. Note: This only takes effect when updating the `memory`, `storage`, `cpu` fields.
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`

	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type ReadonlyInstanceObservation struct {

	// Auto renew flag, 1 for enabled. NOTES: Only support prepaid instance.
	// Auto renew flag, `1` for enabled. NOTES: Only support prepaid instance.
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// Whether to use voucher, 1 for enabled.
	// Whether to use voucher, `1` for enabled.
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Number of CPU cores. Allowed value must be equal cpu that data source tencentcloud_postgresql_specinfos provides.
	// Number of CPU cores. Allowed value must be equal `cpu` that data source `tencentcloud_postgresql_specinfos` provides.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Create time of the postgresql instance.
	// Create time of the postgresql instance.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// Dedicated cluster ID.
	// Dedicated cluster ID.
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The instance ID of this readonly resource.
	// The instance ID of this readonly resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// ID of the primary instance to which the read-only replica belongs.
	// ID of the primary instance to which the read-only replica belongs.
	MasterDBInstanceID *string `json:"masterDbInstanceId,omitempty" tf:"master_db_instance_id,omitempty"`

	// Memory size(in GB). Allowed value must be larger than memory that data source tencentcloud_postgresql_specinfos provides.
	// Memory size(in GB). Allowed value must be larger than `memory` that data source `tencentcloud_postgresql_specinfos` provides.
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Instance name.
	// Instance name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	NeedSupportIPv6 *float64 `json:"needSupportIpv6,omitempty" tf:"need_support_ipv6,omitempty"`

	// Specify Prepaid period in month. Default 1. Values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// Specify Prepaid period in month. Default `1`. Values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// IP for private access.
	// IP for private access.
	PrivateAccessIP *string `json:"privateAccessIp,omitempty" tf:"private_access_ip,omitempty"`

	// Port for private access.
	// Port for private access.
	PrivateAccessPort *float64 `json:"privateAccessPort,omitempty" tf:"private_access_port,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// RO group ID.
	// RO group ID.
	ReadOnlyGroupID *string `json:"readOnlyGroupId,omitempty" tf:"read_only_group_id,omitempty"`

	// ID of security group.
	// ID of security group.
	// +listType=set
	SecurityGroupsIds []*string `json:"securityGroupsIds,omitempty" tf:"security_groups_ids,omitempty"`

	// Instance storage capacity in GB.
	// Instance storage capacity in GB.
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// VPC subnet ID.
	// VPC subnet ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// VPC ID.
	// VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specify Voucher Ids if auto_voucher was 1, only support using 1 vouchers for now.
	// Specify Voucher Ids if `auto_voucher` was `1`, only support using 1 vouchers for now.
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// Switch time after instance configurations are modified. 0: Switch immediately; 2: Switch during maintenance time window. Default: 0. Note: This only takes effect when updating the memory, storage, cpu fields.
	// Switch time after instance configurations are modified. `0`: Switch immediately; `2`: Switch during maintenance time window. Default: `0`. Note: This only takes effect when updating the `memory`, `storage`, `cpu` fields.
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`

	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type ReadonlyInstanceParameters struct {

	// Auto renew flag, 1 for enabled. NOTES: Only support prepaid instance.
	// Auto renew flag, `1` for enabled. NOTES: Only support prepaid instance.
	// +kubebuilder:validation:Optional
	AutoRenewFlag *float64 `json:"autoRenewFlag,omitempty" tf:"auto_renew_flag,omitempty"`

	// Whether to use voucher, 1 for enabled.
	// Whether to use voucher, `1` for enabled.
	// +kubebuilder:validation:Optional
	AutoVoucher *float64 `json:"autoVoucher,omitempty" tf:"auto_voucher,omitempty"`

	// Number of CPU cores. Allowed value must be equal cpu that data source tencentcloud_postgresql_specinfos provides.
	// Number of CPU cores. Allowed value must be equal `cpu` that data source `tencentcloud_postgresql_specinfos` provides.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	// PostgreSQL kernel version, which must be the same as that of the primary instance.
	// +kubebuilder:validation:Optional
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// Dedicated cluster ID.
	// Dedicated cluster ID.
	// +kubebuilder:validation:Optional
	DedicatedClusterID *string `json:"dedicatedClusterId,omitempty" tf:"dedicated_cluster_id,omitempty"`

	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	// instance billing mode. Valid values: PREPAID (monthly subscription), POSTPAID_BY_HOUR (pay-as-you-go).
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// ID of the primary instance to which the read-only replica belongs.
	// ID of the primary instance to which the read-only replica belongs.
	// +kubebuilder:validation:Optional
	MasterDBInstanceID *string `json:"masterDbInstanceId,omitempty" tf:"master_db_instance_id,omitempty"`

	// Memory size(in GB). Allowed value must be larger than memory that data source tencentcloud_postgresql_specinfos provides.
	// Memory size(in GB). Allowed value must be larger than `memory` that data source `tencentcloud_postgresql_specinfos` provides.
	// +kubebuilder:validation:Optional
	Memory *float64 `json:"memory,omitempty" tf:"memory,omitempty"`

	// Instance name.
	// Instance name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	// Whether to support IPv6 address access. Valid values: 1 (yes), 0 (no).
	// +kubebuilder:validation:Optional
	NeedSupportIPv6 *float64 `json:"needSupportIpv6,omitempty" tf:"need_support_ipv6,omitempty"`

	// Specify Prepaid period in month. Default 1. Values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36.
	// Specify Prepaid period in month. Default `1`. Values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Project ID.
	// Project ID.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// RO group ID.
	// RO group ID.
	// +kubebuilder:validation:Optional
	ReadOnlyGroupID *string `json:"readOnlyGroupId,omitempty" tf:"read_only_group_id,omitempty"`

	// ID of security group.
	// ID of security group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupsIds []*string `json:"securityGroupsIds,omitempty" tf:"security_groups_ids,omitempty"`

	// References to SecurityGroup in vpc to populate securityGroupsIds.
	// +kubebuilder:validation:Optional
	SecurityGroupsIdsRefs []v1.Reference `json:"securityGroupsIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in vpc to populate securityGroupsIds.
	// +kubebuilder:validation:Optional
	SecurityGroupsIdsSelector *v1.Selector `json:"securityGroupsIdsSelector,omitempty" tf:"-"`

	// Instance storage capacity in GB.
	// Instance storage capacity in GB.
	// +kubebuilder:validation:Optional
	Storage *float64 `json:"storage,omitempty" tf:"storage,omitempty"`

	// VPC subnet ID.
	// VPC subnet ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// VPC ID.
	// VPC ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specify Voucher Ids if auto_voucher was 1, only support using 1 vouchers for now.
	// Specify Voucher Ids if `auto_voucher` was `1`, only support using 1 vouchers for now.
	// +kubebuilder:validation:Optional
	VoucherIds []*string `json:"voucherIds,omitempty" tf:"voucher_ids,omitempty"`

	// Switch time after instance configurations are modified. 0: Switch immediately; 2: Switch during maintenance time window. Default: 0. Note: This only takes effect when updating the memory, storage, cpu fields.
	// Switch time after instance configurations are modified. `0`: Switch immediately; `2`: Switch during maintenance time window. Default: `0`. Note: This only takes effect when updating the `memory`, `storage`, `cpu` fields.
	// +kubebuilder:validation:Optional
	WaitSwitch *float64 `json:"waitSwitch,omitempty" tf:"wait_switch,omitempty"`

	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	// Availability zone ID, which can be obtained through the Zone field in the returned value of the DescribeZones API.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

// ReadonlyInstanceSpec defines the desired state of ReadonlyInstance
type ReadonlyInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadonlyInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReadonlyInstanceInitParameters `json:"initProvider,omitempty"`
}

// ReadonlyInstanceStatus defines the observed state of ReadonlyInstance.
type ReadonlyInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadonlyInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ReadonlyInstance is the Schema for the ReadonlyInstances API. Use this resource to create postgresql readonly instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ReadonlyInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dbVersion) || (has(self.initProvider) && has(self.initProvider.dbVersion))",message="spec.forProvider.dbVersion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.masterDbInstanceId) || (has(self.initProvider) && has(self.initProvider.masterDbInstanceId))",message="spec.forProvider.masterDbInstanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.memory) || (has(self.initProvider) && has(self.initProvider.memory))",message="spec.forProvider.memory is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.projectId) || (has(self.initProvider) && has(self.initProvider.projectId))",message="spec.forProvider.projectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storage) || (has(self.initProvider) && has(self.initProvider.storage))",message="spec.forProvider.storage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zone) || (has(self.initProvider) && has(self.initProvider.zone))",message="spec.forProvider.zone is a required parameter"
	Spec   ReadonlyInstanceSpec   `json:"spec"`
	Status ReadonlyInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyInstanceList contains a list of ReadonlyInstances
type ReadonlyInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadonlyInstance `json:"items"`
}

// Repository type metadata.
var (
	ReadonlyInstance_Kind             = "ReadonlyInstance"
	ReadonlyInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadonlyInstance_Kind}.String()
	ReadonlyInstance_KindAPIVersion   = ReadonlyInstance_Kind + "." + CRDGroupVersion.String()
	ReadonlyInstance_GroupVersionKind = CRDGroupVersion.WithKind(ReadonlyInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadonlyInstance{}, &ReadonlyInstanceList{})
}
