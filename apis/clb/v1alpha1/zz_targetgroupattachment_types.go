/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TargetGroupAttachmentInitParameters struct {

	// ID of the CLB.
	// ID of the CLB.
	// +crossplane:generate:reference:type=Instance
	ClbID *string `json:"clbId,omitempty" tf:"clb_id,omitempty"`

	// Reference to a Instance to populate clbId.
	// +kubebuilder:validation:Optional
	ClbIDRef *v1.Reference `json:"clbIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate clbId.
	// +kubebuilder:validation:Optional
	ClbIDSelector *v1.Selector `json:"clbIdSelector,omitempty" tf:"-"`

	// ID of the CLB listener.
	// ID of the CLB listener.
	// +crossplane:generate:reference:type=Listener
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// ID of the CLB listener rule.
	// ID of the CLB listener rule.
	// +crossplane:generate:reference:type=ListenerRule
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// Reference to a ListenerRule to populate ruleId.
	// +kubebuilder:validation:Optional
	RuleIDRef *v1.Reference `json:"ruleIdRef,omitempty" tf:"-"`

	// Selector for a ListenerRule to populate ruleId.
	// +kubebuilder:validation:Optional
	RuleIDSelector *v1.Selector `json:"ruleIdSelector,omitempty" tf:"-"`

	// ID of the CLB target group.
	// ID of the CLB target group.
	// +crossplane:generate:reference:type=TargetGroup
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`

	// Reference to a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDRef *v1.Reference `json:"targetGroupIdRef,omitempty" tf:"-"`

	// Selector for a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDSelector *v1.Selector `json:"targetGroupIdSelector,omitempty" tf:"-"`
}

type TargetGroupAttachmentObservation struct {

	// ID of the CLB.
	// ID of the CLB.
	ClbID *string `json:"clbId,omitempty" tf:"clb_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ID of the CLB listener.
	// ID of the CLB listener.
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// ID of the CLB listener rule.
	// ID of the CLB listener rule.
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// ID of the CLB target group.
	// ID of the CLB target group.
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`
}

type TargetGroupAttachmentParameters struct {

	// ID of the CLB.
	// ID of the CLB.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	ClbID *string `json:"clbId,omitempty" tf:"clb_id,omitempty"`

	// Reference to a Instance to populate clbId.
	// +kubebuilder:validation:Optional
	ClbIDRef *v1.Reference `json:"clbIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate clbId.
	// +kubebuilder:validation:Optional
	ClbIDSelector *v1.Selector `json:"clbIdSelector,omitempty" tf:"-"`

	// ID of the CLB listener.
	// ID of the CLB listener.
	// +crossplane:generate:reference:type=Listener
	// +kubebuilder:validation:Optional
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// ID of the CLB listener rule.
	// ID of the CLB listener rule.
	// +crossplane:generate:reference:type=ListenerRule
	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// Reference to a ListenerRule to populate ruleId.
	// +kubebuilder:validation:Optional
	RuleIDRef *v1.Reference `json:"ruleIdRef,omitempty" tf:"-"`

	// Selector for a ListenerRule to populate ruleId.
	// +kubebuilder:validation:Optional
	RuleIDSelector *v1.Selector `json:"ruleIdSelector,omitempty" tf:"-"`

	// ID of the CLB target group.
	// ID of the CLB target group.
	// +crossplane:generate:reference:type=TargetGroup
	// +kubebuilder:validation:Optional
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`

	// Reference to a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDRef *v1.Reference `json:"targetGroupIdRef,omitempty" tf:"-"`

	// Selector for a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDSelector *v1.Selector `json:"targetGroupIdSelector,omitempty" tf:"-"`
}

// TargetGroupAttachmentSpec defines the desired state of TargetGroupAttachment
type TargetGroupAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TargetGroupAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TargetGroupAttachmentInitParameters `json:"initProvider,omitempty"`
}

// TargetGroupAttachmentStatus defines the observed state of TargetGroupAttachment.
type TargetGroupAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TargetGroupAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TargetGroupAttachment is the Schema for the TargetGroupAttachments API. Provides a resource to create a CLB target group attachment is bound to the load balancing listener or forwarding rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type TargetGroupAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TargetGroupAttachmentSpec   `json:"spec"`
	Status            TargetGroupAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TargetGroupAttachmentList contains a list of TargetGroupAttachments
type TargetGroupAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TargetGroupAttachment `json:"items"`
}

// Repository type metadata.
var (
	TargetGroupAttachment_Kind             = "TargetGroupAttachment"
	TargetGroupAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TargetGroupAttachment_Kind}.String()
	TargetGroupAttachment_KindAPIVersion   = TargetGroupAttachment_Kind + "." + CRDGroupVersion.String()
	TargetGroupAttachment_GroupVersionKind = CRDGroupVersion.WithKind(TargetGroupAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&TargetGroupAttachment{}, &TargetGroupAttachmentList{})
}
