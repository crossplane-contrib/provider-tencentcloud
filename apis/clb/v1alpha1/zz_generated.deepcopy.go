//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachment) DeepCopyInto(out *AlbServerAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachment.
func (in *AlbServerAttachment) DeepCopy() *AlbServerAttachment {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbServerAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentInitParameters) DeepCopyInto(out *AlbServerAttachmentInitParameters) {
	*out = *in
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]BackendsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentInitParameters.
func (in *AlbServerAttachmentInitParameters) DeepCopy() *AlbServerAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentList) DeepCopyInto(out *AlbServerAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlbServerAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentList.
func (in *AlbServerAttachmentList) DeepCopy() *AlbServerAttachmentList {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbServerAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentObservation) DeepCopyInto(out *AlbServerAttachmentObservation) {
	*out = *in
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]BackendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentObservation.
func (in *AlbServerAttachmentObservation) DeepCopy() *AlbServerAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentParameters) DeepCopyInto(out *AlbServerAttachmentParameters) {
	*out = *in
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]BackendsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentParameters.
func (in *AlbServerAttachmentParameters) DeepCopy() *AlbServerAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentSpec) DeepCopyInto(out *AlbServerAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentSpec.
func (in *AlbServerAttachmentSpec) DeepCopy() *AlbServerAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbServerAttachmentStatus) DeepCopyInto(out *AlbServerAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbServerAttachmentStatus.
func (in *AlbServerAttachmentStatus) DeepCopy() *AlbServerAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(AlbServerAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Attachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentInitParameters) DeepCopyInto(out *AttachmentInitParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.RuleIDRef != nil {
		in, out := &in.RuleIDRef, &out.RuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleIDSelector != nil {
		in, out := &in.RuleIDSelector, &out.RuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentInitParameters.
func (in *AttachmentInitParameters) DeepCopy() *AttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentList) DeepCopyInto(out *AttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Attachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentList.
func (in *AttachmentList) DeepCopy() *AttachmentList {
	if in == nil {
		return nil
	}
	out := new(AttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentObservation) DeepCopyInto(out *AttachmentObservation) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentObservation.
func (in *AttachmentObservation) DeepCopy() *AttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(AttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentParameters) DeepCopyInto(out *AttachmentParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.RuleIDRef != nil {
		in, out := &in.RuleIDRef, &out.RuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleIDSelector != nil {
		in, out := &in.RuleIDSelector, &out.RuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentParameters.
func (in *AttachmentParameters) DeepCopy() *AttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentSpec) DeepCopyInto(out *AttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentSpec.
func (in *AttachmentSpec) DeepCopy() *AttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(AttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentStatus) DeepCopyInto(out *AttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentStatus.
func (in *AttachmentStatus) DeepCopy() *AttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(AttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsInitParameters) DeepCopyInto(out *BackendsInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsInitParameters.
func (in *BackendsInitParameters) DeepCopy() *BackendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsObservation) DeepCopyInto(out *BackendsObservation) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsObservation.
func (in *BackendsObservation) DeepCopy() *BackendsObservation {
	if in == nil {
		return nil
	}
	out := new(BackendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsParameters) DeepCopyInto(out *BackendsParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsParameters.
func (in *BackendsParameters) DeepCopy() *BackendsParameters {
	if in == nil {
		return nil
	}
	out := new(BackendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfig) DeepCopyInto(out *CustomizedConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfig.
func (in *CustomizedConfig) DeepCopy() *CustomizedConfig {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomizedConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigInitParameters) DeepCopyInto(out *CustomizedConfigInitParameters) {
	*out = *in
	if in.ConfigContent != nil {
		in, out := &in.ConfigContent, &out.ConfigContent
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIds != nil {
		in, out := &in.LoadBalancerIds, &out.LoadBalancerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigInitParameters.
func (in *CustomizedConfigInitParameters) DeepCopy() *CustomizedConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigList) DeepCopyInto(out *CustomizedConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomizedConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigList.
func (in *CustomizedConfigList) DeepCopy() *CustomizedConfigList {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomizedConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigObservation) DeepCopyInto(out *CustomizedConfigObservation) {
	*out = *in
	if in.ConfigContent != nil {
		in, out := &in.ConfigContent, &out.ConfigContent
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIds != nil {
		in, out := &in.LoadBalancerIds, &out.LoadBalancerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigObservation.
func (in *CustomizedConfigObservation) DeepCopy() *CustomizedConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigParameters) DeepCopyInto(out *CustomizedConfigParameters) {
	*out = *in
	if in.ConfigContent != nil {
		in, out := &in.ConfigContent, &out.ConfigContent
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIds != nil {
		in, out := &in.LoadBalancerIds, &out.LoadBalancerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigParameters.
func (in *CustomizedConfigParameters) DeepCopy() *CustomizedConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigSpec) DeepCopyInto(out *CustomizedConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigSpec.
func (in *CustomizedConfigSpec) DeepCopy() *CustomizedConfigSpec {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizedConfigStatus) DeepCopyInto(out *CustomizedConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizedConfigStatus.
func (in *CustomizedConfigStatus) DeepCopy() *CustomizedConfigStatus {
	if in == nil {
		return nil
	}
	out := new(CustomizedConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.ClbName != nil {
		in, out := &in.ClbName, &out.ClbName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DeleteProtect != nil {
		in, out := &in.DeleteProtect, &out.DeleteProtect
		*out = new(bool)
		**out = **in
	}
	if in.DynamicVip != nil {
		in, out := &in.DynamicVip, &out.DynamicVip
		*out = new(bool)
		**out = **in
	}
	if in.EIPAddressID != nil {
		in, out := &in.EIPAddressID, &out.EIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.InternetBandwidthMaxOut != nil {
		in, out := &in.InternetBandwidthMaxOut, &out.InternetBandwidthMaxOut
		*out = new(float64)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerPassToTarget != nil {
		in, out := &in.LoadBalancerPassToTarget, &out.LoadBalancerPassToTarget
		*out = new(bool)
		**out = **in
	}
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.LogTopicID != nil {
		in, out := &in.LogTopicID, &out.LogTopicID
		*out = new(string)
		**out = **in
	}
	if in.MasterZoneID != nil {
		in, out := &in.MasterZoneID, &out.MasterZoneID
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.SLAType != nil {
		in, out := &in.SLAType, &out.SLAType
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SlaveZoneID != nil {
		in, out := &in.SlaveZoneID, &out.SlaveZoneID
		*out = new(string)
		**out = **in
	}
	if in.SnatIps != nil {
		in, out := &in.SnatIps, &out.SnatIps
		*out = make([]SnatIpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatPro != nil {
		in, out := &in.SnatPro, &out.SnatPro
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetRegionInfoRegion != nil {
		in, out := &in.TargetRegionInfoRegion, &out.TargetRegionInfoRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetRegionInfoVPCID != nil {
		in, out := &in.TargetRegionInfoVPCID, &out.TargetRegionInfoVPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.VipIsp != nil {
		in, out := &in.VipIsp, &out.VipIsp
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.AddressIPv6 != nil {
		in, out := &in.AddressIPv6, &out.AddressIPv6
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.ClbName != nil {
		in, out := &in.ClbName, &out.ClbName
		*out = new(string)
		**out = **in
	}
	if in.ClbVips != nil {
		in, out := &in.ClbVips, &out.ClbVips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DeleteProtect != nil {
		in, out := &in.DeleteProtect, &out.DeleteProtect
		*out = new(bool)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DynamicVip != nil {
		in, out := &in.DynamicVip, &out.DynamicVip
		*out = new(bool)
		**out = **in
	}
	if in.EIPAddressID != nil {
		in, out := &in.EIPAddressID, &out.EIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Mode != nil {
		in, out := &in.IPv6Mode, &out.IPv6Mode
		*out = new(string)
		**out = **in
	}
	if in.InternetBandwidthMaxOut != nil {
		in, out := &in.InternetBandwidthMaxOut, &out.InternetBandwidthMaxOut
		*out = new(float64)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerPassToTarget != nil {
		in, out := &in.LoadBalancerPassToTarget, &out.LoadBalancerPassToTarget
		*out = new(bool)
		**out = **in
	}
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.LogTopicID != nil {
		in, out := &in.LogTopicID, &out.LogTopicID
		*out = new(string)
		**out = **in
	}
	if in.MasterZoneID != nil {
		in, out := &in.MasterZoneID, &out.MasterZoneID
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.SLAType != nil {
		in, out := &in.SLAType, &out.SLAType
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SlaveZoneID != nil {
		in, out := &in.SlaveZoneID, &out.SlaveZoneID
		*out = new(string)
		**out = **in
	}
	if in.SnatIps != nil {
		in, out := &in.SnatIps, &out.SnatIps
		*out = make([]SnatIpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatPro != nil {
		in, out := &in.SnatPro, &out.SnatPro
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetRegionInfoRegion != nil {
		in, out := &in.TargetRegionInfoRegion, &out.TargetRegionInfoRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetRegionInfoVPCID != nil {
		in, out := &in.TargetRegionInfoVPCID, &out.TargetRegionInfoVPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.VipIsp != nil {
		in, out := &in.VipIsp, &out.VipIsp
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.ClbName != nil {
		in, out := &in.ClbName, &out.ClbName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DeleteProtect != nil {
		in, out := &in.DeleteProtect, &out.DeleteProtect
		*out = new(bool)
		**out = **in
	}
	if in.DynamicVip != nil {
		in, out := &in.DynamicVip, &out.DynamicVip
		*out = new(bool)
		**out = **in
	}
	if in.EIPAddressID != nil {
		in, out := &in.EIPAddressID, &out.EIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.InternetBandwidthMaxOut != nil {
		in, out := &in.InternetBandwidthMaxOut, &out.InternetBandwidthMaxOut
		*out = new(float64)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerPassToTarget != nil {
		in, out := &in.LoadBalancerPassToTarget, &out.LoadBalancerPassToTarget
		*out = new(bool)
		**out = **in
	}
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.LogTopicID != nil {
		in, out := &in.LogTopicID, &out.LogTopicID
		*out = new(string)
		**out = **in
	}
	if in.MasterZoneID != nil {
		in, out := &in.MasterZoneID, &out.MasterZoneID
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.SLAType != nil {
		in, out := &in.SLAType, &out.SLAType
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SlaveZoneID != nil {
		in, out := &in.SlaveZoneID, &out.SlaveZoneID
		*out = new(string)
		**out = **in
	}
	if in.SnatIps != nil {
		in, out := &in.SnatIps, &out.SnatIps
		*out = make([]SnatIpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatPro != nil {
		in, out := &in.SnatPro, &out.SnatPro
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetRegionInfoRegion != nil {
		in, out := &in.TargetRegionInfoRegion, &out.TargetRegionInfoRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetRegionInfoVPCID != nil {
		in, out := &in.TargetRegionInfoVPCID, &out.TargetRegionInfoVPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.VipIsp != nil {
		in, out := &in.VipIsp, &out.VipIsp
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsInitParameters) DeepCopyInto(out *IpsInitParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsInitParameters.
func (in *IpsInitParameters) DeepCopy() *IpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsObservation) DeepCopyInto(out *IpsObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsObservation.
func (in *IpsObservation) DeepCopy() *IpsObservation {
	if in == nil {
		return nil
	}
	out := new(IpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsParameters) DeepCopyInto(out *IpsParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsParameters.
func (in *IpsParameters) DeepCopy() *IpsParameters {
	if in == nil {
		return nil
	}
	out := new(IpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LB) DeepCopyInto(out *LB) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LB.
func (in *LB) DeepCopy() *LB {
	if in == nil {
		return nil
	}
	out := new(LB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LB) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBInitParameters) DeepCopyInto(out *LBInitParameters) {
	*out = *in
	if in.Forward != nil {
		in, out := &in.Forward, &out.Forward
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBInitParameters.
func (in *LBInitParameters) DeepCopy() *LBInitParameters {
	if in == nil {
		return nil
	}
	out := new(LBInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBList) DeepCopyInto(out *LBList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LB, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBList.
func (in *LBList) DeepCopy() *LBList {
	if in == nil {
		return nil
	}
	out := new(LBList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LBList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBObservation) DeepCopyInto(out *LBObservation) {
	*out = *in
	if in.Forward != nil {
		in, out := &in.Forward, &out.Forward
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBObservation.
func (in *LBObservation) DeepCopy() *LBObservation {
	if in == nil {
		return nil
	}
	out := new(LBObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBParameters) DeepCopyInto(out *LBParameters) {
	*out = *in
	if in.Forward != nil {
		in, out := &in.Forward, &out.Forward
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBParameters.
func (in *LBParameters) DeepCopy() *LBParameters {
	if in == nil {
		return nil
	}
	out := new(LBParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBSpec) DeepCopyInto(out *LBSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBSpec.
func (in *LBSpec) DeepCopy() *LBSpec {
	if in == nil {
		return nil
	}
	out := new(LBSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBStatus) DeepCopyInto(out *LBStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBStatus.
func (in *LBStatus) DeepCopy() *LBStatus {
	if in == nil {
		return nil
	}
	out := new(LBStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listener) DeepCopyInto(out *Listener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listener.
func (in *Listener) DeepCopy() *Listener {
	if in == nil {
		return nil
	}
	out := new(Listener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerInitParameters) DeepCopyInto(out *ListenerInitParameters) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(float64)
		**out = **in
	}
	if in.H2CSwitch != nil {
		in, out := &in.H2CSwitch, &out.H2CSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckContextType != nil {
		in, out := &in.HealthCheckContextType, &out.HealthCheckContextType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckRecvContext != nil {
		in, out := &in.HealthCheckRecvContext, &out.HealthCheckRecvContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSendContext != nil {
		in, out := &in.HealthCheckSendContext, &out.HealthCheckSendContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.KeepaliveEnable != nil {
		in, out := &in.KeepaliveEnable, &out.KeepaliveEnable
		*out = new(float64)
		**out = **in
	}
	if in.ListenerName != nil {
		in, out := &in.ListenerName, &out.ListenerName
		*out = new(string)
		**out = **in
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]MultiCertInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.SessionType != nil {
		in, out := &in.SessionType, &out.SessionType
		*out = new(string)
		**out = **in
	}
	if in.SnatEnable != nil {
		in, out := &in.SnatEnable, &out.SnatEnable
		*out = new(bool)
		**out = **in
	}
	if in.SniSwitch != nil {
		in, out := &in.SniSwitch, &out.SniSwitch
		*out = new(bool)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerInitParameters.
func (in *ListenerInitParameters) DeepCopy() *ListenerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerList) DeepCopyInto(out *ListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerList.
func (in *ListenerList) DeepCopy() *ListenerList {
	if in == nil {
		return nil
	}
	out := new(ListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerObservation) DeepCopyInto(out *ListenerObservation) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(float64)
		**out = **in
	}
	if in.H2CSwitch != nil {
		in, out := &in.H2CSwitch, &out.H2CSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckContextType != nil {
		in, out := &in.HealthCheckContextType, &out.HealthCheckContextType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckRecvContext != nil {
		in, out := &in.HealthCheckRecvContext, &out.HealthCheckRecvContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSendContext != nil {
		in, out := &in.HealthCheckSendContext, &out.HealthCheckSendContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeepaliveEnable != nil {
		in, out := &in.KeepaliveEnable, &out.KeepaliveEnable
		*out = new(float64)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerName != nil {
		in, out := &in.ListenerName, &out.ListenerName
		*out = new(string)
		**out = **in
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]MultiCertInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.SessionType != nil {
		in, out := &in.SessionType, &out.SessionType
		*out = new(string)
		**out = **in
	}
	if in.SnatEnable != nil {
		in, out := &in.SnatEnable, &out.SnatEnable
		*out = new(bool)
		**out = **in
	}
	if in.SniSwitch != nil {
		in, out := &in.SniSwitch, &out.SniSwitch
		*out = new(bool)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerObservation.
func (in *ListenerObservation) DeepCopy() *ListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerParameters) DeepCopyInto(out *ListenerParameters) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(float64)
		**out = **in
	}
	if in.H2CSwitch != nil {
		in, out := &in.H2CSwitch, &out.H2CSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckContextType != nil {
		in, out := &in.HealthCheckContextType, &out.HealthCheckContextType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckRecvContext != nil {
		in, out := &in.HealthCheckRecvContext, &out.HealthCheckRecvContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSendContext != nil {
		in, out := &in.HealthCheckSendContext, &out.HealthCheckSendContext
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.KeepaliveEnable != nil {
		in, out := &in.KeepaliveEnable, &out.KeepaliveEnable
		*out = new(float64)
		**out = **in
	}
	if in.ListenerName != nil {
		in, out := &in.ListenerName, &out.ListenerName
		*out = new(string)
		**out = **in
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]MultiCertInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.SessionType != nil {
		in, out := &in.SessionType, &out.SessionType
		*out = new(string)
		**out = **in
	}
	if in.SnatEnable != nil {
		in, out := &in.SnatEnable, &out.SnatEnable
		*out = new(bool)
		**out = **in
	}
	if in.SniSwitch != nil {
		in, out := &in.SniSwitch, &out.SniSwitch
		*out = new(bool)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerParameters.
func (in *ListenerParameters) DeepCopy() *ListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRule) DeepCopyInto(out *ListenerRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRule.
func (in *ListenerRule) DeepCopy() *ListenerRule {
	if in == nil {
		return nil
	}
	out := new(ListenerRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleInitParameters) DeepCopyInto(out *ListenerRuleInitParameters) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForwardType != nil {
		in, out := &in.ForwardType, &out.ForwardType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.Http2Switch != nil {
		in, out := &in.Http2Switch, &out.Http2Switch
		*out = new(bool)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]ListenerRuleMultiCertInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Quic != nil {
		in, out := &in.Quic, &out.Quic
		*out = new(bool)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleInitParameters.
func (in *ListenerRuleInitParameters) DeepCopy() *ListenerRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleList) DeepCopyInto(out *ListenerRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListenerRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleList.
func (in *ListenerRuleList) DeepCopy() *ListenerRuleList {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleMultiCertInfoInitParameters) DeepCopyInto(out *ListenerRuleMultiCertInfoInitParameters) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleMultiCertInfoInitParameters.
func (in *ListenerRuleMultiCertInfoInitParameters) DeepCopy() *ListenerRuleMultiCertInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleMultiCertInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleMultiCertInfoObservation) DeepCopyInto(out *ListenerRuleMultiCertInfoObservation) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleMultiCertInfoObservation.
func (in *ListenerRuleMultiCertInfoObservation) DeepCopy() *ListenerRuleMultiCertInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleMultiCertInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleMultiCertInfoParameters) DeepCopyInto(out *ListenerRuleMultiCertInfoParameters) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleMultiCertInfoParameters.
func (in *ListenerRuleMultiCertInfoParameters) DeepCopy() *ListenerRuleMultiCertInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleMultiCertInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleObservation) DeepCopyInto(out *ListenerRuleObservation) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForwardType != nil {
		in, out := &in.ForwardType, &out.ForwardType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.Http2Switch != nil {
		in, out := &in.Http2Switch, &out.Http2Switch
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]ListenerRuleMultiCertInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Quic != nil {
		in, out := &in.Quic, &out.Quic
		*out = new(bool)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleObservation.
func (in *ListenerRuleObservation) DeepCopy() *ListenerRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleParameters) DeepCopyInto(out *ListenerRuleParameters) {
	*out = *in
	if in.CertificateCAID != nil {
		in, out := &in.CertificateCAID, &out.CertificateCAID
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSSLMode != nil {
		in, out := &in.CertificateSSLMode, &out.CertificateSSLMode
		*out = new(string)
		**out = **in
	}
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForwardType != nil {
		in, out := &in.ForwardType, &out.ForwardType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPCode != nil {
		in, out := &in.HealthCheckHTTPCode, &out.HealthCheckHTTPCode
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPDomain != nil {
		in, out := &in.HealthCheckHTTPDomain, &out.HealthCheckHTTPDomain
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPMethod != nil {
		in, out := &in.HealthCheckHTTPMethod, &out.HealthCheckHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHTTPPath != nil {
		in, out := &in.HealthCheckHTTPPath, &out.HealthCheckHTTPPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHealthNum != nil {
		in, out := &in.HealthCheckHealthNum, &out.HealthCheckHealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckIntervalTime != nil {
		in, out := &in.HealthCheckIntervalTime, &out.HealthCheckIntervalTime
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPort != nil {
		in, out := &in.HealthCheckPort, &out.HealthCheckPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckSwitch != nil {
		in, out := &in.HealthCheckSwitch, &out.HealthCheckSwitch
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckTimeOut != nil {
		in, out := &in.HealthCheckTimeOut, &out.HealthCheckTimeOut
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckUnhealthNum != nil {
		in, out := &in.HealthCheckUnhealthNum, &out.HealthCheckUnhealthNum
		*out = new(float64)
		**out = **in
	}
	if in.HealthSourceIPType != nil {
		in, out := &in.HealthSourceIPType, &out.HealthSourceIPType
		*out = new(float64)
		**out = **in
	}
	if in.Http2Switch != nil {
		in, out := &in.Http2Switch, &out.Http2Switch
		*out = new(bool)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiCertInfo != nil {
		in, out := &in.MultiCertInfo, &out.MultiCertInfo
		*out = make([]ListenerRuleMultiCertInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Quic != nil {
		in, out := &in.Quic, &out.Quic
		*out = new(bool)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.SessionExpireTime != nil {
		in, out := &in.SessionExpireTime, &out.SessionExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleParameters.
func (in *ListenerRuleParameters) DeepCopy() *ListenerRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpec) DeepCopyInto(out *ListenerRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpec.
func (in *ListenerRuleSpec) DeepCopy() *ListenerRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleStatus) DeepCopyInto(out *ListenerRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleStatus.
func (in *ListenerRuleStatus) DeepCopy() *ListenerRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec) DeepCopyInto(out *ListenerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec.
func (in *ListenerSpec) DeepCopy() *ListenerSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSet) DeepCopyInto(out *LogSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSet.
func (in *LogSet) DeepCopy() *LogSet {
	if in == nil {
		return nil
	}
	out := new(LogSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetInitParameters) DeepCopyInto(out *LogSetInitParameters) {
	*out = *in
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetInitParameters.
func (in *LogSetInitParameters) DeepCopy() *LogSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetList) DeepCopyInto(out *LogSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetList.
func (in *LogSetList) DeepCopy() *LogSetList {
	if in == nil {
		return nil
	}
	out := new(LogSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetObservation) DeepCopyInto(out *LogSetObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.TopicCount != nil {
		in, out := &in.TopicCount, &out.TopicCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetObservation.
func (in *LogSetObservation) DeepCopy() *LogSetObservation {
	if in == nil {
		return nil
	}
	out := new(LogSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetParameters) DeepCopyInto(out *LogSetParameters) {
	*out = *in
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetParameters.
func (in *LogSetParameters) DeepCopy() *LogSetParameters {
	if in == nil {
		return nil
	}
	out := new(LogSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetSpec) DeepCopyInto(out *LogSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetSpec.
func (in *LogSetSpec) DeepCopy() *LogSetSpec {
	if in == nil {
		return nil
	}
	out := new(LogSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSetStatus) DeepCopyInto(out *LogSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSetStatus.
func (in *LogSetStatus) DeepCopy() *LogSetStatus {
	if in == nil {
		return nil
	}
	out := new(LogSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopic) DeepCopyInto(out *LogTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopic.
func (in *LogTopic) DeepCopy() *LogTopic {
	if in == nil {
		return nil
	}
	out := new(LogTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicInitParameters) DeepCopyInto(out *LogTopicInitParameters) {
	*out = *in
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.LogSetIDRef != nil {
		in, out := &in.LogSetIDRef, &out.LogSetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogSetIDSelector != nil {
		in, out := &in.LogSetIDSelector, &out.LogSetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicInitParameters.
func (in *LogTopicInitParameters) DeepCopy() *LogTopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogTopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicList) DeepCopyInto(out *LogTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicList.
func (in *LogTopicList) DeepCopy() *LogTopicList {
	if in == nil {
		return nil
	}
	out := new(LogTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicObservation) DeepCopyInto(out *LogTopicObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicObservation.
func (in *LogTopicObservation) DeepCopy() *LogTopicObservation {
	if in == nil {
		return nil
	}
	out := new(LogTopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicParameters) DeepCopyInto(out *LogTopicParameters) {
	*out = *in
	if in.LogSetID != nil {
		in, out := &in.LogSetID, &out.LogSetID
		*out = new(string)
		**out = **in
	}
	if in.LogSetIDRef != nil {
		in, out := &in.LogSetIDRef, &out.LogSetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogSetIDSelector != nil {
		in, out := &in.LogSetIDSelector, &out.LogSetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicParameters.
func (in *LogTopicParameters) DeepCopy() *LogTopicParameters {
	if in == nil {
		return nil
	}
	out := new(LogTopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicSpec) DeepCopyInto(out *LogTopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicSpec.
func (in *LogTopicSpec) DeepCopy() *LogTopicSpec {
	if in == nil {
		return nil
	}
	out := new(LogTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTopicStatus) DeepCopyInto(out *LogTopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTopicStatus.
func (in *LogTopicStatus) DeepCopy() *LogTopicStatus {
	if in == nil {
		return nil
	}
	out := new(LogTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCertInfoInitParameters) DeepCopyInto(out *MultiCertInfoInitParameters) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCertInfoInitParameters.
func (in *MultiCertInfoInitParameters) DeepCopy() *MultiCertInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultiCertInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCertInfoObservation) DeepCopyInto(out *MultiCertInfoObservation) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCertInfoObservation.
func (in *MultiCertInfoObservation) DeepCopy() *MultiCertInfoObservation {
	if in == nil {
		return nil
	}
	out := new(MultiCertInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCertInfoParameters) DeepCopyInto(out *MultiCertInfoParameters) {
	*out = *in
	if in.CertIDList != nil {
		in, out := &in.CertIDList, &out.CertIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCertInfoParameters.
func (in *MultiCertInfoParameters) DeepCopy() *MultiCertInfoParameters {
	if in == nil {
		return nil
	}
	out := new(MultiCertInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthInitParameters) DeepCopyInto(out *OauthInitParameters) {
	*out = *in
	if in.OauthEnable != nil {
		in, out := &in.OauthEnable, &out.OauthEnable
		*out = new(bool)
		**out = **in
	}
	if in.OauthFailureStatus != nil {
		in, out := &in.OauthFailureStatus, &out.OauthFailureStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthInitParameters.
func (in *OauthInitParameters) DeepCopy() *OauthInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthObservation) DeepCopyInto(out *OauthObservation) {
	*out = *in
	if in.OauthEnable != nil {
		in, out := &in.OauthEnable, &out.OauthEnable
		*out = new(bool)
		**out = **in
	}
	if in.OauthFailureStatus != nil {
		in, out := &in.OauthFailureStatus, &out.OauthFailureStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthObservation.
func (in *OauthObservation) DeepCopy() *OauthObservation {
	if in == nil {
		return nil
	}
	out := new(OauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthParameters) DeepCopyInto(out *OauthParameters) {
	*out = *in
	if in.OauthEnable != nil {
		in, out := &in.OauthEnable, &out.OauthEnable
		*out = new(bool)
		**out = **in
	}
	if in.OauthFailureStatus != nil {
		in, out := &in.OauthFailureStatus, &out.OauthFailureStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthParameters.
func (in *OauthParameters) DeepCopy() *OauthParameters {
	if in == nil {
		return nil
	}
	out := new(OauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redirection) DeepCopyInto(out *Redirection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redirection.
func (in *Redirection) DeepCopy() *Redirection {
	if in == nil {
		return nil
	}
	out := new(Redirection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Redirection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionInitParameters) DeepCopyInto(out *RedirectionInitParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DeleteAllAutoRewrite != nil {
		in, out := &in.DeleteAllAutoRewrite, &out.DeleteAllAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoRewrite != nil {
		in, out := &in.IsAutoRewrite, &out.IsAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.SourceListenerID != nil {
		in, out := &in.SourceListenerID, &out.SourceListenerID
		*out = new(string)
		**out = **in
	}
	if in.SourceListenerIDRef != nil {
		in, out := &in.SourceListenerIDRef, &out.SourceListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceListenerIDSelector != nil {
		in, out := &in.SourceListenerIDSelector, &out.SourceListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRuleID != nil {
		in, out := &in.SourceRuleID, &out.SourceRuleID
		*out = new(string)
		**out = **in
	}
	if in.SourceRuleIDRef != nil {
		in, out := &in.SourceRuleIDRef, &out.SourceRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRuleIDSelector != nil {
		in, out := &in.SourceRuleIDSelector, &out.SourceRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetListenerID != nil {
		in, out := &in.TargetListenerID, &out.TargetListenerID
		*out = new(string)
		**out = **in
	}
	if in.TargetListenerIDRef != nil {
		in, out := &in.TargetListenerIDRef, &out.TargetListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetListenerIDSelector != nil {
		in, out := &in.TargetListenerIDSelector, &out.TargetListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetRuleID != nil {
		in, out := &in.TargetRuleID, &out.TargetRuleID
		*out = new(string)
		**out = **in
	}
	if in.TargetRuleIDRef != nil {
		in, out := &in.TargetRuleIDRef, &out.TargetRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetRuleIDSelector != nil {
		in, out := &in.TargetRuleIDSelector, &out.TargetRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionInitParameters.
func (in *RedirectionInitParameters) DeepCopy() *RedirectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionList) DeepCopyInto(out *RedirectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Redirection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionList.
func (in *RedirectionList) DeepCopy() *RedirectionList {
	if in == nil {
		return nil
	}
	out := new(RedirectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedirectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionObservation) DeepCopyInto(out *RedirectionObservation) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.DeleteAllAutoRewrite != nil {
		in, out := &in.DeleteAllAutoRewrite, &out.DeleteAllAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoRewrite != nil {
		in, out := &in.IsAutoRewrite, &out.IsAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.SourceListenerID != nil {
		in, out := &in.SourceListenerID, &out.SourceListenerID
		*out = new(string)
		**out = **in
	}
	if in.SourceRuleID != nil {
		in, out := &in.SourceRuleID, &out.SourceRuleID
		*out = new(string)
		**out = **in
	}
	if in.TargetListenerID != nil {
		in, out := &in.TargetListenerID, &out.TargetListenerID
		*out = new(string)
		**out = **in
	}
	if in.TargetRuleID != nil {
		in, out := &in.TargetRuleID, &out.TargetRuleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionObservation.
func (in *RedirectionObservation) DeepCopy() *RedirectionObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionParameters) DeepCopyInto(out *RedirectionParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DeleteAllAutoRewrite != nil {
		in, out := &in.DeleteAllAutoRewrite, &out.DeleteAllAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoRewrite != nil {
		in, out := &in.IsAutoRewrite, &out.IsAutoRewrite
		*out = new(bool)
		**out = **in
	}
	if in.SourceListenerID != nil {
		in, out := &in.SourceListenerID, &out.SourceListenerID
		*out = new(string)
		**out = **in
	}
	if in.SourceListenerIDRef != nil {
		in, out := &in.SourceListenerIDRef, &out.SourceListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceListenerIDSelector != nil {
		in, out := &in.SourceListenerIDSelector, &out.SourceListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRuleID != nil {
		in, out := &in.SourceRuleID, &out.SourceRuleID
		*out = new(string)
		**out = **in
	}
	if in.SourceRuleIDRef != nil {
		in, out := &in.SourceRuleIDRef, &out.SourceRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRuleIDSelector != nil {
		in, out := &in.SourceRuleIDSelector, &out.SourceRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetListenerID != nil {
		in, out := &in.TargetListenerID, &out.TargetListenerID
		*out = new(string)
		**out = **in
	}
	if in.TargetListenerIDRef != nil {
		in, out := &in.TargetListenerIDRef, &out.TargetListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetListenerIDSelector != nil {
		in, out := &in.TargetListenerIDSelector, &out.TargetListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetRuleID != nil {
		in, out := &in.TargetRuleID, &out.TargetRuleID
		*out = new(string)
		**out = **in
	}
	if in.TargetRuleIDRef != nil {
		in, out := &in.TargetRuleIDRef, &out.TargetRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetRuleIDSelector != nil {
		in, out := &in.TargetRuleIDSelector, &out.TargetRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionParameters.
func (in *RedirectionParameters) DeepCopy() *RedirectionParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionSpec) DeepCopyInto(out *RedirectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionSpec.
func (in *RedirectionSpec) DeepCopy() *RedirectionSpec {
	if in == nil {
		return nil
	}
	out := new(RedirectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectionStatus) DeepCopyInto(out *RedirectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectionStatus.
func (in *RedirectionStatus) DeepCopy() *RedirectionStatus {
	if in == nil {
		return nil
	}
	out := new(RedirectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIp) DeepCopyInto(out *SnatIp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIp.
func (in *SnatIp) DeepCopy() *SnatIp {
	if in == nil {
		return nil
	}
	out := new(SnatIp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnatIp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpInitParameters) DeepCopyInto(out *SnatIpInitParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]IpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpInitParameters.
func (in *SnatIpInitParameters) DeepCopy() *SnatIpInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIpInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpList) DeepCopyInto(out *SnatIpList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnatIp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpList.
func (in *SnatIpList) DeepCopy() *SnatIpList {
	if in == nil {
		return nil
	}
	out := new(SnatIpList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnatIpList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpObservation) DeepCopyInto(out *SnatIpObservation) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]IpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpObservation.
func (in *SnatIpObservation) DeepCopy() *SnatIpObservation {
	if in == nil {
		return nil
	}
	out := new(SnatIpObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpParameters) DeepCopyInto(out *SnatIpParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]IpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpParameters.
func (in *SnatIpParameters) DeepCopy() *SnatIpParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpSpec) DeepCopyInto(out *SnatIpSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpSpec.
func (in *SnatIpSpec) DeepCopy() *SnatIpSpec {
	if in == nil {
		return nil
	}
	out := new(SnatIpSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpStatus) DeepCopyInto(out *SnatIpStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpStatus.
func (in *SnatIpStatus) DeepCopy() *SnatIpStatus {
	if in == nil {
		return nil
	}
	out := new(SnatIpStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpsInitParameters) DeepCopyInto(out *SnatIpsInitParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpsInitParameters.
func (in *SnatIpsInitParameters) DeepCopy() *SnatIpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpsObservation) DeepCopyInto(out *SnatIpsObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpsObservation.
func (in *SnatIpsObservation) DeepCopy() *SnatIpsObservation {
	if in == nil {
		return nil
	}
	out := new(SnatIpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIpsParameters) DeepCopyInto(out *SnatIpsParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIpsParameters.
func (in *SnatIpsParameters) DeepCopy() *SnatIpsParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroup) DeepCopyInto(out *TargetGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroup.
func (in *TargetGroup) DeepCopy() *TargetGroup {
	if in == nil {
		return nil
	}
	out := new(TargetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachment) DeepCopyInto(out *TargetGroupAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachment.
func (in *TargetGroupAttachment) DeepCopy() *TargetGroupAttachment {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentInitParameters) DeepCopyInto(out *TargetGroupAttachmentInitParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.RuleIDRef != nil {
		in, out := &in.RuleIDRef, &out.RuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleIDSelector != nil {
		in, out := &in.RuleIDSelector, &out.RuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupIDRef != nil {
		in, out := &in.TargetGroupIDRef, &out.TargetGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupIDSelector != nil {
		in, out := &in.TargetGroupIDSelector, &out.TargetGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentInitParameters.
func (in *TargetGroupAttachmentInitParameters) DeepCopy() *TargetGroupAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentList) DeepCopyInto(out *TargetGroupAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGroupAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentList.
func (in *TargetGroupAttachmentList) DeepCopy() *TargetGroupAttachmentList {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentObservation) DeepCopyInto(out *TargetGroupAttachmentObservation) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentObservation.
func (in *TargetGroupAttachmentObservation) DeepCopy() *TargetGroupAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentParameters) DeepCopyInto(out *TargetGroupAttachmentParameters) {
	*out = *in
	if in.ClbID != nil {
		in, out := &in.ClbID, &out.ClbID
		*out = new(string)
		**out = **in
	}
	if in.ClbIDRef != nil {
		in, out := &in.ClbIDRef, &out.ClbIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClbIDSelector != nil {
		in, out := &in.ClbIDSelector, &out.ClbIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.RuleIDRef != nil {
		in, out := &in.RuleIDRef, &out.RuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleIDSelector != nil {
		in, out := &in.RuleIDSelector, &out.RuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupIDRef != nil {
		in, out := &in.TargetGroupIDRef, &out.TargetGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupIDSelector != nil {
		in, out := &in.TargetGroupIDSelector, &out.TargetGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentParameters.
func (in *TargetGroupAttachmentParameters) DeepCopy() *TargetGroupAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentSpec) DeepCopyInto(out *TargetGroupAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentSpec.
func (in *TargetGroupAttachmentSpec) DeepCopy() *TargetGroupAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentStatus) DeepCopyInto(out *TargetGroupAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentStatus.
func (in *TargetGroupAttachmentStatus) DeepCopy() *TargetGroupAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInitParameters) DeepCopyInto(out *TargetGroupInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupInstances != nil {
		in, out := &in.TargetGroupInstances, &out.TargetGroupInstances
		*out = make([]TargetGroupInstancesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetGroupName != nil {
		in, out := &in.TargetGroupName, &out.TargetGroupName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInitParameters.
func (in *TargetGroupInitParameters) DeepCopy() *TargetGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachment) DeepCopyInto(out *TargetGroupInstanceAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachment.
func (in *TargetGroupInstanceAttachment) DeepCopy() *TargetGroupInstanceAttachment {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupInstanceAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentInitParameters) DeepCopyInto(out *TargetGroupInstanceAttachmentInitParameters) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupIDRef != nil {
		in, out := &in.TargetGroupIDRef, &out.TargetGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupIDSelector != nil {
		in, out := &in.TargetGroupIDSelector, &out.TargetGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentInitParameters.
func (in *TargetGroupInstanceAttachmentInitParameters) DeepCopy() *TargetGroupInstanceAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentList) DeepCopyInto(out *TargetGroupInstanceAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGroupInstanceAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentList.
func (in *TargetGroupInstanceAttachmentList) DeepCopy() *TargetGroupInstanceAttachmentList {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupInstanceAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentObservation) DeepCopyInto(out *TargetGroupInstanceAttachmentObservation) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentObservation.
func (in *TargetGroupInstanceAttachmentObservation) DeepCopy() *TargetGroupInstanceAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentParameters) DeepCopyInto(out *TargetGroupInstanceAttachmentParameters) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupID != nil {
		in, out := &in.TargetGroupID, &out.TargetGroupID
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupIDRef != nil {
		in, out := &in.TargetGroupIDRef, &out.TargetGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupIDSelector != nil {
		in, out := &in.TargetGroupIDSelector, &out.TargetGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentParameters.
func (in *TargetGroupInstanceAttachmentParameters) DeepCopy() *TargetGroupInstanceAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentSpec) DeepCopyInto(out *TargetGroupInstanceAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentSpec.
func (in *TargetGroupInstanceAttachmentSpec) DeepCopy() *TargetGroupInstanceAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstanceAttachmentStatus) DeepCopyInto(out *TargetGroupInstanceAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstanceAttachmentStatus.
func (in *TargetGroupInstanceAttachmentStatus) DeepCopy() *TargetGroupInstanceAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstanceAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstancesInitParameters) DeepCopyInto(out *TargetGroupInstancesInitParameters) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.NewPort != nil {
		in, out := &in.NewPort, &out.NewPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstancesInitParameters.
func (in *TargetGroupInstancesInitParameters) DeepCopy() *TargetGroupInstancesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstancesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstancesObservation) DeepCopyInto(out *TargetGroupInstancesObservation) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.NewPort != nil {
		in, out := &in.NewPort, &out.NewPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstancesObservation.
func (in *TargetGroupInstancesObservation) DeepCopy() *TargetGroupInstancesObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstancesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInstancesParameters) DeepCopyInto(out *TargetGroupInstancesParameters) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.NewPort != nil {
		in, out := &in.NewPort, &out.NewPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInstancesParameters.
func (in *TargetGroupInstancesParameters) DeepCopy() *TargetGroupInstancesParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInstancesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupList) DeepCopyInto(out *TargetGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupList.
func (in *TargetGroupList) DeepCopy() *TargetGroupList {
	if in == nil {
		return nil
	}
	out := new(TargetGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupObservation) DeepCopyInto(out *TargetGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupInstances != nil {
		in, out := &in.TargetGroupInstances, &out.TargetGroupInstances
		*out = make([]TargetGroupInstancesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetGroupName != nil {
		in, out := &in.TargetGroupName, &out.TargetGroupName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupObservation.
func (in *TargetGroupObservation) DeepCopy() *TargetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupParameters) DeepCopyInto(out *TargetGroupParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetGroupInstances != nil {
		in, out := &in.TargetGroupInstances, &out.TargetGroupInstances
		*out = make([]TargetGroupInstancesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetGroupName != nil {
		in, out := &in.TargetGroupName, &out.TargetGroupName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupParameters.
func (in *TargetGroupParameters) DeepCopy() *TargetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupSpec) DeepCopyInto(out *TargetGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupSpec.
func (in *TargetGroupSpec) DeepCopy() *TargetGroupSpec {
	if in == nil {
		return nil
	}
	out := new(TargetGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupStatus) DeepCopyInto(out *TargetGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupStatus.
func (in *TargetGroupStatus) DeepCopy() *TargetGroupStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsInitParameters) DeepCopyInto(out *TargetsInitParameters) {
	*out = *in
	if in.EniIP != nil {
		in, out := &in.EniIP, &out.EniIP
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsInitParameters.
func (in *TargetsInitParameters) DeepCopy() *TargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsObservation) DeepCopyInto(out *TargetsObservation) {
	*out = *in
	if in.EniIP != nil {
		in, out := &in.EniIP, &out.EniIP
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsObservation.
func (in *TargetsObservation) DeepCopy() *TargetsObservation {
	if in == nil {
		return nil
	}
	out := new(TargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsParameters) DeepCopyInto(out *TargetsParameters) {
	*out = *in
	if in.EniIP != nil {
		in, out := &in.EniIP, &out.EniIP
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsParameters.
func (in *TargetsParameters) DeepCopy() *TargetsParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsParameters)
	in.DeepCopyInto(out)
	return out
}
