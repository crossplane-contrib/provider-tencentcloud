//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortIncompleteMultipartUploadInitParameters) DeepCopyInto(out *AbortIncompleteMultipartUploadInitParameters) {
	*out = *in
	if in.DaysAfterInitiation != nil {
		in, out := &in.DaysAfterInitiation, &out.DaysAfterInitiation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortIncompleteMultipartUploadInitParameters.
func (in *AbortIncompleteMultipartUploadInitParameters) DeepCopy() *AbortIncompleteMultipartUploadInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbortIncompleteMultipartUploadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortIncompleteMultipartUploadObservation) DeepCopyInto(out *AbortIncompleteMultipartUploadObservation) {
	*out = *in
	if in.DaysAfterInitiation != nil {
		in, out := &in.DaysAfterInitiation, &out.DaysAfterInitiation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortIncompleteMultipartUploadObservation.
func (in *AbortIncompleteMultipartUploadObservation) DeepCopy() *AbortIncompleteMultipartUploadObservation {
	if in == nil {
		return nil
	}
	out := new(AbortIncompleteMultipartUploadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortIncompleteMultipartUploadParameters) DeepCopyInto(out *AbortIncompleteMultipartUploadParameters) {
	*out = *in
	if in.DaysAfterInitiation != nil {
		in, out := &in.DaysAfterInitiation, &out.DaysAfterInitiation
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortIncompleteMultipartUploadParameters.
func (in *AbortIncompleteMultipartUploadParameters) DeepCopy() *AbortIncompleteMultipartUploadParameters {
	if in == nil {
		return nil
	}
	out := new(AbortIncompleteMultipartUploadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bucket) DeepCopyInto(out *Bucket) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bucket.
func (in *Bucket) DeepCopy() *Bucket {
	if in == nil {
		return nil
	}
	out := new(Bucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Bucket) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachment) DeepCopyInto(out *BucketDomainCertificateAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachment.
func (in *BucketDomainCertificateAttachment) DeepCopy() *BucketDomainCertificateAttachment {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketDomainCertificateAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentInitParameters) DeepCopyInto(out *BucketDomainCertificateAttachmentInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainCertificate != nil {
		in, out := &in.DomainCertificate, &out.DomainCertificate
		*out = make([]DomainCertificateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentInitParameters.
func (in *BucketDomainCertificateAttachmentInitParameters) DeepCopy() *BucketDomainCertificateAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentList) DeepCopyInto(out *BucketDomainCertificateAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketDomainCertificateAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentList.
func (in *BucketDomainCertificateAttachmentList) DeepCopy() *BucketDomainCertificateAttachmentList {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketDomainCertificateAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentObservation) DeepCopyInto(out *BucketDomainCertificateAttachmentObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DomainCertificate != nil {
		in, out := &in.DomainCertificate, &out.DomainCertificate
		*out = make([]DomainCertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentObservation.
func (in *BucketDomainCertificateAttachmentObservation) DeepCopy() *BucketDomainCertificateAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentParameters) DeepCopyInto(out *BucketDomainCertificateAttachmentParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainCertificate != nil {
		in, out := &in.DomainCertificate, &out.DomainCertificate
		*out = make([]DomainCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentParameters.
func (in *BucketDomainCertificateAttachmentParameters) DeepCopy() *BucketDomainCertificateAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentSpec) DeepCopyInto(out *BucketDomainCertificateAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentSpec.
func (in *BucketDomainCertificateAttachmentSpec) DeepCopy() *BucketDomainCertificateAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketDomainCertificateAttachmentStatus) DeepCopyInto(out *BucketDomainCertificateAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketDomainCertificateAttachmentStatus.
func (in *BucketDomainCertificateAttachmentStatus) DeepCopy() *BucketDomainCertificateAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(BucketDomainCertificateAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketInitParameters) DeepCopyInto(out *BucketInitParameters) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.ACLBody != nil {
		in, out := &in.ACLBody, &out.ACLBody
		*out = new(string)
		**out = **in
	}
	if in.AccelerationEnable != nil {
		in, out := &in.AccelerationEnable, &out.AccelerationEnable
		*out = new(bool)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CdcID != nil {
		in, out := &in.CdcID, &out.CdcID
		*out = new(string)
		**out = **in
	}
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableIntelligentTiering != nil {
		in, out := &in.EnableIntelligentTiering, &out.EnableIntelligentTiering
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.ForceClean != nil {
		in, out := &in.ForceClean, &out.ForceClean
		*out = new(bool)
		**out = **in
	}
	if in.IntelligentTieringDays != nil {
		in, out := &in.IntelligentTieringDays, &out.IntelligentTieringDays
		*out = new(float64)
		**out = **in
	}
	if in.IntelligentTieringRequestFrequent != nil {
		in, out := &in.IntelligentTieringRequestFrequent, &out.IntelligentTieringRequestFrequent
		*out = new(float64)
		**out = **in
	}
	if in.KMSID != nil {
		in, out := &in.KMSID, &out.KMSID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleRules != nil {
		in, out := &in.LifecycleRules, &out.LifecycleRules
		*out = make([]LifecycleRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogEnable != nil {
		in, out := &in.LogEnable, &out.LogEnable
		*out = new(bool)
		**out = **in
	}
	if in.LogPrefix != nil {
		in, out := &in.LogPrefix, &out.LogPrefix
		*out = new(string)
		**out = **in
	}
	if in.LogTargetBucket != nil {
		in, out := &in.LogTargetBucket, &out.LogTargetBucket
		*out = new(string)
		**out = **in
	}
	if in.MultiAz != nil {
		in, out := &in.MultiAz, &out.MultiAz
		*out = new(bool)
		**out = **in
	}
	if in.OriginDomainRules != nil {
		in, out := &in.OriginDomainRules, &out.OriginDomainRules
		*out = make([]OriginDomainRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginPullRules != nil {
		in, out := &in.OriginPullRules, &out.OriginPullRules
		*out = make([]OriginPullRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicaRole != nil {
		in, out := &in.ReplicaRole, &out.ReplicaRole
		*out = new(string)
		**out = **in
	}
	if in.ReplicaRules != nil {
		in, out := &in.ReplicaRules, &out.ReplicaRules
		*out = make([]ReplicaRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VersioningEnable != nil {
		in, out := &in.VersioningEnable, &out.VersioningEnable
		*out = new(bool)
		**out = **in
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = make([]WebsiteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketInitParameters.
func (in *BucketInitParameters) DeepCopy() *BucketInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketList) DeepCopyInto(out *BucketList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Bucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketList.
func (in *BucketList) DeepCopy() *BucketList {
	if in == nil {
		return nil
	}
	out := new(BucketList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObject) DeepCopyInto(out *BucketObject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObject.
func (in *BucketObject) DeepCopy() *BucketObject {
	if in == nil {
		return nil
	}
	out := new(BucketObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketObject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectInitParameters) DeepCopyInto(out *BucketObjectInitParameters) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectInitParameters.
func (in *BucketObjectInitParameters) DeepCopy() *BucketObjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketObjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectList) DeepCopyInto(out *BucketObjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketObject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectList.
func (in *BucketObjectList) DeepCopy() *BucketObjectList {
	if in == nil {
		return nil
	}
	out := new(BucketObjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketObjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectObservation) DeepCopyInto(out *BucketObjectObservation) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectObservation.
func (in *BucketObjectObservation) DeepCopy() *BucketObjectObservation {
	if in == nil {
		return nil
	}
	out := new(BucketObjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectParameters) DeepCopyInto(out *BucketObjectParameters) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectParameters.
func (in *BucketObjectParameters) DeepCopy() *BucketObjectParameters {
	if in == nil {
		return nil
	}
	out := new(BucketObjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectSpec) DeepCopyInto(out *BucketObjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectSpec.
func (in *BucketObjectSpec) DeepCopy() *BucketObjectSpec {
	if in == nil {
		return nil
	}
	out := new(BucketObjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectStatus) DeepCopyInto(out *BucketObjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectStatus.
func (in *BucketObjectStatus) DeepCopy() *BucketObjectStatus {
	if in == nil {
		return nil
	}
	out := new(BucketObjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObservation) DeepCopyInto(out *BucketObservation) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.ACLBody != nil {
		in, out := &in.ACLBody, &out.ACLBody
		*out = new(string)
		**out = **in
	}
	if in.AccelerationEnable != nil {
		in, out := &in.AccelerationEnable, &out.AccelerationEnable
		*out = new(bool)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CdcID != nil {
		in, out := &in.CdcID, &out.CdcID
		*out = new(string)
		**out = **in
	}
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CosBucketURL != nil {
		in, out := &in.CosBucketURL, &out.CosBucketURL
		*out = new(string)
		**out = **in
	}
	if in.EnableIntelligentTiering != nil {
		in, out := &in.EnableIntelligentTiering, &out.EnableIntelligentTiering
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.ForceClean != nil {
		in, out := &in.ForceClean, &out.ForceClean
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntelligentTieringDays != nil {
		in, out := &in.IntelligentTieringDays, &out.IntelligentTieringDays
		*out = new(float64)
		**out = **in
	}
	if in.IntelligentTieringRequestFrequent != nil {
		in, out := &in.IntelligentTieringRequestFrequent, &out.IntelligentTieringRequestFrequent
		*out = new(float64)
		**out = **in
	}
	if in.KMSID != nil {
		in, out := &in.KMSID, &out.KMSID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleRules != nil {
		in, out := &in.LifecycleRules, &out.LifecycleRules
		*out = make([]LifecycleRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogEnable != nil {
		in, out := &in.LogEnable, &out.LogEnable
		*out = new(bool)
		**out = **in
	}
	if in.LogPrefix != nil {
		in, out := &in.LogPrefix, &out.LogPrefix
		*out = new(string)
		**out = **in
	}
	if in.LogTargetBucket != nil {
		in, out := &in.LogTargetBucket, &out.LogTargetBucket
		*out = new(string)
		**out = **in
	}
	if in.MultiAz != nil {
		in, out := &in.MultiAz, &out.MultiAz
		*out = new(bool)
		**out = **in
	}
	if in.OriginDomainRules != nil {
		in, out := &in.OriginDomainRules, &out.OriginDomainRules
		*out = make([]OriginDomainRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginPullRules != nil {
		in, out := &in.OriginPullRules, &out.OriginPullRules
		*out = make([]OriginPullRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicaRole != nil {
		in, out := &in.ReplicaRole, &out.ReplicaRole
		*out = new(string)
		**out = **in
	}
	if in.ReplicaRules != nil {
		in, out := &in.ReplicaRules, &out.ReplicaRules
		*out = make([]ReplicaRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VersioningEnable != nil {
		in, out := &in.VersioningEnable, &out.VersioningEnable
		*out = new(bool)
		**out = **in
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = make([]WebsiteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObservation.
func (in *BucketObservation) DeepCopy() *BucketObservation {
	if in == nil {
		return nil
	}
	out := new(BucketObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketParameters) DeepCopyInto(out *BucketParameters) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = new(string)
		**out = **in
	}
	if in.ACLBody != nil {
		in, out := &in.ACLBody, &out.ACLBody
		*out = new(string)
		**out = **in
	}
	if in.AccelerationEnable != nil {
		in, out := &in.AccelerationEnable, &out.AccelerationEnable
		*out = new(bool)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CdcID != nil {
		in, out := &in.CdcID, &out.CdcID
		*out = new(string)
		**out = **in
	}
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableIntelligentTiering != nil {
		in, out := &in.EnableIntelligentTiering, &out.EnableIntelligentTiering
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.ForceClean != nil {
		in, out := &in.ForceClean, &out.ForceClean
		*out = new(bool)
		**out = **in
	}
	if in.IntelligentTieringDays != nil {
		in, out := &in.IntelligentTieringDays, &out.IntelligentTieringDays
		*out = new(float64)
		**out = **in
	}
	if in.IntelligentTieringRequestFrequent != nil {
		in, out := &in.IntelligentTieringRequestFrequent, &out.IntelligentTieringRequestFrequent
		*out = new(float64)
		**out = **in
	}
	if in.KMSID != nil {
		in, out := &in.KMSID, &out.KMSID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleRules != nil {
		in, out := &in.LifecycleRules, &out.LifecycleRules
		*out = make([]LifecycleRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogEnable != nil {
		in, out := &in.LogEnable, &out.LogEnable
		*out = new(bool)
		**out = **in
	}
	if in.LogPrefix != nil {
		in, out := &in.LogPrefix, &out.LogPrefix
		*out = new(string)
		**out = **in
	}
	if in.LogTargetBucket != nil {
		in, out := &in.LogTargetBucket, &out.LogTargetBucket
		*out = new(string)
		**out = **in
	}
	if in.MultiAz != nil {
		in, out := &in.MultiAz, &out.MultiAz
		*out = new(bool)
		**out = **in
	}
	if in.OriginDomainRules != nil {
		in, out := &in.OriginDomainRules, &out.OriginDomainRules
		*out = make([]OriginDomainRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginPullRules != nil {
		in, out := &in.OriginPullRules, &out.OriginPullRules
		*out = make([]OriginPullRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicaRole != nil {
		in, out := &in.ReplicaRole, &out.ReplicaRole
		*out = new(string)
		**out = **in
	}
	if in.ReplicaRules != nil {
		in, out := &in.ReplicaRules, &out.ReplicaRules
		*out = make([]ReplicaRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VersioningEnable != nil {
		in, out := &in.VersioningEnable, &out.VersioningEnable
		*out = new(bool)
		**out = **in
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = make([]WebsiteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketParameters.
func (in *BucketParameters) DeepCopy() *BucketParameters {
	if in == nil {
		return nil
	}
	out := new(BucketParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicy) DeepCopyInto(out *BucketPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicy.
func (in *BucketPolicy) DeepCopy() *BucketPolicy {
	if in == nil {
		return nil
	}
	out := new(BucketPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicyInitParameters) DeepCopyInto(out *BucketPolicyInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicyInitParameters.
func (in *BucketPolicyInitParameters) DeepCopy() *BucketPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicyList) DeepCopyInto(out *BucketPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicyList.
func (in *BucketPolicyList) DeepCopy() *BucketPolicyList {
	if in == nil {
		return nil
	}
	out := new(BucketPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicyObservation) DeepCopyInto(out *BucketPolicyObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicyObservation.
func (in *BucketPolicyObservation) DeepCopy() *BucketPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(BucketPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicyParameters) DeepCopyInto(out *BucketPolicyParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicyParameters.
func (in *BucketPolicyParameters) DeepCopy() *BucketPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(BucketPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicySpec) DeepCopyInto(out *BucketPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicySpec.
func (in *BucketPolicySpec) DeepCopy() *BucketPolicySpec {
	if in == nil {
		return nil
	}
	out := new(BucketPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketPolicyStatus) DeepCopyInto(out *BucketPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketPolicyStatus.
func (in *BucketPolicyStatus) DeepCopy() *BucketPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(BucketPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketSpec) DeepCopyInto(out *BucketSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketSpec.
func (in *BucketSpec) DeepCopy() *BucketSpec {
	if in == nil {
		return nil
	}
	out := new(BucketSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketStatus) DeepCopyInto(out *BucketStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketStatus.
func (in *BucketStatus) DeepCopy() *BucketStatus {
	if in == nil {
		return nil
	}
	out := new(BucketStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateInitParameters) DeepCopyInto(out *CertificateInitParameters) {
	*out = *in
	if in.CertType != nil {
		in, out := &in.CertType, &out.CertType
		*out = new(string)
		**out = **in
	}
	if in.CustomCert != nil {
		in, out := &in.CustomCert, &out.CustomCert
		*out = make([]CustomCertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateInitParameters.
func (in *CertificateInitParameters) DeepCopy() *CertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.CertType != nil {
		in, out := &in.CertType, &out.CertType
		*out = new(string)
		**out = **in
	}
	if in.CustomCert != nil {
		in, out := &in.CustomCert, &out.CustomCert
		*out = make([]CustomCertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.CertType != nil {
		in, out := &in.CertType, &out.CertType
		*out = new(string)
		**out = **in
	}
	if in.CustomCert != nil {
		in, out := &in.CustomCert, &out.CustomCert
		*out = make([]CustomCertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRulesInitParameters) DeepCopyInto(out *CorsRulesInitParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRulesInitParameters.
func (in *CorsRulesInitParameters) DeepCopy() *CorsRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRulesObservation) DeepCopyInto(out *CorsRulesObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRulesObservation.
func (in *CorsRulesObservation) DeepCopy() *CorsRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CorsRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRulesParameters) DeepCopyInto(out *CorsRulesParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRulesParameters.
func (in *CorsRulesParameters) DeepCopy() *CorsRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CorsRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCertInitParameters) DeepCopyInto(out *CustomCertInitParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.CertID != nil {
		in, out := &in.CertID, &out.CertID
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCertInitParameters.
func (in *CustomCertInitParameters) DeepCopy() *CustomCertInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCertObservation) DeepCopyInto(out *CustomCertObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.CertID != nil {
		in, out := &in.CertID, &out.CertID
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCertObservation.
func (in *CustomCertObservation) DeepCopy() *CustomCertObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCertParameters) DeepCopyInto(out *CustomCertParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.CertID != nil {
		in, out := &in.CertID, &out.CertID
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCertParameters.
func (in *CustomCertParameters) DeepCopy() *CustomCertParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainCertificateInitParameters) DeepCopyInto(out *DomainCertificateInitParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainCertificateInitParameters.
func (in *DomainCertificateInitParameters) DeepCopy() *DomainCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainCertificateObservation) DeepCopyInto(out *DomainCertificateObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainCertificateObservation.
func (in *DomainCertificateObservation) DeepCopy() *DomainCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(DomainCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainCertificateParameters) DeepCopyInto(out *DomainCertificateParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainCertificateParameters.
func (in *DomainCertificateParameters) DeepCopy() *DomainCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(DomainCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpirationInitParameters) DeepCopyInto(out *ExpirationInitParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.DeleteMarker != nil {
		in, out := &in.DeleteMarker, &out.DeleteMarker
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpirationInitParameters.
func (in *ExpirationInitParameters) DeepCopy() *ExpirationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExpirationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpirationObservation) DeepCopyInto(out *ExpirationObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.DeleteMarker != nil {
		in, out := &in.DeleteMarker, &out.DeleteMarker
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpirationObservation.
func (in *ExpirationObservation) DeepCopy() *ExpirationObservation {
	if in == nil {
		return nil
	}
	out := new(ExpirationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpirationParameters) DeepCopyInto(out *ExpirationParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.DeleteMarker != nil {
		in, out := &in.DeleteMarker, &out.DeleteMarker
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpirationParameters.
func (in *ExpirationParameters) DeepCopy() *ExpirationParameters {
	if in == nil {
		return nil
	}
	out := new(ExpirationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRulesInitParameters) DeepCopyInto(out *LifecycleRulesInitParameters) {
	*out = *in
	if in.AbortIncompleteMultipartUpload != nil {
		in, out := &in.AbortIncompleteMultipartUpload, &out.AbortIncompleteMultipartUpload
		*out = make([]AbortIncompleteMultipartUploadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = make([]ExpirationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterPrefix != nil {
		in, out := &in.FilterPrefix, &out.FilterPrefix
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NonCurrentExpiration != nil {
		in, out := &in.NonCurrentExpiration, &out.NonCurrentExpiration
		*out = make([]NonCurrentExpirationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonCurrentTransition != nil {
		in, out := &in.NonCurrentTransition, &out.NonCurrentTransition
		*out = make([]NonCurrentTransitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = make([]TransitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRulesInitParameters.
func (in *LifecycleRulesInitParameters) DeepCopy() *LifecycleRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRulesObservation) DeepCopyInto(out *LifecycleRulesObservation) {
	*out = *in
	if in.AbortIncompleteMultipartUpload != nil {
		in, out := &in.AbortIncompleteMultipartUpload, &out.AbortIncompleteMultipartUpload
		*out = make([]AbortIncompleteMultipartUploadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = make([]ExpirationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterPrefix != nil {
		in, out := &in.FilterPrefix, &out.FilterPrefix
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NonCurrentExpiration != nil {
		in, out := &in.NonCurrentExpiration, &out.NonCurrentExpiration
		*out = make([]NonCurrentExpirationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonCurrentTransition != nil {
		in, out := &in.NonCurrentTransition, &out.NonCurrentTransition
		*out = make([]NonCurrentTransitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = make([]TransitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRulesObservation.
func (in *LifecycleRulesObservation) DeepCopy() *LifecycleRulesObservation {
	if in == nil {
		return nil
	}
	out := new(LifecycleRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRulesParameters) DeepCopyInto(out *LifecycleRulesParameters) {
	*out = *in
	if in.AbortIncompleteMultipartUpload != nil {
		in, out := &in.AbortIncompleteMultipartUpload, &out.AbortIncompleteMultipartUpload
		*out = make([]AbortIncompleteMultipartUploadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = make([]ExpirationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterPrefix != nil {
		in, out := &in.FilterPrefix, &out.FilterPrefix
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NonCurrentExpiration != nil {
		in, out := &in.NonCurrentExpiration, &out.NonCurrentExpiration
		*out = make([]NonCurrentExpirationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonCurrentTransition != nil {
		in, out := &in.NonCurrentTransition, &out.NonCurrentTransition
		*out = make([]NonCurrentTransitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transition != nil {
		in, out := &in.Transition, &out.Transition
		*out = make([]TransitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRulesParameters.
func (in *LifecycleRulesParameters) DeepCopy() *LifecycleRulesParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentExpirationInitParameters) DeepCopyInto(out *NonCurrentExpirationInitParameters) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentExpirationInitParameters.
func (in *NonCurrentExpirationInitParameters) DeepCopy() *NonCurrentExpirationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NonCurrentExpirationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentExpirationObservation) DeepCopyInto(out *NonCurrentExpirationObservation) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentExpirationObservation.
func (in *NonCurrentExpirationObservation) DeepCopy() *NonCurrentExpirationObservation {
	if in == nil {
		return nil
	}
	out := new(NonCurrentExpirationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentExpirationParameters) DeepCopyInto(out *NonCurrentExpirationParameters) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentExpirationParameters.
func (in *NonCurrentExpirationParameters) DeepCopy() *NonCurrentExpirationParameters {
	if in == nil {
		return nil
	}
	out := new(NonCurrentExpirationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentTransitionInitParameters) DeepCopyInto(out *NonCurrentTransitionInitParameters) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentTransitionInitParameters.
func (in *NonCurrentTransitionInitParameters) DeepCopy() *NonCurrentTransitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(NonCurrentTransitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentTransitionObservation) DeepCopyInto(out *NonCurrentTransitionObservation) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentTransitionObservation.
func (in *NonCurrentTransitionObservation) DeepCopy() *NonCurrentTransitionObservation {
	if in == nil {
		return nil
	}
	out := new(NonCurrentTransitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NonCurrentTransitionParameters) DeepCopyInto(out *NonCurrentTransitionParameters) {
	*out = *in
	if in.NonCurrentDays != nil {
		in, out := &in.NonCurrentDays, &out.NonCurrentDays
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NonCurrentTransitionParameters.
func (in *NonCurrentTransitionParameters) DeepCopy() *NonCurrentTransitionParameters {
	if in == nil {
		return nil
	}
	out := new(NonCurrentTransitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginDomainRulesInitParameters) DeepCopyInto(out *OriginDomainRulesInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginDomainRulesInitParameters.
func (in *OriginDomainRulesInitParameters) DeepCopy() *OriginDomainRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OriginDomainRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginDomainRulesObservation) DeepCopyInto(out *OriginDomainRulesObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginDomainRulesObservation.
func (in *OriginDomainRulesObservation) DeepCopy() *OriginDomainRulesObservation {
	if in == nil {
		return nil
	}
	out := new(OriginDomainRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginDomainRulesParameters) DeepCopyInto(out *OriginDomainRulesParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginDomainRulesParameters.
func (in *OriginDomainRulesParameters) DeepCopy() *OriginDomainRulesParameters {
	if in == nil {
		return nil
	}
	out := new(OriginDomainRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullRulesInitParameters) DeepCopyInto(out *OriginPullRulesInitParameters) {
	*out = *in
	if in.CustomHTTPHeaders != nil {
		in, out := &in.CustomHTTPHeaders, &out.CustomHTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FollowHTTPHeaders != nil {
		in, out := &in.FollowHTTPHeaders, &out.FollowHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowQueryString != nil {
		in, out := &in.FollowQueryString, &out.FollowQueryString
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirection != nil {
		in, out := &in.FollowRedirection, &out.FollowRedirection
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SyncBackToSource != nil {
		in, out := &in.SyncBackToSource, &out.SyncBackToSource
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullRulesInitParameters.
func (in *OriginPullRulesInitParameters) DeepCopy() *OriginPullRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OriginPullRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullRulesObservation) DeepCopyInto(out *OriginPullRulesObservation) {
	*out = *in
	if in.CustomHTTPHeaders != nil {
		in, out := &in.CustomHTTPHeaders, &out.CustomHTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FollowHTTPHeaders != nil {
		in, out := &in.FollowHTTPHeaders, &out.FollowHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowQueryString != nil {
		in, out := &in.FollowQueryString, &out.FollowQueryString
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirection != nil {
		in, out := &in.FollowRedirection, &out.FollowRedirection
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SyncBackToSource != nil {
		in, out := &in.SyncBackToSource, &out.SyncBackToSource
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullRulesObservation.
func (in *OriginPullRulesObservation) DeepCopy() *OriginPullRulesObservation {
	if in == nil {
		return nil
	}
	out := new(OriginPullRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullRulesParameters) DeepCopyInto(out *OriginPullRulesParameters) {
	*out = *in
	if in.CustomHTTPHeaders != nil {
		in, out := &in.CustomHTTPHeaders, &out.CustomHTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FollowHTTPHeaders != nil {
		in, out := &in.FollowHTTPHeaders, &out.FollowHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowQueryString != nil {
		in, out := &in.FollowQueryString, &out.FollowQueryString
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirection != nil {
		in, out := &in.FollowRedirection, &out.FollowRedirection
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SyncBackToSource != nil {
		in, out := &in.SyncBackToSource, &out.SyncBackToSource
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullRulesParameters.
func (in *OriginPullRulesParameters) DeepCopy() *OriginPullRulesParameters {
	if in == nil {
		return nil
	}
	out := new(OriginPullRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaRulesInitParameters) DeepCopyInto(out *ReplicaRulesInitParameters) {
	*out = *in
	if in.DestinationBucket != nil {
		in, out := &in.DestinationBucket, &out.DestinationBucket
		*out = new(string)
		**out = **in
	}
	if in.DestinationStorageClass != nil {
		in, out := &in.DestinationStorageClass, &out.DestinationStorageClass
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaRulesInitParameters.
func (in *ReplicaRulesInitParameters) DeepCopy() *ReplicaRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaRulesObservation) DeepCopyInto(out *ReplicaRulesObservation) {
	*out = *in
	if in.DestinationBucket != nil {
		in, out := &in.DestinationBucket, &out.DestinationBucket
		*out = new(string)
		**out = **in
	}
	if in.DestinationStorageClass != nil {
		in, out := &in.DestinationStorageClass, &out.DestinationStorageClass
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaRulesObservation.
func (in *ReplicaRulesObservation) DeepCopy() *ReplicaRulesObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicaRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaRulesParameters) DeepCopyInto(out *ReplicaRulesParameters) {
	*out = *in
	if in.DestinationBucket != nil {
		in, out := &in.DestinationBucket, &out.DestinationBucket
		*out = new(string)
		**out = **in
	}
	if in.DestinationStorageClass != nil {
		in, out := &in.DestinationStorageClass, &out.DestinationStorageClass
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaRulesParameters.
func (in *ReplicaRulesParameters) DeepCopy() *ReplicaRulesParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRulesInitParameters) DeepCopyInto(out *RoutingRulesInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRulesInitParameters.
func (in *RoutingRulesInitParameters) DeepCopy() *RoutingRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRulesObservation) DeepCopyInto(out *RoutingRulesObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRulesObservation.
func (in *RoutingRulesObservation) DeepCopy() *RoutingRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRulesParameters) DeepCopyInto(out *RoutingRulesParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRulesParameters.
func (in *RoutingRulesParameters) DeepCopy() *RoutingRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.ConditionErrorCode != nil {
		in, out := &in.ConditionErrorCode, &out.ConditionErrorCode
		*out = new(string)
		**out = **in
	}
	if in.ConditionPrefix != nil {
		in, out := &in.ConditionPrefix, &out.ConditionPrefix
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKey != nil {
		in, out := &in.RedirectReplaceKey, &out.RedirectReplaceKey
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKeyPrefix != nil {
		in, out := &in.RedirectReplaceKeyPrefix, &out.RedirectReplaceKeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.ConditionErrorCode != nil {
		in, out := &in.ConditionErrorCode, &out.ConditionErrorCode
		*out = new(string)
		**out = **in
	}
	if in.ConditionPrefix != nil {
		in, out := &in.ConditionPrefix, &out.ConditionPrefix
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKey != nil {
		in, out := &in.RedirectReplaceKey, &out.RedirectReplaceKey
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKeyPrefix != nil {
		in, out := &in.RedirectReplaceKeyPrefix, &out.RedirectReplaceKeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.ConditionErrorCode != nil {
		in, out := &in.ConditionErrorCode, &out.ConditionErrorCode
		*out = new(string)
		**out = **in
	}
	if in.ConditionPrefix != nil {
		in, out := &in.ConditionPrefix, &out.ConditionPrefix
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKey != nil {
		in, out := &in.RedirectReplaceKey, &out.RedirectReplaceKey
		*out = new(string)
		**out = **in
	}
	if in.RedirectReplaceKeyPrefix != nil {
		in, out := &in.RedirectReplaceKeyPrefix, &out.RedirectReplaceKeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitionInitParameters) DeepCopyInto(out *TransitionInitParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitionInitParameters.
func (in *TransitionInitParameters) DeepCopy() *TransitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitionObservation) DeepCopyInto(out *TransitionObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitionObservation.
func (in *TransitionObservation) DeepCopy() *TransitionObservation {
	if in == nil {
		return nil
	}
	out := new(TransitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitionParameters) DeepCopyInto(out *TransitionParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitionParameters.
func (in *TransitionParameters) DeepCopy() *TransitionParameters {
	if in == nil {
		return nil
	}
	out := new(TransitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteInitParameters) DeepCopyInto(out *WebsiteInitParameters) {
	*out = *in
	if in.ErrorDocument != nil {
		in, out := &in.ErrorDocument, &out.ErrorDocument
		*out = new(string)
		**out = **in
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
	if in.RedirectAllRequestsTo != nil {
		in, out := &in.RedirectAllRequestsTo, &out.RedirectAllRequestsTo
		*out = new(string)
		**out = **in
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = make([]RoutingRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteInitParameters.
func (in *WebsiteInitParameters) DeepCopy() *WebsiteInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebsiteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteObservation) DeepCopyInto(out *WebsiteObservation) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ErrorDocument != nil {
		in, out := &in.ErrorDocument, &out.ErrorDocument
		*out = new(string)
		**out = **in
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
	if in.RedirectAllRequestsTo != nil {
		in, out := &in.RedirectAllRequestsTo, &out.RedirectAllRequestsTo
		*out = new(string)
		**out = **in
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = make([]RoutingRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteObservation.
func (in *WebsiteObservation) DeepCopy() *WebsiteObservation {
	if in == nil {
		return nil
	}
	out := new(WebsiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteParameters) DeepCopyInto(out *WebsiteParameters) {
	*out = *in
	if in.ErrorDocument != nil {
		in, out := &in.ErrorDocument, &out.ErrorDocument
		*out = new(string)
		**out = **in
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
	if in.RedirectAllRequestsTo != nil {
		in, out := &in.RedirectAllRequestsTo, &out.RedirectAllRequestsTo
		*out = new(string)
		**out = **in
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = make([]RoutingRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteParameters.
func (in *WebsiteParameters) DeepCopy() *WebsiteParameters {
	if in == nil {
		return nil
	}
	out := new(WebsiteParameters)
	in.DeepCopyInto(out)
	return out
}
